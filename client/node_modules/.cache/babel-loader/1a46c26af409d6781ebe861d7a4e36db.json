{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/products/pages/CreateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PageHeading from '../../shared/ui/PageHeading';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport ImageUpload from '../../shared/formElements/ImageUpload';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport { createProduct } from '../../../redux/actionCreators/productActionCreators';\nimport categories from '../../../categories';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: '600px',\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center'\n  },\n  btn: {\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  select: {\n    [theme.breakpoints.down('xs')]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      fontSize: '13px'\n    }\n  },\n  previewBox: {\n    margin: '0 auto',\n    '&>img': {\n      width: '250px',\n      height: '250px'\n    }\n  }\n}));\n\nconst CreateProduct = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const [loadingImageUpload, setLoadingImageUpload] = useState(false);\n  const {\n    loading: loadingDelete\n  } = useSelector(state => state.productDelete || {});\n  const {\n    loading: loadingUpdate\n  } = useSelector(state => state.productCreate || {});\n  const {\n    loggedInUser\n  } = useSelector(state => state.userAuth);\n  const {\n    loading,\n    error\n  } = useSelector(state => state.productCreate || {});\n  const initialValues = {\n    name: 'Placeholder name',\n    price: 1,\n    countInStock: 1,\n    description: 'Placeholder description',\n    brand: 'Placeholder brand',\n    category: categories[0]\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    price: Yup.number('Must be a number').required('Price required').positive('Must be positive'),\n    countInStock: Yup.number('Must be a number').required('Count in Stock required').positive('Must be positive').integer('No decimal points'),\n    description: Yup.string().required('Description required'),\n    brand: Yup.string().required('Brand required'),\n    category: Yup.string().required('Category required').oneOf(categories)\n  });\n\n  const onSuccess = () => {\n    history.goBack();\n  };\n\n  const submitHandler = async (values, actions) => {\n    let imageUrl;\n\n    try {\n      setLoadingImageUpload(true);\n      imageUrl = await ref.current.handleUpload(values.name);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingImageUpload(false);\n    }\n\n    const productInfo = {\n      name: values.name,\n      price: values.price,\n      countInStock: values.countInStock,\n      imageUrl: imageUrl || '/images/placeholder.js',\n      description: values.description,\n      brand: values.brand,\n      category: values.category\n    };\n    console.log(productInfo);\n    dispatch(createProduct(loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token, productInfo, onSuccess));\n    actions.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      text: \"CREATE PRODUCT\",\n      paragraph: true,\n      size: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), (loading || loadingImageUpload || loadingDelete || loadingUpdate) && /*#__PURE__*/_jsxDEV(LoadingLinear, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: error,\n      severity: \"error\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: submitHandler,\n        validateOnMount: true,\n        enableReinitialize: true,\n        children: formik => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.iconButtonDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              TransitionComponent: Zoom,\n              title: \"Reset form\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                onClick: () => formik.resetForm(),\n                children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formControl,\n              children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                fieldName: \"name\",\n                type: \"text\",\n                label: \"Name\",\n                variant: \"outlined\",\n                values: formik.initialValues.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n                token: loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token,\n                ref: ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formControl,\n              children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                fieldName: \"price\",\n                type: \"number\",\n                label: \"Price\",\n                variant: \"outlined\",\n                adornmentPosition: \"start\",\n                adornment: \"$ \",\n                values: formik.initialValues.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formControl,\n              children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                fieldName: \"countInStock\",\n                type: \"number\",\n                label: \"Count in Stock\",\n                variant: \"outlined\",\n                values: formik.initialValues.countInStock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formControl,\n              children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                fieldName: \"description\",\n                type: \"text\",\n                label: \"Description\",\n                variant: \"outlined\",\n                multiline: true,\n                rows: 3,\n                values: formik.initialValues.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'left',\n                margin: '30px'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.select,\n                select: true,\n                label: \"Category\",\n                onChange: event => formik.setFieldValue('category', event.target.value),\n                value: formik.values.category || formik.initialValues.category,\n                SelectProps: {\n                  native: true\n                },\n                variant: \"outlined\",\n                children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category,\n                  children: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formControl,\n              children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                fieldName: \"brand\",\n                type: \"text\",\n                label: \"Brand\",\n                variant: \"outlined\",\n                values: formik.initialValues.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '200px'\n              },\n              type: \"submit\",\n              disabled: !formik.isValid || formik.isSubmitting,\n              variant: \"contained\",\n              disableElevation: true,\n              className: classes.btn,\n              children: \"CREATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateProduct, \"EWLeFMzVTaeNoQlLB5KNpJ26QYs=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/products/pages/CreateProduct.js"],"names":["React","useState","useRef","useHistory","useDispatch","useSelector","Formik","Form","Yup","PageHeading","FormikTextField","ImageUpload","LoadingLinear","AlertMessage","createProduct","categories","makeStyles","Paper","Button","TextField","IconButton","Tooltip","Zoom","RefreshIcon","useStyles","theme","root","minWidth","padding","margin","textAlign","btn","backgroundColor","palette","primary","dark","fontSize","fontWeight","borderRadius","color","main","iconButtonDiv","display","justifyContent","select","breakpoints","down","width","spacing","height","previewBox","CreateProduct","classes","history","dispatch","ref","loadingImageUpload","setLoadingImageUpload","loading","loadingDelete","state","productDelete","loadingUpdate","productCreate","loggedInUser","userAuth","error","initialValues","name","price","countInStock","description","brand","category","validationSchema","object","string","required","number","positive","integer","oneOf","onSuccess","goBack","submitHandler","values","actions","imageUrl","current","handleUpload","console","log","productInfo","token","setSubmitting","formik","resetForm","formControl","event","setFieldValue","target","value","native","map","isValid","isSubmitting"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SAASC,aAAT,QAA8B,qDAA9B;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,OADN;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,MAAM,EAAE,QAHJ;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADiC;AAOvCC,EAAAA,GAAG,EAAE;AACHF,IAAAA,MAAM,EAAE,qBADL;AAEHD,IAAAA,OAAO,EAAE,MAFN;AAGHI,IAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsBC,IAHpC;AAIHC,IAAAA,QAAQ,EAAE,MAJP;AAKHC,IAAAA,UAAU,EAAE,KALT;AAMHC,IAAAA,YAAY,EAAE,GANX;AAOHC,IAAAA,KAAK,EAAE,MAPJ;AAQH,eAAW;AACTP,MAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsBM;AAD9B;AARR,GAPkC;AAmBvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,cAAc,EAAE;AAFH,GAnBwB;AAuBvCC,EAAAA,MAAM,EAAE;AACN,KAACnB,KAAK,CAACoB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,OAAN,CAAc,CAAd,CADuB;AAE9BC,MAAAA,MAAM,EAAExB,KAAK,CAACuB,OAAN,CAAc,CAAd,CAFsB;AAG9BZ,MAAAA,QAAQ,EAAE;AAHoB;AAD1B,GAvB+B;AA8BvCc,EAAAA,UAAU,EAAE;AACVrB,IAAAA,MAAM,EAAE,QADE;AAEV,aAAS;AACPkB,MAAAA,KAAK,EAAE,OADA;AAEPE,MAAAA,MAAM,EAAE;AAFD;AAFC;AA9B2B,CAAZ,CAAD,CAA5B;;AAuCA,MAAME,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAG5B,SAAS,EAAzB;AACA,QAAM6B,OAAO,GAAGlD,UAAU,EAA1B;AACA,QAAMmD,QAAQ,GAAGlD,WAAW,EAA5B;AACA,QAAMmD,GAAG,GAAGrD,MAAM,EAAlB;AACA,QAAM,CAACsD,kBAAD,EAAqBC,qBAArB,IAA8CxD,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM;AAAEyD,IAAAA,OAAO,EAAEC;AAAX,MAA6BtD,WAAW,CAC3CuD,KAAD,IAAWA,KAAK,CAACC,aAAN,IAAuB,EADU,CAA9C;AAGA,QAAM;AAAEH,IAAAA,OAAO,EAAEI;AAAX,MAA6BzD,WAAW,CAC3CuD,KAAD,IAAWA,KAAK,CAACG,aAAN,IAAuB,EADU,CAA9C;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAmB3D,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACK,QAAlB,CAApC;AACA,QAAM;AAAEP,IAAAA,OAAF;AAAWQ,IAAAA;AAAX,MAAqB7D,WAAW,CAAEuD,KAAD,IAAWA,KAAK,CAACG,aAAN,IAAuB,EAAnC,CAAtC;AACA,QAAMI,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,kBADc;AAEpBC,IAAAA,KAAK,EAAE,CAFa;AAGpBC,IAAAA,YAAY,EAAE,CAHM;AAIpBC,IAAAA,WAAW,EAAE,yBAJO;AAKpBC,IAAAA,KAAK,EAAE,mBALa;AAMpBC,IAAAA,QAAQ,EAAE1D,UAAU,CAAC,CAAD;AANA,GAAtB;AAQA,QAAM2D,gBAAgB,GAAGlE,GAAG,CAACmE,MAAJ,CAAW;AAClCP,IAAAA,IAAI,EAAE5D,GAAG,CAACoE,MAAJ,GAAaC,QAAb,CAAsB,eAAtB,CAD4B;AAElCR,IAAAA,KAAK,EAAE7D,GAAG,CAACsE,MAAJ,CAAW,kBAAX,EACJD,QADI,CACK,gBADL,EAEJE,QAFI,CAEK,kBAFL,CAF2B;AAKlCT,IAAAA,YAAY,EAAE9D,GAAG,CAACsE,MAAJ,CAAW,kBAAX,EACXD,QADW,CACF,yBADE,EAEXE,QAFW,CAEF,kBAFE,EAGXC,OAHW,CAGH,mBAHG,CALoB;AASlCT,IAAAA,WAAW,EAAE/D,GAAG,CAACoE,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CATqB;AAUlCL,IAAAA,KAAK,EAAEhE,GAAG,CAACoE,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CAV2B;AAWlCJ,IAAAA,QAAQ,EAAEjE,GAAG,CAACoE,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,EAA2CI,KAA3C,CAAiDlE,UAAjD;AAXwB,GAAX,CAAzB;;AAcA,QAAMmE,SAAS,GAAG,MAAM;AACtB7B,IAAAA,OAAO,CAAC8B,MAAR;AACD,GAFD;;AAGA,QAAMC,aAAa,GAAG,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AAC/C,QAAIC,QAAJ;;AACA,QAAI;AACF9B,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA8B,MAAAA,QAAQ,GAAG,MAAMhC,GAAG,CAACiC,OAAJ,CAAYC,YAAZ,CAAyBJ,MAAM,CAACjB,IAAhC,CAAjB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdwB,MAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAZ;AACD,KALD,SAKU;AACRT,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;;AACD,UAAMmC,WAAW,GAAG;AAClBxB,MAAAA,IAAI,EAAEiB,MAAM,CAACjB,IADK;AAElBC,MAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAFI;AAGlBC,MAAAA,YAAY,EAAEe,MAAM,CAACf,YAHH;AAIlBiB,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,wBAJJ;AAKlBhB,MAAAA,WAAW,EAAEc,MAAM,CAACd,WALF;AAMlBC,MAAAA,KAAK,EAAEa,MAAM,CAACb,KANI;AAOlBC,MAAAA,QAAQ,EAAEY,MAAM,CAACZ;AAPC,KAApB;AASAiB,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAtC,IAAAA,QAAQ,CAACxC,aAAa,CAACkD,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAE6B,KAAf,EAAsBD,WAAtB,EAAmCV,SAAnC,CAAd,CAAR;AACAI,IAAAA,OAAO,CAACQ,aAAR,CAAsB,KAAtB;AACD,GAtBD;;AAwBA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,gBAAlB;AAAmC,MAAA,SAAS,MAA5C;AAA6C,MAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACpC,OAAO,IAAIF,kBAAX,IAAiCG,aAAjC,IAAkDG,aAAnD,kBACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKGI,KAAK,iBACJ,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,KAAvB;AAA8B,MAAA,QAAQ,EAAC,OAAvC;AAA+C,MAAA,OAAO,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YANJ,eAQE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEd,OAAO,CAAC1B,IAA1B;AAAgC,MAAA,SAAS,EAAE,CAA3C;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAEyC,aADjB;AAEE,QAAA,gBAAgB,EAAEO,gBAFpB;AAGE,QAAA,QAAQ,EAAEU,aAHZ;AAIE,QAAA,eAAe,MAJjB;AAKE,QAAA,kBAAkB,MALpB;AAAA,kBAOIW,MAAD,iBACC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAE3C,OAAO,CAACX,aAAxB;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,OAAD;AAAS,cAAA,mBAAmB,EAAEnB,IAA9B;AAAoC,cAAA,KAAK,EAAC,YAA1C;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,KAAK,EAAC,SADR;AAEE,gBAAA,OAAO,EAAE,MAAMyE,MAAM,CAACC,SAAP,EAFjB;AAAA,uCAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,IAAD;AAAA,oCACE;AAAK,cAAA,SAAS,EAAE5C,OAAO,CAAC6C,WAAxB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAC,MAHR;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,MAAM,EAAEF,MAAM,CAAC5B,aAAP,CAAqBC;AAL/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAK,cAAA,KAAK,EAAE;AAAE1B,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE;AAAnC,eAAZ;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,KAAK,EAAEqB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE6B,KAAlC;AAAyC,gBAAA,GAAG,EAAEtC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE;AAAK,cAAA,SAAS,EAAEH,OAAO,CAAC6C,WAAxB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,OADZ;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,KAAK,EAAC,OAHR;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,iBAAiB,EAAC,OALpB;AAME,gBAAA,SAAS,EAAC,IANZ;AAOE,gBAAA,MAAM,EAAEF,MAAM,CAAC5B,aAAP,CAAqBE;AAP/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF,eAwBE;AAAK,cAAA,SAAS,EAAEjB,OAAO,CAAC6C,WAAxB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,cADZ;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,KAAK,EAAC,gBAHR;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,MAAM,EAAEF,MAAM,CAAC5B,aAAP,CAAqBG;AAL/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAxBF,eAiCE;AAAK,cAAA,SAAS,EAAElB,OAAO,CAAC6C,WAAxB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,aADZ;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAC,aAHR;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,SAAS,MALX;AAME,gBAAA,IAAI,EAAE,CANR;AAOE,gBAAA,MAAM,EAAEF,MAAM,CAAC5B,aAAP,CAAqBI;AAP/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjCF,eA4CE;AAAK,cAAA,KAAK,EAAE;AAAEzC,gBAAAA,SAAS,EAAE,MAAb;AAAqBD,gBAAAA,MAAM,EAAE;AAA7B,eAAZ;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,SAAS,EAAEuB,OAAO,CAACR,MADrB;AAEE,gBAAA,MAAM,MAFR;AAGE,gBAAA,KAAK,EAAC,UAHR;AAIE,gBAAA,QAAQ,EAAGsD,KAAD,IACRH,MAAM,CAACI,aAAP,CAAqB,UAArB,EAAiCD,KAAK,CAACE,MAAN,CAAaC,KAA9C,CALJ;AAOE,gBAAA,KAAK,EACHN,MAAM,CAACV,MAAP,CAAcZ,QAAd,IAA0BsB,MAAM,CAAC5B,aAAP,CAAqBM,QARnD;AAUE,gBAAA,WAAW,EAAE;AACX6B,kBAAAA,MAAM,EAAE;AADG,iBAVf;AAaE,gBAAA,OAAO,EAAC,UAbV;AAAA,0BAeGvF,UAAU,CAACwF,GAAX,CAAgB9B,QAAD,iBACd;AAAuB,kBAAA,KAAK,EAAEA,QAA9B;AAAA,4BACGA;AADH,mBAAaA,QAAb;AAAA;AAAA;AAAA;AAAA,wBADD;AAfH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA5CF,eAmEE;AAAK,cAAA,SAAS,EAAErB,OAAO,CAAC6C,WAAxB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAC,OADZ;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,KAAK,EAAC,OAHR;AAIE,gBAAA,OAAO,EAAC,UAJV;AAKE,gBAAA,MAAM,EAAEF,MAAM,CAAC5B,aAAP,CAAqBK;AAL/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnEF,eA4EE,QAAC,MAAD;AACE,cAAA,KAAK,EAAE;AAAEzB,gBAAAA,KAAK,EAAE;AAAT,eADT;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,QAAQ,EAAE,CAACgD,MAAM,CAACS,OAAR,IAAmBT,MAAM,CAACU,YAHtC;AAIE,cAAA,OAAO,EAAC,WAJV;AAKE,cAAA,gBAAgB,MALlB;AAME,cAAA,SAAS,EAAErD,OAAO,CAACrB,GANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AA2HD,CA1LD;;GAAMoB,a;UACY3B,S,EACArB,U,EACCC,W,EAGkBC,W,EAGAA,W,EAGVA,W,EACEA,W;;;KAbvB8C,a;AA4LN,eAAeA,aAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport PageHeading from '../../shared/ui/PageHeading';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport ImageUpload from '../../shared/formElements/ImageUpload';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\n\nimport { createProduct } from '../../../redux/actionCreators/productActionCreators';\n\nimport categories from '../../../categories';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: '600px',\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center',\n  },\n  btn: {\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  select: {\n    [theme.breakpoints.down('xs')]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      fontSize: '13px',\n    },\n  },\n  previewBox: {\n    margin: '0 auto',\n    '&>img': {\n      width: '250px',\n      height: '250px',\n    },\n  },\n}));\n\nconst CreateProduct = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const [loadingImageUpload, setLoadingImageUpload] = useState(false);\n  const { loading: loadingDelete } = useSelector(\n    (state) => state.productDelete || {}\n  );\n  const { loading: loadingUpdate } = useSelector(\n    (state) => state.productCreate || {}\n  );\n  const { loggedInUser } = useSelector((state) => state.userAuth);\n  const { loading, error } = useSelector((state) => state.productCreate || {});\n  const initialValues = {\n    name: 'Placeholder name',\n    price: 1,\n    countInStock: 1,\n    description: 'Placeholder description',\n    brand: 'Placeholder brand',\n    category: categories[0],\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    price: Yup.number('Must be a number')\n      .required('Price required')\n      .positive('Must be positive'),\n    countInStock: Yup.number('Must be a number')\n      .required('Count in Stock required')\n      .positive('Must be positive')\n      .integer('No decimal points'),\n    description: Yup.string().required('Description required'),\n    brand: Yup.string().required('Brand required'),\n    category: Yup.string().required('Category required').oneOf(categories),\n  });\n\n  const onSuccess = () => {\n    history.goBack();\n  };\n  const submitHandler = async (values, actions) => {\n    let imageUrl;\n    try {\n      setLoadingImageUpload(true);\n      imageUrl = await ref.current.handleUpload(values.name);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingImageUpload(false);\n    }\n    const productInfo = {\n      name: values.name,\n      price: values.price,\n      countInStock: values.countInStock,\n      imageUrl: imageUrl || '/images/placeholder.js',\n      description: values.description,\n      brand: values.brand,\n      category: values.category,\n    };\n    console.log(productInfo);\n    dispatch(createProduct(loggedInUser?.token, productInfo, onSuccess));\n    actions.setSubmitting(false);\n  };\n\n  return (\n    <>\n      <PageHeading text=\"CREATE PRODUCT\" paragraph size=\"medium\" />\n      {(loading || loadingImageUpload || loadingDelete || loadingUpdate) && (\n        <LoadingLinear />\n      )}\n      {error && (\n        <AlertMessage message={error} severity=\"error\" variant=\"outlined\" />\n      )}\n      <Paper className={classes.root} elevation={0}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={submitHandler}\n          validateOnMount\n          enableReinitialize\n        >\n          {(formik) => (\n            <>\n              <div className={classes.iconButtonDiv}>\n                <div></div>\n                <Tooltip TransitionComponent={Zoom} title=\"Reset form\">\n                  <IconButton\n                    color=\"primary\"\n                    onClick={() => formik.resetForm()}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </div>\n              <Form>\n                <div className={classes.formControl}>\n                  <FormikTextField\n                    fieldName=\"name\"\n                    type=\"text\"\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    values={formik.initialValues.name}\n                  />\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  <ImageUpload token={loggedInUser?.token} ref={ref} />\n                </div>\n                <div className={classes.formControl}>\n                  <FormikTextField\n                    fieldName=\"price\"\n                    type=\"number\"\n                    label=\"Price\"\n                    variant=\"outlined\"\n                    adornmentPosition=\"start\"\n                    adornment=\"$ \"\n                    values={formik.initialValues.price}\n                  />\n                </div>\n                <div className={classes.formControl}>\n                  <FormikTextField\n                    fieldName=\"countInStock\"\n                    type=\"number\"\n                    label=\"Count in Stock\"\n                    variant=\"outlined\"\n                    values={formik.initialValues.countInStock}\n                  />\n                </div>\n                <div className={classes.formControl}>\n                  <FormikTextField\n                    fieldName=\"description\"\n                    type=\"text\"\n                    label=\"Description\"\n                    variant=\"outlined\"\n                    multiline\n                    rows={3}\n                    values={formik.initialValues.description}\n                  />\n                </div>\n                <div style={{ textAlign: 'left', margin: '30px' }}>\n                  <TextField\n                    className={classes.select}\n                    select\n                    label=\"Category\"\n                    onChange={(event) =>\n                      formik.setFieldValue('category', event.target.value)\n                    }\n                    value={\n                      formik.values.category || formik.initialValues.category\n                    }\n                    SelectProps={{\n                      native: true,\n                    }}\n                    variant=\"outlined\"\n                  >\n                    {categories.map((category) => (\n                      <option key={category} value={category}>\n                        {category}\n                      </option>\n                    ))}\n                  </TextField>\n                </div>\n                <div className={classes.formControl}>\n                  <FormikTextField\n                    fieldName=\"brand\"\n                    type=\"text\"\n                    label=\"Brand\"\n                    variant=\"outlined\"\n                    values={formik.initialValues.brand}\n                  />\n                </div>\n                <Button\n                  style={{ width: '200px' }}\n                  type=\"submit\"\n                  disabled={!formik.isValid || formik.isSubmitting}\n                  variant=\"contained\"\n                  disableElevation\n                  className={classes.btn}\n                >\n                  CREATE\n                </Button>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </Paper>\n    </>\n  );\n};\n\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}