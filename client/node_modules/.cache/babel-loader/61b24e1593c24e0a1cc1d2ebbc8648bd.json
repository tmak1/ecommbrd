{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/shared/ui/CheckoutAccordian.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DecisionDialog from './DecisionDialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AccordianComp from '../../shared/ui/AccordianComp';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport Slide from '@material-ui/core/Slide';\nimport CloseIcon from '@material-ui/icons/CloseSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(2, 0)\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nconst CheckoutAccordian = ({\n  children,\n  item,\n  label,\n  error,\n  control,\n  discardNew,\n  handleRemoveItem,\n  dummyItemId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [slide, setSlide] = useState(true);\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const handleRemove = () => {\n    setDialogOpen(false);\n    handleRemoveItem(item.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DecisionDialog, {\n      open: dialogOpen,\n      title: \"Remove Address\",\n      content: \"This will remove this shipping item from your list of saved itemes\",\n      actionBtnText: \"Remove\",\n      setDialogOpen: setDialogOpen,\n      handleAction: handleRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      in: slide,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.iconButtonDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            TransitionComponent: Zoom,\n            title: \"Remove Address\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: 'red'\n              },\n              onClick: () => {\n                if (item.id === dummyItemId) {\n                  setSlide(false);\n                  setTimeout(() => {\n                    discardNew(item.id);\n                  }, 500);\n                  return;\n                }\n\n                setDialogOpen(true);\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordianComp, {\n          label: label,\n          value: JSON.stringify(item),\n          error: error,\n          control: control,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckoutAccordian, \"CV6BpMKJsM6hWHox9HDjQvj2ML4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckoutAccordian;\nexport default CheckoutAccordian;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutAccordian\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/shared/ui/CheckoutAccordian.js"],"names":["React","useState","DecisionDialog","makeStyles","Paper","AccordianComp","IconButton","Tooltip","Zoom","Slide","CloseIcon","useStyles","theme","paper","padding","spacing","margin","iconButtonDiv","display","justifyContent","CheckoutAccordian","children","item","label","error","control","discardNew","handleRemoveItem","dummyItemId","classes","slide","setSlide","dialogOpen","setDialogOpen","handleRemove","id","color","setTimeout","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport DecisionDialog from './DecisionDialog';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AccordianComp from '../../shared/ui/AccordianComp';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport Slide from '@material-ui/core/Slide';\n\nimport CloseIcon from '@material-ui/icons/CloseSharp';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(2, 0),\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));\n\nconst CheckoutAccordian = ({\n  children,\n  item,\n  label,\n  error,\n  control,\n  discardNew,\n  handleRemoveItem,\n  dummyItemId,\n}) => {\n  const classes = useStyles();\n  const [slide, setSlide] = useState(true);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const handleRemove = () => {\n    setDialogOpen(false);\n    handleRemoveItem(item.id);\n  };\n  return (\n    <>\n      <DecisionDialog\n        open={dialogOpen}\n        title=\"Remove Address\"\n        content=\"This will remove this shipping item from your list of saved\n        itemes\"\n        actionBtnText=\"Remove\"\n        setDialogOpen={setDialogOpen}\n        handleAction={handleRemove}\n      />\n      <Slide direction=\"up\" in={slide} mountOnEnter unmountOnExit>\n        <Paper className={classes.paper} key={item.id}>\n          <div className={classes.iconButtonDiv}>\n            <div></div>\n            <Tooltip TransitionComponent={Zoom} title=\"Remove Address\">\n              <IconButton\n                style={{ color: 'red' }}\n                onClick={() => {\n                  if (item.id === dummyItemId) {\n                    setSlide(false);\n                    setTimeout(() => {\n                      discardNew(item.id);\n                    }, 500);\n\n                    return;\n                  }\n                  setDialogOpen(true);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n          <AccordianComp\n            label={label}\n            value={JSON.stringify(item)}\n            error={error}\n            control={control}\n          >\n            {children}\n          </AccordianComp>\n        </Paper>\n      </Slide>\n    </>\n  );\n};\n\nexport default CheckoutAccordian;\n"]},"metadata":{},"sourceType":"module"}