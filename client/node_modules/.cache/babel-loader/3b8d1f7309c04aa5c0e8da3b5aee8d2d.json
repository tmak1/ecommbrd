{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/checkout/components/ShippingForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport { saveShippingAddress, updateShippingAddress } from '../../../redux/actionCreators/shippingActionCreators';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormikSelect from '../../shared/formElements/FormikSelect';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '95%',\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2, 5),\n    backgroundColor: 'rgba(245,245,245,0.3)',\n    borderRadius: theme.spacing(1),\n    '&>*': {\n      width: '99%',\n      display: 'block'\n    }\n  },\n  sections: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '&>*': {\n      width: '99%',\n      display: 'block'\n    }\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\nconst cityArray = ['melbourne', 'sydney', 'adelaide', 'perth', 'darwin', 'canberra', 'alice springs'];\n\nconst ShippingForm = ({\n  address,\n  user,\n  token,\n  onSuccess,\n  shippingError,\n  setDisableAddNew,\n  dummyItemId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const initialValues = {\n    street: address.street || '',\n    suburb: address.suburb || '',\n    postcode: address.postcode || '',\n    city: address.city || '',\n    country: address.country || ''\n  };\n  const [selectedCity, setSelectedCity] = useState(address.city);\n  const validationSchema = Yup.object({\n    street: Yup.string().required('Street address required'),\n    suburb: Yup.string(),\n    postcode: Yup.number('Must be a number').required('Postcode required').positive('Must be positive').integer('No decimal points').test('len', 'Must be exactly 4 characters', val => val && val.toString().length === 4),\n    city: Yup.string().required('City required'),\n    country: Yup.string().required('Country required')\n  });\n\n  const submitHandler = (values, actions) => {\n    if (address.id === dummyItemId) {\n      delete values.id;\n      dispatch(saveShippingAddress(user.id, token, values, onSuccess));\n    } else {\n      dispatch(updateShippingAddress(user.id, token, address.id, values, onSuccess));\n    }\n\n    actions.setSubmitting(false);\n    setDisableAddNew(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: shippingError && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: shippingError,\n        severity: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: submitHandler,\n        validateOnMount: true,\n        enableReinitialize: true,\n        children: formik => {\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: classes.root,\n            children: [address.id === dummyItemId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.iconButtonDiv,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                TransitionComponent: Zoom,\n                title: \"Reset form\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !token,\n                  color: \"primary\",\n                  onClick: () => formik.resetForm(),\n                  children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                marginBottom: '25px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                size: \"small\",\n                margin: \"none\",\n                fullWidth: true,\n                children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                  fieldName: \"street\",\n                  type: \"text\",\n                  id: \"street\",\n                  name: \"street\",\n                  label: \"Street\",\n                  variant: \"standard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.sections,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  size: \"small\",\n                  margin: \"none\",\n                  children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                    fieldName: \"suburb\",\n                    type: \"text\",\n                    id: \"suburb\",\n                    name: \"suburb\",\n                    label: \"Suburb\",\n                    variant: \"standard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  size: \"small\",\n                  margin: \"none\",\n                  children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                    fieldName: \"postcode\",\n                    type: \"number\",\n                    maxLength: \"4\",\n                    id: \"postcode\",\n                    name: \"postcode\",\n                    label: \"Postcode\",\n                    variant: \"standard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.sections,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  size: \"small\",\n                  variant: \"standard\",\n                  children: /*#__PURE__*/_jsxDEV(FormikSelect, {\n                    as: \"select\",\n                    fieldName: \"city\",\n                    id: \"city\",\n                    name: \"city\",\n                    label: \"City\",\n                    value: selectedCity,\n                    itemsArray: cityArray,\n                    onChange: event => setSelectedCity(event.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  size: \"small\",\n                  margin: \"none\",\n                  children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n                    fieldName: \"country\",\n                    type: \"text\",\n                    id: \"country\",\n                    name: \"country\",\n                    label: \"Country\",\n                    variant: \"standard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BigButton, {\n              type: \"submit\",\n              disabled: !formik.isValid || formik.isSubmitting || JSON.stringify(initialValues) === JSON.stringify(formik.values),\n              children: [address.id === dummyItemId ? 'SAVE' : 'EDIT', \" ADDRESS\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShippingForm, \"4+AbfPsvwBUckKINiO6I3Oeo7BI=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = ShippingForm;\nexport default ShippingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingForm\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/checkout/components/ShippingForm.js"],"names":["React","useState","useDispatch","Formik","Form","Yup","FormikTextField","BigButton","AlertMessage","saveShippingAddress","updateShippingAddress","makeStyles","FormControl","FormikSelect","IconButton","Tooltip","Zoom","RefreshIcon","useStyles","theme","root","width","margin","display","flexDirection","alignItems","padding","spacing","backgroundColor","borderRadius","sections","justifyContent","iconButtonDiv","cityArray","ShippingForm","address","user","token","onSuccess","shippingError","setDisableAddNew","dummyItemId","classes","dispatch","initialValues","street","suburb","postcode","city","country","selectedCity","setSelectedCity","validationSchema","object","string","required","number","positive","integer","test","val","toString","length","submitHandler","values","actions","id","setSubmitting","formik","resetForm","marginBottom","event","target","value","isValid","isSubmitting","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport AlertMessage from '../../shared/ui/AlertMessage';\n\nimport {\n  saveShippingAddress,\n  updateShippingAddress,\n} from '../../../redux/actionCreators/shippingActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormikSelect from '../../shared/formElements/FormikSelect';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '95%',\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2, 5),\n    backgroundColor: 'rgba(245,245,245,0.3)',\n    borderRadius: theme.spacing(1),\n    '&>*': {\n      width: '99%',\n      display: 'block',\n    },\n  },\n  sections: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '&>*': {\n      width: '99%',\n      display: 'block',\n    },\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));\nconst cityArray = [\n  'melbourne',\n  'sydney',\n  'adelaide',\n  'perth',\n  'darwin',\n  'canberra',\n  'alice springs',\n];\nconst ShippingForm = ({\n  address,\n  user,\n  token,\n  onSuccess,\n  shippingError,\n  setDisableAddNew,\n  dummyItemId,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    street: address.street || '',\n    suburb: address.suburb || '',\n    postcode: address.postcode || '',\n    city: address.city || '',\n    country: address.country || '',\n  };\n  const [selectedCity, setSelectedCity] = useState(address.city);\n  const validationSchema = Yup.object({\n    street: Yup.string().required('Street address required'),\n    suburb: Yup.string(),\n    postcode: Yup.number('Must be a number')\n      .required('Postcode required')\n      .positive('Must be positive')\n      .integer('No decimal points')\n      .test(\n        'len',\n        'Must be exactly 4 characters',\n        (val) => val && val.toString().length === 4\n      ),\n    city: Yup.string().required('City required'),\n    country: Yup.string().required('Country required'),\n  });\n\n  const submitHandler = (values, actions) => {\n    if (address.id === dummyItemId) {\n      delete values.id;\n      dispatch(saveShippingAddress(user.id, token, values, onSuccess));\n    } else {\n      dispatch(\n        updateShippingAddress(user.id, token, address.id, values, onSuccess)\n      );\n    }\n    actions.setSubmitting(false);\n    setDisableAddNew(false);\n  };\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        {shippingError && (\n          <AlertMessage message={shippingError} severity=\"error\" />\n        )}\n      </div>\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={submitHandler}\n          validateOnMount\n          enableReinitialize\n        >\n          {(formik) => {\n            return (\n              <Form className={classes.root}>\n                {address.id === dummyItemId && (\n                  <div className={classes.iconButtonDiv}>\n                    <div></div>\n                    <Tooltip TransitionComponent={Zoom} title=\"Reset form\">\n                      <IconButton\n                        disabled={!token}\n                        color=\"primary\"\n                        onClick={() => formik.resetForm()}\n                      >\n                        <RefreshIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                )}\n                <FormControl style={{ marginBottom: '25px' }}>\n                  <FormControl size=\"small\" margin=\"none\" fullWidth>\n                    <FormikTextField\n                      fieldName=\"street\"\n                      type=\"text\"\n                      id=\"street\"\n                      name=\"street\"\n                      label=\"Street\"\n                      variant=\"standard\"\n                    />\n                  </FormControl>\n                  <div className={classes.sections}>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"suburb\"\n                        type=\"text\"\n                        id=\"suburb\"\n                        name=\"suburb\"\n                        label=\"Suburb\"\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"postcode\"\n                        type=\"number\"\n                        maxLength=\"4\"\n                        id=\"postcode\"\n                        name=\"postcode\"\n                        label=\"Postcode\"\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                  </div>\n                  <div className={classes.sections}>\n                    <FormControl size=\"small\" variant=\"standard\">\n                      <FormikSelect\n                        as=\"select\"\n                        fieldName=\"city\"\n                        id=\"city\"\n                        name=\"city\"\n                        label=\"City\"\n                        value={selectedCity}\n                        itemsArray={cityArray}\n                        onChange={(event) =>\n                          setSelectedCity(event.target.value)\n                        }\n                      />\n                    </FormControl>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"country\"\n                        type=\"text\"\n                        id=\"country\"\n                        name=\"country\"\n                        label=\"Country\"\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                  </div>\n                </FormControl>\n                <BigButton\n                  type=\"submit\"\n                  disabled={\n                    !formik.isValid ||\n                    formik.isSubmitting ||\n                    JSON.stringify(initialValues) ===\n                      JSON.stringify(formik.values)\n                  }\n                >\n                  {address.id === dummyItemId ? 'SAVE' : 'EDIT'} ADDRESS\n                </BigButton>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default ShippingForm;\n"]},"metadata":{},"sourceType":"module"}