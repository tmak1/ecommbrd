{"ast":null,"code":"import * as req from '../actions/paymentActions';\n\nconst paymentReducer = (state = {}, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case req.PAYMENT_METHODS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case req.PAYMENT_METHODS_SUCCESS:\n      return {\n        loading: false,\n        paymentMethods: payload\n      };\n\n    case req.PAYMENT_METHODS_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.SAVE_PAYMENT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case req.SAVE_PAYMENT_SUCCESS:\n      return { ...state,\n        loading: false,\n        paymentMethods: [...state.paymentMethods, payload]\n      };\n\n    case req.SAVE_PAYMENT_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.REMOVE_PAYMENT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case req.REMOVE_PAYMENT_SUCCESS:\n      return { ...state,\n        loading: false,\n        paymentMethods: state.paymentMethods.filter(payment => payment.id !== payload.id)\n      };\n\n    case req.REMOVE_PAYMENT_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.REMOVE_ALL_PAYMENT:\n      return {\n        paymentMethods: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default paymentReducer;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/redux/reducers/paymentReducer.js"],"names":["req","paymentReducer","state","type","payload","PAYMENT_METHODS_REQUEST","loading","PAYMENT_METHODS_SUCCESS","paymentMethods","PAYMENT_METHODS_FAILURE","error","SAVE_PAYMENT_REQUEST","SAVE_PAYMENT_SUCCESS","SAVE_PAYMENT_FAILURE","REMOVE_PAYMENT_REQUEST","REMOVE_PAYMENT_SUCCESS","filter","payment","id","REMOVE_PAYMENT_FAILURE","REMOVE_ALL_PAYMENT"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,2BAArB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AACxD,UAAQD,IAAR;AACE,SAAKH,GAAG,CAACK,uBAAT;AACE,aAAO;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKN,GAAG,CAACO,uBAAT;AACE,aAAO;AAAED,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,cAAc,EAAEJ;AAAlC,OAAP;;AACF,SAAKJ,GAAG,CAACS,uBAAT;AACE,aAAO;AAAEH,QAAAA,OAAO,EAAE,KAAX;AAAkBI,QAAAA,KAAK,EAAEN;AAAzB,OAAP;;AAEF,SAAKJ,GAAG,CAACW,oBAAT;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYI,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKN,GAAG,CAACY,oBAAT;AACE,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,cAAc,EAAE,CAAC,GAAGN,KAAK,CAACM,cAAV,EAA0BJ,OAA1B;AAHX,OAAP;;AAKF,SAAKJ,GAAG,CAACa,oBAAT;AACE,aAAO;AACLP,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEN;AAFF,OAAP;;AAKF,SAAKJ,GAAG,CAACc,sBAAT;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYI,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKN,GAAG,CAACe,sBAAT;AACE,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,cAAc,EAAEN,KAAK,CAACM,cAAN,CAAqBQ,MAArB,CACbC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAed,OAAO,CAACc,EADtB;AAHX,OAAP;;AAOF,SAAKlB,GAAG,CAACmB,sBAAT;AACE,aAAO;AACLb,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEN;AAFF,OAAP;;AAIF,SAAKJ,GAAG,CAACoB,kBAAT;AACE,aAAO;AAAEZ,QAAAA,cAAc,EAAE;AAAlB,OAAP;;AACF;AACE,aAAON,KAAP;AAxCJ;AA0CD,CA3CD;;AA6CA,eAAeD,cAAf","sourcesContent":["import * as req from '../actions/paymentActions';\n\nconst paymentReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case req.PAYMENT_METHODS_REQUEST:\n      return { loading: true };\n    case req.PAYMENT_METHODS_SUCCESS:\n      return { loading: false, paymentMethods: payload };\n    case req.PAYMENT_METHODS_FAILURE:\n      return { loading: false, error: payload };\n\n    case req.SAVE_PAYMENT_REQUEST:\n      return { ...state, loading: true };\n    case req.SAVE_PAYMENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        paymentMethods: [...state.paymentMethods, payload],\n      };\n    case req.SAVE_PAYMENT_FAILURE:\n      return {\n        loading: false,\n        error: payload,\n      };\n\n    case req.REMOVE_PAYMENT_REQUEST:\n      return { ...state, loading: true };\n    case req.REMOVE_PAYMENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        paymentMethods: state.paymentMethods.filter(\n          (payment) => payment.id !== payload.id\n        ),\n      };\n    case req.REMOVE_PAYMENT_FAILURE:\n      return {\n        loading: false,\n        error: payload,\n      };\n    case req.REMOVE_ALL_PAYMENT:\n      return { paymentMethods: [] };\n    default:\n      return state;\n  }\n};\n\nexport default paymentReducer;\n"]},"metadata":{},"sourceType":"module"}