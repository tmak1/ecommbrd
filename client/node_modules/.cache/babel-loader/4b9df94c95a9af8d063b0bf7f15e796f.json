{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/checkout/pages/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PaymentForm from '../components/PaymentForm';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport Toast from '../../shared/ui/Toast';\nimport CheckoutAccordian from '../../shared/ui/CheckoutAccordian';\nimport { capitalize } from '../../../helpers';\nimport { getPaymentMethods, removePaymentMethod } from '../../../redux/actionCreators/paymentActionCreators';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport AddNewIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '50%',\n    margin: theme.spacing(2, 'auto'),\n    marginBottom: theme.spacing(6),\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  formLabel: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(2, 'auto')\n    }\n  },\n  addNewBtn: {\n    display: 'block',\n    '&:hover': {\n      borderRadius: '3px'\n    }\n  }\n}));\nconst dummyItemId = 'newAddToPaymentMethodAccordian';\n\nconst Payment = ({\n  validateStep\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [disableAddNew, setDisableAddNew] = useState(false);\n  const [toastObj, setToastObj] = useState({\n    openToast: false,\n    operation: null\n  });\n  const {\n    loggedInUser: {\n      user,\n      token\n    }\n  } = useSelector(state => state.userAuth);\n  const {\n    loading,\n    error,\n    paymentMethods\n  } = useSelector(state => state.payment);\n  const {\n    paymentError\n  } = useSelector(state => state.checkout);\n  const [loadedPaymentMethods, setLoadedPaymentMethods] = useState([]);\n\n  const discardNewPaymentMethod = paymentId => {\n    setLoadedPaymentMethods(loadedPaymentMethods.filter(paymentMethod => paymentMethod.id !== paymentId));\n    setDisableAddNew(false);\n  };\n\n  const handleOpenToast = open => {\n    setToastObj(prevState => ({ ...prevState,\n      openToast: open\n    }));\n  };\n\n  const onSuccess = useCallback(operation => {\n    if (operation === 'removed') {\n      validateStep({});\n    }\n\n    setToastObj({\n      openToast: true,\n      operation\n    });\n  }, [validateStep]);\n\n  const handleRemoveMethod = paymentId => {\n    dispatch(removePaymentMethod(user.id, token, paymentId, onSuccess));\n  };\n\n  useEffect(() => {\n    validateStep({});\n  }, [validateStep]);\n  useEffect(() => {\n    if (token && (user === null || user === void 0 ? void 0 : user.id)) {\n      dispatch(getPaymentMethods(user.id, token, onSuccess));\n    }\n  }, [user, token, onSuccess, dispatch]);\n  useEffect(() => {\n    setLoadedPaymentMethods(paymentMethods);\n    setDisableAddNew(false);\n  }, [paymentMethods]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      openToast: toastObj.openToast,\n      setOpenToast: handleOpenToast,\n      severity: \"success\",\n      message: `Payment Method ${toastObj.operation}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        className: classes.formLabel,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"span\",\n          children: \"Choose the payment method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          TransitionComponent: Zoom,\n          title: \"Reload\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            disabled: !token,\n            color: \"primary\",\n            onClick: () => {\n              setDisableAddNew(false);\n              dispatch(getPaymentMethods(user.id, token));\n            },\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          color: \"primary\",\n          className: classes.addNewBtn,\n          disabled: !token || disableAddNew,\n          disableRipple: true,\n          onClick: () => {\n            if (!loadedPaymentMethods.find(paymentMethod => paymentMethod.id === dummyItemId)) {\n              setLoadedPaymentMethods([{\n                id: dummyItemId,\n                nameOnCard: '',\n                cardNumber: 'XXXX XXXX XXXX XXXX',\n                expiryMonth: 1,\n                expiryYear: 21,\n                cvv: ''\n              }, ...loadedPaymentMethods]);\n              setDisableAddNew(true);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(AddNewIcon, {\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"button\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Add a new Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingLinear, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: error,\n        severity: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }, this), (loadedPaymentMethods === null || loadedPaymentMethods === void 0 ? void 0 : loadedPaymentMethods.length) > 0 ? loadedPaymentMethods.map(paymentMethod => {\n        paymentMethod = capitalize(paymentMethod);\n        let cardType = ['MasterCard', 'VISA'][Math.floor(Math.random() * 2)];\n        return /*#__PURE__*/_jsxDEV(CheckoutAccordian, {\n          item: paymentMethod,\n          error: paymentError !== undefined && paymentError !== null ? paymentError : '',\n          label: [cardType, ' xxxx xxxx xxxx ', paymentMethod.cardNumber.toString().slice(-4)].join(' '),\n          discardNew: discardNewPaymentMethod,\n          handleRemoveItem: handleRemoveMethod,\n          dummyItemId: dummyItemId,\n          children: /*#__PURE__*/_jsxDEV(PaymentForm, {\n            paymentMethod: paymentMethod,\n            user: user,\n            token: token,\n            onSuccess: onSuccess,\n            paymentError: paymentError,\n            validateStep: validateStep,\n            setDisableAddNew: setDisableAddNew,\n            dummyItemId: dummyItemId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this)\n        }, paymentMethod.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this);\n      }) : loadedPaymentMethods && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: \"No Payment Methodes saved\",\n        severity: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Payment, \"4lsWFMvLqFncCI/cVLxtCefyqj4=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/checkout/pages/Payment.js"],"names":["React","useEffect","useState","useCallback","useDispatch","useSelector","PaymentForm","LoadingLinear","AlertMessage","Toast","CheckoutAccordian","capitalize","getPaymentMethods","removePaymentMethod","makeStyles","Typography","FormControl","FormLabel","IconButton","Tooltip","Zoom","RefreshIcon","AddNewIcon","useStyles","theme","root","width","margin","spacing","marginBottom","padding","breakpoints","down","formLabel","addNewBtn","display","borderRadius","dummyItemId","Payment","validateStep","classes","dispatch","disableAddNew","setDisableAddNew","toastObj","setToastObj","openToast","operation","loggedInUser","user","token","state","userAuth","loading","error","paymentMethods","payment","paymentError","checkout","loadedPaymentMethods","setLoadedPaymentMethods","discardNewPaymentMethod","paymentId","filter","paymentMethod","id","handleOpenToast","open","prevState","onSuccess","handleRemoveMethod","find","nameOnCard","cardNumber","expiryMonth","expiryYear","cvv","marginRight","length","map","cardType","Math","floor","random","undefined","toString","slice","join"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PaymentForm from '../components/PaymentForm';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport Toast from '../../shared/ui/Toast';\nimport CheckoutAccordian from '../../shared/ui/CheckoutAccordian';\nimport { capitalize } from '../../../helpers';\n\nimport {\n  getPaymentMethods,\n  removePaymentMethod,\n} from '../../../redux/actionCreators/paymentActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport AddNewIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '50%',\n    margin: theme.spacing(2, 'auto'),\n    marginBottom: theme.spacing(6),\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  formLabel: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(2, 'auto'),\n    },\n  },\n  addNewBtn: {\n    display: 'block',\n    '&:hover': {\n      borderRadius: '3px',\n    },\n  },\n}));\n\nconst dummyItemId = 'newAddToPaymentMethodAccordian';\n\nconst Payment = ({ validateStep }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [disableAddNew, setDisableAddNew] = useState(false);\n\n  const [toastObj, setToastObj] = useState({\n    openToast: false,\n    operation: null,\n  });\n\n  const {\n    loggedInUser: { user, token },\n  } = useSelector((state) => state.userAuth);\n  const { loading, error, paymentMethods } = useSelector(\n    (state) => state.payment\n  );\n  const { paymentError } = useSelector((state) => state.checkout);\n  const [loadedPaymentMethods, setLoadedPaymentMethods] = useState([]);\n  const discardNewPaymentMethod = (paymentId) => {\n    setLoadedPaymentMethods(\n      loadedPaymentMethods.filter(\n        (paymentMethod) => paymentMethod.id !== paymentId\n      )\n    );\n    setDisableAddNew(false);\n  };\n  const handleOpenToast = (open) => {\n    setToastObj((prevState) => ({\n      ...prevState,\n      openToast: open,\n    }));\n  };\n  const onSuccess = useCallback(\n    (operation) => {\n      if (operation === 'removed') {\n        validateStep({});\n      }\n      setToastObj({ openToast: true, operation });\n    },\n    [validateStep]\n  );\n  const handleRemoveMethod = (paymentId) => {\n    dispatch(removePaymentMethod(user.id, token, paymentId, onSuccess));\n  };\n  useEffect(() => {\n    validateStep({});\n  }, [validateStep]);\n  useEffect(() => {\n    if (token && user?.id) {\n      dispatch(getPaymentMethods(user.id, token, onSuccess));\n    }\n  }, [user, token, onSuccess, dispatch]);\n  useEffect(() => {\n    setLoadedPaymentMethods(paymentMethods);\n    setDisableAddNew(false);\n  }, [paymentMethods]);\n\n  return (\n    <>\n      <Toast\n        openToast={toastObj.openToast}\n        setOpenToast={handleOpenToast}\n        severity=\"success\"\n        message={`Payment Method ${toastObj.operation}`}\n      />\n      <FormControl component=\"fieldset\" className={classes.root}>\n        <FormLabel component=\"legend\" className={classes.formLabel}>\n          <Typography variant=\"h6\" component=\"span\">\n            Choose the payment method\n          </Typography>\n          <Tooltip TransitionComponent={Zoom} title=\"Reload\">\n            <IconButton\n              disabled={!token}\n              color=\"primary\"\n              onClick={() => {\n                setDisableAddNew(false);\n                dispatch(getPaymentMethods(user.id, token));\n              }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <IconButton\n            edge=\"end\"\n            color=\"primary\"\n            className={classes.addNewBtn}\n            disabled={!token || disableAddNew}\n            disableRipple\n            onClick={() => {\n              if (\n                !loadedPaymentMethods.find(\n                  (paymentMethod) => paymentMethod.id === dummyItemId\n                )\n              ) {\n                setLoadedPaymentMethods([\n                  {\n                    id: dummyItemId,\n                    nameOnCard: '',\n                    cardNumber: 'XXXX XXXX XXXX XXXX',\n                    expiryMonth: 1,\n                    expiryYear: 21,\n                    cvv: '',\n                  },\n                  ...loadedPaymentMethods,\n                ]);\n                setDisableAddNew(true);\n              }\n            }}\n          >\n            <AddNewIcon style={{ marginRight: '10px' }} />\n            <Typography variant=\"button\" component=\"span\">\n              <strong>Add a new Payment Method</strong>\n            </Typography>\n          </IconButton>\n        </FormLabel>\n        {loading && <LoadingLinear />}\n        {error && <AlertMessage message={error} severity=\"error\" />}\n\n        {loadedPaymentMethods?.length > 0\n          ? loadedPaymentMethods.map((paymentMethod) => {\n              paymentMethod = capitalize(paymentMethod);\n              let cardType = ['MasterCard', 'VISA'][\n                Math.floor(Math.random() * 2)\n              ];\n              return (\n                <CheckoutAccordian\n                  key={paymentMethod.id}\n                  item={paymentMethod}\n                  error={\n                    paymentError !== undefined && paymentError !== null\n                      ? paymentError\n                      : ''\n                  }\n                  label={[\n                    cardType,\n                    ' xxxx xxxx xxxx ',\n                    paymentMethod.cardNumber.toString().slice(-4),\n                  ].join(' ')}\n                  discardNew={discardNewPaymentMethod}\n                  handleRemoveItem={handleRemoveMethod}\n                  dummyItemId={dummyItemId}\n                >\n                  <PaymentForm\n                    paymentMethod={paymentMethod}\n                    user={user}\n                    token={token}\n                    onSuccess={onSuccess}\n                    paymentError={paymentError}\n                    validateStep={validateStep}\n                    setDisableAddNew={setDisableAddNew}\n                    dummyItemId={dummyItemId}\n                  />\n                </CheckoutAccordian>\n              );\n            })\n          : loadedPaymentMethods && (\n              <AlertMessage\n                message=\"No Payment Methodes saved\"\n                severity=\"info\"\n              />\n            )}\n      </FormControl>\n    </>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}