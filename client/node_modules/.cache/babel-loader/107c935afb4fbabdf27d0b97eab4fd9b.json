{"ast":null,"code":"import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{Formik,Form}from'formik';import*as Yup from'yup';import PageHeading from'../../shared/ui/PageHeading';import FormikTextField from'../../shared/formElements/FormikTextField';import BigButton from'../../shared/ui/BigButton';import ShowPasswordAdornment from'../../shared/ui/ShowPasswordAdornment';import{authenticateUser}from'../../../redux/actionCreators/userActionCreators';import{makeStyles}from'@material-ui/core/styles';import Paper from'@material-ui/core/Paper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:'100%',padding:theme.spacing(3)}};});var SignupForm=function SignupForm(){var classes=useStyles();var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var initialValues={name:'',email:'',password:''};var validationSchema=Yup.object({name:Yup.string().required('Name required'),email:Yup.string().required('Email required').email('Invalid email format'),password:Yup.string().required('Password required').test('len','Must be atleast (3) characters',function(val){return(val===null||val===void 0?void 0:val.length)>=3;})});var toggleShowPassword=function toggleShowPassword(){setShowPassword(function(prevState){return!prevState;});};var submitHandler=function submitHandler(values,actions){//console.log(values);\ndispatch(authenticateUser(values,'signup'));actions.setSubmitting(false);};return/*#__PURE__*/_jsxs(Paper,{className:classes.root,children:[/*#__PURE__*/_jsx(PageHeading,{text:\"SIGNUP\",gutterBottom:true}),/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:submitHandler,validateOnMount:true,enableReinitialize:true,children:function children(formik){return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.formControl,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"name\",id:\"name\",name:\"name\",type:\"text\",label:\"Name\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(\"div\",{className:classes.formControl,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"email\",id:\"email\",name:\"email\",type:\"email\",label:\"Email\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(\"div\",{className:classes.formControl,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"password\",type:showPassword?'text':'password',id:\"password\",name:\"password\",label:\"Password\",variant:\"outlined\",adornment:/*#__PURE__*/_jsx(ShowPasswordAdornment,{showPassword:showPassword,toggleShowPassword:toggleShowPassword}),adornmentPosition:\"end\"})}),/*#__PURE__*/_jsx(BigButton,{type:\"submit\",disabled:!formik.isValid||formik.isSubmitting,children:\"SIGNUP\"})]});}})]});};export default SignupForm;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/users/components/SignupForm.js"],"names":["React","useState","useDispatch","Formik","Form","Yup","PageHeading","FormikTextField","BigButton","ShowPasswordAdornment","authenticateUser","makeStyles","Paper","useStyles","theme","root","width","padding","spacing","SignupForm","classes","dispatch","showPassword","setShowPassword","initialValues","name","email","password","validationSchema","object","string","required","test","val","length","toggleShowPassword","prevState","submitHandler","values","actions","setSubmitting","formik","formControl","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport PageHeading from '../../shared/ui/PageHeading';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport ShowPasswordAdornment from '../../shared/ui/ShowPasswordAdornment';\n\nimport { authenticateUser } from '../../../redux/actionCreators/userActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: theme.spacing(3),\n  },\n}));\n\nconst SignupForm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email format'),\n    password: Yup.string()\n      .required('Password required')\n      .test('len', 'Must be atleast (3) characters', (val) => val?.length >= 3),\n  });\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const submitHandler = (values, actions) => {\n    //console.log(values);\n    dispatch(authenticateUser(values, 'signup'));\n    actions.setSubmitting(false);\n  };\n  return (\n    <Paper className={classes.root}>\n      <PageHeading text=\"SIGNUP\" gutterBottom />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitHandler}\n        validateOnMount\n        enableReinitialize\n      >\n        {(formik) => (\n          <Form>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"name\"\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"email\"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                variant=\"outlined\"\n                adornment={\n                  <ShowPasswordAdornment\n                    showPassword={showPassword}\n                    toggleShowPassword={toggleShowPassword}\n                  />\n                }\n                adornmentPosition=\"end\"\n              />\n            </div>\n            <BigButton\n              type=\"submit\"\n              disabled={!formik.isValid || formik.isSubmitting}\n            >\n              SIGNUP\n            </BigButton>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}