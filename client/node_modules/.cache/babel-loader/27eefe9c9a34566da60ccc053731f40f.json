{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/users/components/UserProductUpdateModalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport ImageUpload from '../../shared/formElements/ImageUpload';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: '600px',\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center'\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  select: {\n    [theme.breakpoints.down('xs')]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      fontSize: '13px'\n    }\n  },\n  previewBox: {\n    margin: '0 auto',\n    '&>img': {\n      width: '250px',\n      height: '250px'\n    }\n  }\n}));\n\nconst UserProductUpdateModalForm = ({\n  productToUpdate,\n  handleUpdate,\n  categories,\n  loggedInUser\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const ref = useRef();\n  const [loadingImageUpload, setLoadingImageUpload] = useState(false);\n  const initialValues = {\n    name: productToUpdate === null || productToUpdate === void 0 ? void 0 : productToUpdate.name,\n    price: productToUpdate === null || productToUpdate === void 0 ? void 0 : productToUpdate.price,\n    countInStock: productToUpdate === null || productToUpdate === void 0 ? void 0 : productToUpdate.countInStock,\n    imageUrl: productToUpdate === null || productToUpdate === void 0 ? void 0 : productToUpdate.imageUrl,\n    description: productToUpdate === null || productToUpdate === void 0 ? void 0 : productToUpdate.description,\n    brand: productToUpdate === null || productToUpdate === void 0 ? void 0 : productToUpdate.brand,\n    category: productToUpdate.category\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    price: Yup.number('Must be a number').required('Price required').positive('Must be positive'),\n    countInStock: Yup.number('Must be a number').required('Count in Stock required').positive('Must be positive').integer('No decimal points'),\n    imageUrl: Yup.string().required('Image url required'),\n    description: Yup.string().required('Description required'),\n    brand: Yup.string().required('Brand required'),\n    category: Yup.string().required('Category required').oneOf(categories)\n  });\n\n  const submitHandler = async (values, actions) => {\n    let imageUrl;\n\n    try {\n      setLoadingImageUpload(true);\n      imageUrl = await ref.current.handleUpload(values.name);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingImageUpload(false);\n    }\n\n    const productInfo = {\n      name: values.name,\n      price: values.price,\n      countInStock: values.countInStock,\n      imageUrl: imageUrl,\n      description: values.description,\n      brand: values.brand,\n      category: values.category\n    };\n    console.log(values);\n    handleUpdate(productInfo);\n    actions.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 0,\n    children: [loadingImageUpload && /*#__PURE__*/_jsxDEV(LoadingLinear, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: submitHandler,\n      validateOnMount: true,\n      enableReinitialize: true,\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            variant: \"outlined\",\n            values: formik.initialValues.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n            token: loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token,\n            ref: ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"price\",\n            type: \"number\",\n            label: \"Price\",\n            variant: \"outlined\",\n            adornmentPosition: \"start\",\n            adornment: \"$ \",\n            values: formik.initialValues.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"countInStock\",\n            type: \"number\",\n            label: \"Count in Stock\",\n            variant: \"outlined\",\n            values: formik.initialValues.countInStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"description\",\n            type: \"text\",\n            label: \"Description\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 3,\n            values: formik.initialValues.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left',\n            margin: '12px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.select,\n            select: true,\n            label: \"Category\",\n            onChange: event => formik.setFieldValue('category', event.target.value),\n            value: formik.values.category || formik.initialValues.category,\n            SelectProps: {\n              native: true\n            },\n            variant: \"outlined\",\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"brand\",\n            type: \"text\",\n            label: \"Brand\",\n            variant: \"outlined\",\n            values: formik.initialValues.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formik.isValid || formik.isSubmitting || formik.values.name === formik.initialValues.name && formik.values.price === formik.initialValues.price && formik.values.countInStock === formik.initialValues.countInStock && formik.values.image === formik.initialValues.image && formik.values.description === formik.initialValues.description && formik.values.brand === formik.initialValues.brand && formik.values.category === formik.initialValues.category,\n          variant: \"contained\",\n          disableElevation: true,\n          className: classes.btn,\n          children: \"CHANGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProductUpdateModalForm, \"h5z1mZQlcKeGTQYcWamXQmW3e8Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserProductUpdateModalForm;\nexport default UserProductUpdateModalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProductUpdateModalForm\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/users/components/UserProductUpdateModalForm.js"],"names":["React","useState","useRef","Formik","Form","Yup","FormikTextField","ImageUpload","LoadingLinear","makeStyles","Paper","Button","TextField","useStyles","theme","root","minWidth","padding","margin","textAlign","btn","width","backgroundColor","palette","primary","dark","fontSize","fontWeight","borderRadius","color","main","select","breakpoints","down","spacing","height","previewBox","UserProductUpdateModalForm","productToUpdate","handleUpdate","categories","loggedInUser","classes","ref","loadingImageUpload","setLoadingImageUpload","initialValues","name","price","countInStock","imageUrl","description","brand","category","validationSchema","object","string","required","number","positive","integer","oneOf","submitHandler","values","actions","current","handleUpload","error","console","log","productInfo","setSubmitting","formik","formControl","display","justifyContent","token","event","setFieldValue","target","value","native","map","isValid","isSubmitting","image"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport ImageUpload from '../../shared/formElements/ImageUpload';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: '600px',\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center',\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  select: {\n    [theme.breakpoints.down('xs')]: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      fontSize: '13px',\n    },\n  },\n  previewBox: {\n    margin: '0 auto',\n    '&>img': {\n      width: '250px',\n      height: '250px',\n    },\n  },\n}));\nconst UserProductUpdateModalForm = ({\n  productToUpdate,\n  handleUpdate,\n  categories,\n  loggedInUser,\n}) => {\n  const classes = useStyles();\n  const ref = useRef();\n  const [loadingImageUpload, setLoadingImageUpload] = useState(false);\n  const initialValues = {\n    name: productToUpdate?.name,\n    price: productToUpdate?.price,\n    countInStock: productToUpdate?.countInStock,\n    imageUrl: productToUpdate?.imageUrl,\n    description: productToUpdate?.description,\n    brand: productToUpdate?.brand,\n    category: productToUpdate.category,\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    price: Yup.number('Must be a number')\n      .required('Price required')\n      .positive('Must be positive'),\n    countInStock: Yup.number('Must be a number')\n      .required('Count in Stock required')\n      .positive('Must be positive')\n      .integer('No decimal points'),\n    imageUrl: Yup.string().required('Image url required'),\n    description: Yup.string().required('Description required'),\n    brand: Yup.string().required('Brand required'),\n    category: Yup.string().required('Category required').oneOf(categories),\n  });\n  const submitHandler = async (values, actions) => {\n    let imageUrl;\n    try {\n      setLoadingImageUpload(true);\n      imageUrl = await ref.current.handleUpload(values.name);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoadingImageUpload(false);\n    }\n    const productInfo = {\n      name: values.name,\n      price: values.price,\n      countInStock: values.countInStock,\n      imageUrl: imageUrl,\n      description: values.description,\n      brand: values.brand,\n      category: values.category,\n    };\n    console.log(values);\n    handleUpdate(productInfo);\n    actions.setSubmitting(false);\n  };\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      {loadingImageUpload && <LoadingLinear />}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitHandler}\n        validateOnMount\n        enableReinitialize\n      >\n        {(formik) => (\n          <Form>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                variant=\"outlined\"\n                values={formik.initialValues.name}\n              />\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <ImageUpload token={loggedInUser?.token} ref={ref} />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"price\"\n                type=\"number\"\n                label=\"Price\"\n                variant=\"outlined\"\n                adornmentPosition=\"start\"\n                adornment=\"$ \"\n                values={formik.initialValues.price}\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"countInStock\"\n                type=\"number\"\n                label=\"Count in Stock\"\n                variant=\"outlined\"\n                values={formik.initialValues.countInStock}\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"description\"\n                type=\"text\"\n                label=\"Description\"\n                variant=\"outlined\"\n                multiline\n                rows={3}\n                values={formik.initialValues.description}\n              />\n            </div>\n            <div style={{ textAlign: 'left', margin: '12px' }}>\n              <TextField\n                className={classes.select}\n                select\n                label=\"Category\"\n                onChange={(event) =>\n                  formik.setFieldValue('category', event.target.value)\n                }\n                value={formik.values.category || formik.initialValues.category}\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"outlined\"\n              >\n                {categories.map((category) => (\n                  <option key={category} value={category}>\n                    {category}\n                  </option>\n                ))}\n              </TextField>\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"brand\"\n                type=\"text\"\n                label=\"Brand\"\n                variant=\"outlined\"\n                values={formik.initialValues.brand}\n              />\n            </div>\n            <Button\n              type=\"submit\"\n              disabled={\n                !formik.isValid ||\n                formik.isSubmitting ||\n                (formik.values.name === formik.initialValues.name &&\n                  formik.values.price === formik.initialValues.price &&\n                  formik.values.countInStock ===\n                    formik.initialValues.countInStock &&\n                  formik.values.image === formik.initialValues.image &&\n                  formik.values.description ===\n                    formik.initialValues.description &&\n                  formik.values.brand === formik.initialValues.brand &&\n                  formik.values.category === formik.initialValues.category)\n              }\n              variant=\"contained\"\n              disableElevation\n              className={classes.btn}\n            >\n              CHANGE\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport default UserProductUpdateModalForm;\n"]},"metadata":{},"sourceType":"module"}