{"ast":null,"code":"import{combineReducers}from'redux';import{productListReducer,productTopListReducer,productDetailsReducer,adminProductListReducer,productCreateReducer,productDeleteReducer,productUpdateByAdminReducer}from'./productReducers';import cartReducer from'./cartReducers';import{authReducer,userListReducer,userUpdateReducer,userDeleteReducer,userUpdateByAdminReducer}from'./userReducers';import{placeOrderReducer,orderDetailsReducer,orderListReducer,orderListByUserReducer,orderListByProductReducer,orderForProductByUserReducer,orderUpdateIsDeliveredReducer}from'./orderReducers';import{getAllProductReviewsReducer,getAllUserReviewsReducer,createReviewReducer,deleteReviewReducer}from'./reviewReducers';import shippingReducer from'./shippingReducer';import paymentReducer from'./paymentReducer';import checkoutReducer from'./checkoutReducer';var getItemsFromStorage=function getItemsFromStorage(propertyType,itemType){var items=propertyType==='array'?[]:null;var shoppingapp=localStorage.getItem('shoppingapp');if(shoppingapp){shoppingapp=JSON.parse(shoppingapp);items=shoppingapp[itemType]||items;}return items;};// redux actually calls an indiividual reducer before the initialState in the store()\n// function is applied. So state in a reducer needs to have a default value\n// to fallback on while initialState (here below) is being applied to the reducer from store()\nexport var initialState={cart:{cartItems:getItemsFromStorage('array','cartItems')},userAuth:{loggedInUser:getItemsFromStorage('object','loggedInUser')},shipping:{shippingAddresses:getItemsFromStorage('array','shippingAddresses')},payment:{paymentMethods:getItemsFromStorage('array','paymentMethods')},checkout:{selectedshipping:getItemsFromStorage('object','selectedshipping'),selectedpayment:getItemsFromStorage('object','selectedpayment')}};export var rootReducer=combineReducers({productsList:productListReducer,productsListTop:productTopListReducer,productDetails:productDetailsReducer,adminProductList:adminProductListReducer,productCreate:productCreateReducer,productDelete:productDeleteReducer,productUpdateByAdmin:productUpdateByAdminReducer,cart:cartReducer,userAuth:authReducer,userUpdate:userUpdateReducer,userList:userListReducer,userDeleted:userDeleteReducer,userUpdateByAdmin:userUpdateByAdminReducer,shipping:shippingReducer,payment:paymentReducer,checkout:checkoutReducer,orderCreated:placeOrderReducer,orderDetails:orderDetailsReducer,orderList:orderListReducer,orderListByUser:orderListByUserReducer,orderListByProduct:orderListByProductReducer,orderForProductByUser:orderForProductByUserReducer,orderUpdateIsDelivered:orderUpdateIsDeliveredReducer,productReviews:getAllProductReviewsReducer,userReviews:getAllUserReviewsReducer,createReview:createReviewReducer,deleteReview:deleteReviewReducer});","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/redux/reducers/rootReducer.js"],"names":["combineReducers","productListReducer","productTopListReducer","productDetailsReducer","adminProductListReducer","productCreateReducer","productDeleteReducer","productUpdateByAdminReducer","cartReducer","authReducer","userListReducer","userUpdateReducer","userDeleteReducer","userUpdateByAdminReducer","placeOrderReducer","orderDetailsReducer","orderListReducer","orderListByUserReducer","orderListByProductReducer","orderForProductByUserReducer","orderUpdateIsDeliveredReducer","getAllProductReviewsReducer","getAllUserReviewsReducer","createReviewReducer","deleteReviewReducer","shippingReducer","paymentReducer","checkoutReducer","getItemsFromStorage","propertyType","itemType","items","shoppingapp","localStorage","getItem","JSON","parse","initialState","cart","cartItems","userAuth","loggedInUser","shipping","shippingAddresses","payment","paymentMethods","checkout","selectedshipping","selectedpayment","rootReducer","productsList","productsListTop","productDetails","adminProductList","productCreate","productDelete","productUpdateByAdmin","userUpdate","userList","userDeleted","userUpdateByAdmin","orderCreated","orderDetails","orderList","orderListByUser","orderListByProduct","orderForProductByUser","orderUpdateIsDelivered","productReviews","userReviews","createReview","deleteReview"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport {\n  productListReducer,\n  productTopListReducer,\n  productDetailsReducer,\n  adminProductListReducer,\n  productCreateReducer,\n  productDeleteReducer,\n  productUpdateByAdminReducer,\n} from './productReducers';\nimport cartReducer from './cartReducers';\nimport {\n  authReducer,\n  userListReducer,\n  userUpdateReducer,\n  userDeleteReducer,\n  userUpdateByAdminReducer,\n} from './userReducers';\nimport {\n  placeOrderReducer,\n  orderDetailsReducer,\n  orderListReducer,\n  orderListByUserReducer,\n  orderListByProductReducer,\n  orderForProductByUserReducer,\n  orderUpdateIsDeliveredReducer,\n} from './orderReducers';\nimport {\n  getAllProductReviewsReducer,\n  getAllUserReviewsReducer,\n  createReviewReducer,\n  deleteReviewReducer,\n} from './reviewReducers';\nimport shippingReducer from './shippingReducer';\nimport paymentReducer from './paymentReducer';\nimport checkoutReducer from './checkoutReducer';\n\nconst getItemsFromStorage = (propertyType, itemType) => {\n  let items = propertyType === 'array' ? [] : null;\n  let shoppingapp = localStorage.getItem('shoppingapp');\n  if (shoppingapp) {\n    shoppingapp = JSON.parse(shoppingapp);\n    items = shoppingapp[itemType] || items;\n  }\n  return items;\n};\n\n// redux actually calls an indiividual reducer before the initialState in the store()\n// function is applied. So state in a reducer needs to have a default value\n// to fallback on while initialState (here below) is being applied to the reducer from store()\n\nexport const initialState = {\n  cart: { cartItems: getItemsFromStorage('array', 'cartItems') },\n  userAuth: {\n    loggedInUser: getItemsFromStorage('object', 'loggedInUser'),\n  },\n  shipping: {\n    shippingAddresses: getItemsFromStorage('array', 'shippingAddresses'),\n  },\n  payment: {\n    paymentMethods: getItemsFromStorage('array', 'paymentMethods'),\n  },\n  checkout: {\n    selectedshipping: getItemsFromStorage('object', 'selectedshipping'),\n    selectedpayment: getItemsFromStorage('object', 'selectedpayment'),\n  },\n};\n\nexport const rootReducer = combineReducers({\n  productsList: productListReducer,\n  productsListTop: productTopListReducer,\n  productDetails: productDetailsReducer,\n  adminProductList: adminProductListReducer,\n  productCreate: productCreateReducer,\n  productDelete: productDeleteReducer,\n  productUpdateByAdmin: productUpdateByAdminReducer,\n  cart: cartReducer,\n  userAuth: authReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  userDeleted: userDeleteReducer,\n  userUpdateByAdmin: userUpdateByAdminReducer,\n  shipping: shippingReducer,\n  payment: paymentReducer,\n  checkout: checkoutReducer,\n  orderCreated: placeOrderReducer,\n  orderDetails: orderDetailsReducer,\n  orderList: orderListReducer,\n  orderListByUser: orderListByUserReducer,\n  orderListByProduct: orderListByProductReducer,\n  orderForProductByUser: orderForProductByUserReducer,\n  orderUpdateIsDelivered: orderUpdateIsDeliveredReducer,\n  productReviews: getAllProductReviewsReducer,\n  userReviews: getAllUserReviewsReducer,\n  createReview: createReviewReducer,\n  deleteReview: deleteReviewReducer,\n});\n"]},"metadata":{},"sourceType":"module"}