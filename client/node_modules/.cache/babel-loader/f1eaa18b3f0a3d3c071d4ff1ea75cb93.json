{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/shared/ui/Toast.js\";\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Slide from '@material-ui/core/Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SlideTransition(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, { ...props,\n    direction: \"up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = SlideTransition;\n\nconst Toast = ({\n  message,\n  severity,\n  openToast,\n  setOpenToast\n}) => {\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return setOpenToast(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: openToast,\n    autoHideDuration: 5000,\n    onClose: () => setOpenToast(false),\n    TransitionComponent: SlideTransition,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      severity: severity,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Toast;\nexport default Toast;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SlideTransition\");\n$RefreshReg$(_c2, \"Toast\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/shared/ui/Toast.js"],"names":["React","Snackbar","Alert","Slide","SlideTransition","props","Toast","message","severity","openToast","setOpenToast","handleClose","event","reason"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,sBAAO,QAAC,KAAD,OAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,e;;AAIT,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA;AAAhC,CAAD,KAAoD;AAChE,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B,aAAOH,YAAY,CAAC,KAAD,CAAnB;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAED,SADR;AAEE,IAAA,gBAAgB,EAAE,IAFpB;AAGE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAH7B;AAIE,IAAA,mBAAmB,EAAEN,eAJvB;AAAA,2BAME,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEO,WAAhB;AAA6B,MAAA,QAAQ,EAAEH,QAAvC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;MAAMD,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Slide from '@material-ui/core/Slide';\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nconst Toast = ({ message, severity, openToast, setOpenToast }) => {\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return setOpenToast(false);\n    }\n  };\n\n  return (\n    <Snackbar\n      open={openToast}\n      autoHideDuration={5000}\n      onClose={() => setOpenToast(false)}\n      TransitionComponent={SlideTransition}\n    >\n      <Alert onClose={handleClose} severity={severity}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}