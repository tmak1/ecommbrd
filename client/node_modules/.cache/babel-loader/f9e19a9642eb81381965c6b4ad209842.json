{"ast":null,"code":"import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{withStyles}from'@material-ui/core/styles';import{green}from'@material-ui/core/colors';import{red}from'@material-ui/core/colors';import Switch from'@material-ui/core/Switch';import FormGroup from'@material-ui/core/FormGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormControl from'@material-ui/core/FormControl';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ColoredSwitch=withStyles({switchBase:{color:red[400],'&$checked':{color:green[500]},'&:not($checked) + $track':{backgroundColor:red[300]},'&$checked + $track':{backgroundColor:green[400]}},checked:{},track:{}})(Switch);var SwitchComp=function SwitchComp(_ref){var value=_ref.value,label=_ref.label,labelColor=_ref.labelColor,handleChange=_ref.handleChange,info=_ref.info;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),checked=_React$useState2[0],setChecked=_React$useState2[1];var changeHandler=function changeHandler(){setChecked(function(prevChecked){return!prevChecked;});handleChange(info,!checked);};useEffect(function(){setChecked(value);},[value]);return/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",children:[/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(ColoredSwitch,{checked:checked,onChange:changeHandler}),label:checked?label[0]:label[1],labelPlacement:\"top\",style:{color:checked?labelColor[0]:labelColor[1]}})}),/*#__PURE__*/_jsx(\"br\",{})]});};export default SwitchComp;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/shared/ui/SwitchComp.js"],"names":["React","useEffect","withStyles","green","red","Switch","FormGroup","FormControlLabel","FormControl","ColoredSwitch","switchBase","color","backgroundColor","checked","track","SwitchComp","value","label","labelColor","handleChange","info","useState","setChecked","changeHandler","prevChecked"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,GAAT,KAAoB,0BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGP,UAAU,CAAC,CAC/BQ,UAAU,CAAE,CACVC,KAAK,CAAEP,GAAG,CAAC,GAAD,CADA,CAEV,YAAa,CACXO,KAAK,CAAER,KAAK,CAAC,GAAD,CADD,CAFH,CAKV,2BAA4B,CAC1BS,eAAe,CAAER,GAAG,CAAC,GAAD,CADM,CALlB,CAQV,qBAAsB,CACpBQ,eAAe,CAAET,KAAK,CAAC,GAAD,CADF,CARZ,CADmB,CAa/BU,OAAO,CAAE,EAbsB,CAc/BC,KAAK,CAAE,EAdwB,CAAD,CAAV,CAenBT,MAfmB,CAAtB,CAiBA,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAsD,IAAnDC,CAAAA,KAAmD,MAAnDA,KAAmD,CAA5CC,KAA4C,MAA5CA,KAA4C,CAArCC,UAAqC,MAArCA,UAAqC,CAAzBC,YAAyB,MAAzBA,YAAyB,CAAXC,IAAW,MAAXA,IAAW,CACvE,oBAA8BpB,KAAK,CAACqB,QAAN,CAAe,KAAf,CAA9B,oDAAOR,OAAP,qBAAgBS,UAAhB,qBACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BD,UAAU,CAAC,SAACE,WAAD,QAAiB,CAACA,WAAlB,EAAD,CAAV,CACAL,YAAY,CAACC,IAAD,CAAO,CAACP,OAAR,CAAZ,CACD,CAHD,CAIAZ,SAAS,CAAC,UAAM,CACdqB,UAAU,CAACN,KAAD,CAAV,CACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAGA,mBACE,MAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,wBACE,KAAC,SAAD,wBACE,KAAC,gBAAD,EACE,OAAO,cAAE,KAAC,aAAD,EAAe,OAAO,CAAEH,OAAxB,CAAiC,QAAQ,CAAEU,aAA3C,EADX,CAEE,KAAK,CAAEV,OAAO,CAAGI,KAAK,CAAC,CAAD,CAAR,CAAcA,KAAK,CAAC,CAAD,CAFnC,CAGE,cAAc,CAAC,KAHjB,CAIE,KAAK,CAAE,CAAEN,KAAK,CAAEE,OAAO,CAAGK,UAAU,CAAC,CAAD,CAAb,CAAmBA,UAAU,CAAC,CAAD,CAA7C,CAJT,EADF,EADF,cASE,aATF,GADF,CAaD,CAtBD,CAwBA,cAAeH,CAAAA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { red } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst ColoredSwitch = withStyles({\n  switchBase: {\n    color: red[400],\n    '&$checked': {\n      color: green[500],\n    },\n    '&:not($checked) + $track': {\n      backgroundColor: red[300],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[400],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst SwitchComp = ({ value, label, labelColor, handleChange, info }) => {\n  const [checked, setChecked] = React.useState(false);\n  const changeHandler = () => {\n    setChecked((prevChecked) => !prevChecked);\n    handleChange(info, !checked);\n  };\n  useEffect(() => {\n    setChecked(value);\n  }, [value]);\n  return (\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        <FormControlLabel\n          control={<ColoredSwitch checked={checked} onChange={changeHandler} />}\n          label={checked ? label[0] : label[1]}\n          labelPlacement=\"top\"\n          style={{ color: checked ? labelColor[0] : labelColor[1] }}\n        />\n      </FormGroup>\n      <br />\n    </FormControl>\n  );\n};\n\nexport default SwitchComp;\n"]},"metadata":{},"sourceType":"module"}