{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/users/components/UserUpdateModalForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center'\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main\n    }\n  }\n}));\n\nconst UserUpdateModalForm = ({\n  userToUpdate,\n  handleUpdate\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const initialValues = {\n    name: userToUpdate === null || userToUpdate === void 0 ? void 0 : userToUpdate.name,\n    email: userToUpdate === null || userToUpdate === void 0 ? void 0 : userToUpdate.email\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    email: Yup.string().required('Email required').email('Invalid email format')\n  });\n\n  const submitHandler = (values, actions) => {\n    const userInfo = {\n      name: values.name,\n      email: values.email\n    };\n    handleUpdate(userInfo);\n    actions.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: submitHandler,\n      validateOnMount: true,\n      enableReinitialize: true,\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            variant: \"outlined\",\n            values: userToUpdate.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            variant: \"outlined\",\n            values: userToUpdate === null || userToUpdate === void 0 ? void 0 : userToUpdate.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formik.isValid || formik.isSubmitting || formik.values.name === formik.initialValues.name && formik.values.email === formik.initialValues.email,\n          variant: \"contained\",\n          disableElevation: true,\n          className: classes.btn,\n          children: \"CHANGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserUpdateModalForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserUpdateModalForm;\nexport default UserUpdateModalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserUpdateModalForm\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/users/components/UserUpdateModalForm.js"],"names":["React","Formik","Form","Yup","FormikTextField","makeStyles","Paper","Button","useStyles","theme","root","padding","margin","textAlign","btn","width","backgroundColor","palette","primary","dark","fontSize","fontWeight","borderRadius","color","main","UserUpdateModalForm","userToUpdate","handleUpdate","classes","initialValues","name","email","validationSchema","object","string","required","submitHandler","values","actions","userInfo","setSubmitting","formik","formControl","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center',\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst UserUpdateModalForm = ({ userToUpdate, handleUpdate }) => {\n  const classes = useStyles();\n  const initialValues = {\n    name: userToUpdate?.name,\n    email: userToUpdate?.email,\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email format'),\n  });\n\n  const submitHandler = (values, actions) => {\n    const userInfo = {\n      name: values.name,\n      email: values.email,\n    };\n    handleUpdate(userInfo);\n    actions.setSubmitting(false);\n  };\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitHandler}\n        validateOnMount\n        enableReinitialize\n      >\n        {(formik) => (\n          <Form>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                variant=\"outlined\"\n                values={userToUpdate.name}\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                values={userToUpdate?.email}\n              />\n            </div>\n            <Button\n              type=\"submit\"\n              disabled={\n                !formik.isValid ||\n                formik.isSubmitting ||\n                (formik.values.name === formik.initialValues.name &&\n                  formik.values.email === formik.initialValues.email)\n              }\n              variant=\"contained\"\n              disableElevation\n              className={classes.btn}\n            >\n              CHANGE\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport default UserUpdateModalForm;\n"]},"metadata":{},"sourceType":"module"}