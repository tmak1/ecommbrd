{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import jwt_decode from'jwt-decode';import{composeWithDevTools}from'redux-devtools-extension';import{initialState,rootReducer}from'./reducers/rootReducer';import{logoutUser}from'./actionCreators/userActionCreators';var logoutTimer;var checkTokenExpirationMiddleware=function checkTokenExpirationMiddleware(store){return function(next){return function(action){var token;var shoppingapp=localStorage.getItem('shoppingapp')?JSON.parse(localStorage.getItem('shoppingapp')):null;if(shoppingapp){var _shoppingapp$loggedIn;token=(_shoppingapp$loggedIn=shoppingapp.loggedInUser)===null||_shoppingapp$loggedIn===void 0?void 0:_shoppingapp$loggedIn.token;if(token){if(jwt_decode(token).exp*1000>=Date.now()){var timeLeft=jwt_decode(token).exp*1000-Date.now();logoutTimer=setTimeout(function(){localStorage.clear();store.dispatch(logoutUser());},timeLeft);}else{localStorage.clear();store.dispatch(logoutUser());}}else{clearTimeout(logoutTimer);}}next(action);};};};var middlewares=[thunk,checkTokenExpirationMiddleware];var store=createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middlewares)));export default store;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","jwt_decode","composeWithDevTools","initialState","rootReducer","logoutUser","logoutTimer","checkTokenExpirationMiddleware","store","next","action","token","shoppingapp","localStorage","getItem","JSON","parse","loggedInUser","exp","Date","now","timeLeft","setTimeout","clear","dispatch","clearTimeout","middlewares"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,wBAA1C,CACA,OAASC,UAAT,KAA2B,qCAA3B,CAEA,GAAIC,CAAAA,WAAJ,CAEA,GAAMC,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAACC,KAAD,QAAW,UAACC,IAAD,QAAU,UAACC,MAAD,CAAY,CACtE,GAAIC,CAAAA,KAAJ,CACA,GAAIC,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,EACdC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADc,CAEd,IAFJ,CAIA,GAAIF,WAAJ,CAAiB,2BACfD,KAAK,wBAAGC,WAAW,CAACK,YAAf,gDAAG,sBAA0BN,KAAlC,CACA,GAAIA,KAAJ,CAAW,CACT,GAAIV,UAAU,CAACU,KAAD,CAAV,CAAkBO,GAAlB,CAAwB,IAAxB,EAAgCC,IAAI,CAACC,GAAL,EAApC,CAAgD,CAC9C,GAAMC,CAAAA,QAAQ,CAAGpB,UAAU,CAACU,KAAD,CAAV,CAAkBO,GAAlB,CAAwB,IAAxB,CAA+BC,IAAI,CAACC,GAAL,EAAhD,CAEAd,WAAW,CAAGgB,UAAU,CAAC,UAAM,CAC7BT,YAAY,CAACU,KAAb,GACAf,KAAK,CAACgB,QAAN,CAAenB,UAAU,EAAzB,EACD,CAHuB,CAGrBgB,QAHqB,CAAxB,CAID,CAPD,IAOO,CACLR,YAAY,CAACU,KAAb,GACAf,KAAK,CAACgB,QAAN,CAAenB,UAAU,EAAzB,EACD,CACF,CAZD,IAYO,CACLoB,YAAY,CAACnB,WAAD,CAAZ,CACD,CACF,CACDG,IAAI,CAACC,MAAD,CAAJ,CACD,CAzBiD,EAAX,EAAvC,CA2BA,GAAMgB,CAAAA,WAAW,CAAG,CAAC1B,KAAD,CAAQO,8BAAR,CAApB,CAEA,GAAMC,CAAAA,KAAK,CAAGV,WAAW,CACvBM,WADuB,CAEvBD,YAFuB,CAGvBD,mBAAmB,CAACH,eAAe,MAAf,QAAmB2B,WAAnB,CAAD,CAHI,CAAzB,CAMA,cAAelB,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport jwt_decode from 'jwt-decode';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState, rootReducer } from './reducers/rootReducer';\nimport { logoutUser } from './actionCreators/userActionCreators';\n\nlet logoutTimer;\n\nconst checkTokenExpirationMiddleware = (store) => (next) => (action) => {\n  let token;\n  let shoppingapp = localStorage.getItem('shoppingapp')\n    ? JSON.parse(localStorage.getItem('shoppingapp'))\n    : null;\n\n  if (shoppingapp) {\n    token = shoppingapp.loggedInUser?.token;\n    if (token) {\n      if (jwt_decode(token).exp * 1000 >= Date.now()) {\n        const timeLeft = jwt_decode(token).exp * 1000 - Date.now();\n\n        logoutTimer = setTimeout(() => {\n          localStorage.clear();\n          store.dispatch(logoutUser());\n        }, timeLeft);\n      } else {\n        localStorage.clear();\n        store.dispatch(logoutUser());\n      }\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }\n  next(action);\n};\n\nconst middlewares = [thunk, checkTokenExpirationMiddleware];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}