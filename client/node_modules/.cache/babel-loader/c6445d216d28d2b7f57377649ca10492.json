{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/shared/formElements/ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport initializeFirebase from '../../../firebase';\nimport { formatFileName } from '../../../helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  btn: {\n    height: '45px',\n    padding: '10px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  previewBox: {\n    margin: '0 auto',\n    '&>img': {\n      width: '250px',\n      height: '250px'\n    }\n  }\n}));\nconst ImageUpload = /*#__PURE__*/forwardRef(_c = _s(({\n  token\n}, ref) => {\n  _s();\n\n  const classes = useStyles();\n  const filePickRef = useRef();\n  const [file, setFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n\n  const handleChange = event => {\n    if (event.target.files && event.target.files.length === 1) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const upload = (uploadTask, ref) => {\n    return new Promise((resolve, reject) => {\n      uploadTask.on('state_changed', snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n      }, error => {\n        reject(error);\n      }, () => ref.getDownloadURL().then(url => {\n        resolve(url);\n      }));\n    });\n  };\n\n  const handleUpload = async productName => {\n    if (file) {\n      const firebase = await initializeFirebase(token);\n      setPreviewUrl(null);\n      const fileName = formatFileName(productName);\n      const ref = firebase.storage().ref(`/products/images/${fileName}.jpg`);\n      const uploadTask = ref.put(file);\n      const url = await upload(uploadTask, ref);\n      return url;\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleUpload: handleUpload\n  }));\n  useEffect(() => {\n    if (file) {\n      const fileReader = new FileReader();\n\n      fileReader.onload = () => {\n        setPreviewUrl(fileReader.result);\n      };\n\n      fileReader.readAsDataURL(file);\n    }\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      ref: filePickRef,\n      accept: \".jpg, .jpeg, .png\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.previewBox,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewUrl || '/images/placeholder.jpg',\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      disableElevation: true,\n      className: classes.btn,\n      onClick: () => filePickRef.current.click(),\n      children: \"Choose Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}, \"7RC5daYlC7Kv296j8g8NlDTXfnU=\", false, function () {\n  return [useStyles, useImperativeHandle];\n}));\n_c2 = ImageUpload;\nexport default ImageUpload;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImageUpload$forwardRef\");\n$RefreshReg$(_c2, \"ImageUpload\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/shared/formElements/ImageUpload.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","initializeFirebase","formatFileName","makeStyles","Button","useStyles","theme","btn","height","padding","backgroundColor","palette","primary","dark","fontSize","fontWeight","borderRadius","color","main","previewBox","margin","width","ImageUpload","token","ref","classes","filePickRef","file","setFile","previewUrl","setPreviewUrl","handleChange","event","target","files","length","upload","uploadTask","Promise","resolve","reject","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","getDownloadURL","then","url","handleUpload","productName","firebase","fileName","storage","put","fileReader","FileReader","onload","result","readAsDataURL","textAlign","display","current","click"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\n\nimport initializeFirebase from '../../../firebase';\nimport { formatFileName } from '../../../helpers';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    height: '45px',\n    padding: '10px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  previewBox: {\n    margin: '0 auto',\n    '&>img': {\n      width: '250px',\n      height: '250px',\n    },\n  },\n}));\n\nconst ImageUpload = forwardRef(({ token }, ref) => {\n  const classes = useStyles();\n  const filePickRef = useRef();\n  const [file, setFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n\n  const handleChange = (event) => {\n    if (event.target.files && event.target.files.length === 1) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const upload = (uploadTask, ref) => {\n    return new Promise((resolve, reject) => {\n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n        },\n        (error) => {\n          reject(error);\n        },\n        () =>\n          ref.getDownloadURL().then((url) => {\n            resolve(url);\n          })\n      );\n    });\n  };\n\n  const handleUpload = async (productName) => {\n    if (file) {\n      const firebase = await initializeFirebase(token);\n      setPreviewUrl(null);\n      const fileName = formatFileName(productName);\n      const ref = firebase.storage().ref(`/products/images/${fileName}.jpg`);\n      const uploadTask = ref.put(file);\n      const url = await upload(uploadTask, ref);\n      return url;\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleUpload: handleUpload,\n  }));\n\n  useEffect(() => {\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        setPreviewUrl(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    }\n  }, [file]);\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <input\n        type=\"file\"\n        style={{ display: 'none' }}\n        ref={filePickRef}\n        accept=\".jpg, .jpeg, .png\"\n        onChange={handleChange}\n      />\n      <div className={classes.previewBox}>\n        <img src={previewUrl || '/images/placeholder.jpg'} alt=\"Preview\" />\n      </div>\n      <Button\n        variant=\"contained\"\n        disableElevation\n        className={classes.btn}\n        onClick={() => filePickRef.current.click()}\n      >\n        Choose Image\n      </Button>\n    </div>\n  );\n});\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}