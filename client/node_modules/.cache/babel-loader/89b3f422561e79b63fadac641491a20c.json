{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/shared/contexts/ProductMetaDataContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductMetaDataContext = /*#__PURE__*/createContext({\n  page: '',\n  setPage: () => {},\n  searchTerm: '',\n  setSearchTerm: () => {},\n  perPage: '',\n  setPerPage: () => {},\n  filters: [],\n  setFilters: () => {},\n  sort: '',\n  setSort: () => {},\n  rating: '',\n  setRating: () => {}\n});\n\nconst ProductMetaDataContextProvider = ({\n  children\n}) => {\n  _s();\n\n  var _query$get;\n\n  const {\n    push,\n    location: {\n      pathname,\n      search\n    }\n  } = useHistory();\n  useLocation(); // don't delete this!\n\n  const [query, setQuery] = useState(new URLSearchParams(search));\n  const searchTermFromUrl = query.get('search') || '';\n  const ratingFromUrl = query.get('rating') || 3;\n  const pageFromUrl = query.get('page') || 1;\n  const perPageFromUrl = query.get('perPage') || 5;\n  const filtersFromUrl = ((_query$get = query.get('filters')) === null || _query$get === void 0 ? void 0 : _query$get.split(',')) || [];\n  const sortFromUrl = query.get('sort') || 'price|DESC';\n  const [searchTerm, setSearchTerm] = useState(searchTermFromUrl);\n  const [rating, setRating] = useState(ratingFromUrl);\n  const [page, setPage] = useState(pageFromUrl);\n  const [perPage, setPerPage] = useState(perPageFromUrl);\n  const [filters, setFilters] = useState(filtersFromUrl);\n  const [sort, setSort] = useState(sortFromUrl);\n  useEffect(() => {\n    setQuery(new URLSearchParams(search));\n  }, [search]);\n  useEffect(() => {\n    if (pathname === '/products' && !query.toString()) {\n      push(`/products?page=1&search=&rating=&perPage=&filters=&sort=`);\n      setSearchTerm('');\n      setPage(1);\n      setFilters([]);\n      setSort('price|DESC');\n    }\n  }, [push, query, pathname]);\n  useEffect(() => {\n    if (searchTerm.trim() !== '') {\n      setRating(1);\n      setFilters([]);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    push(`/products?page=1&search=${searchTerm}&rating=${rating}&perPage=${perPage}&filters=${filters}&sort=${sort}`);\n    setPage(1);\n  }, [push, searchTerm, rating, perPage, filters, sort]);\n  useEffect(() => {\n    push(`/products?page=${page}&search=${searchTerm}&rating=${rating}&perPage=${perPage}&filters=${filters}&sort=${sort}`);\n  }, [push, page, searchTerm, rating, perPage, filters, sort]);\n  return /*#__PURE__*/_jsxDEV(ProductMetaDataContext.Provider, {\n    value: {\n      page,\n      setPage,\n      searchTerm,\n      setSearchTerm,\n      perPage,\n      setPerPage,\n      filters,\n      setFilters,\n      sort,\n      setSort,\n      rating,\n      setRating\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductMetaDataContextProvider, \"FYjXhlCXpN6Dcdhsdg3sEBgSgr0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = ProductMetaDataContextProvider;\nexport default ProductMetaDataContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductMetaDataContextProvider\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/shared/contexts/ProductMetaDataContextProvider.js"],"names":["React","useState","useEffect","createContext","useLocation","useHistory","ProductMetaDataContext","page","setPage","searchTerm","setSearchTerm","perPage","setPerPage","filters","setFilters","sort","setSort","rating","setRating","ProductMetaDataContextProvider","children","push","location","pathname","search","query","setQuery","URLSearchParams","searchTermFromUrl","get","ratingFromUrl","pageFromUrl","perPageFromUrl","filtersFromUrl","split","sortFromUrl","toString","trim"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nexport const ProductMetaDataContext = createContext({\n  page: '',\n  setPage: () => {},\n  searchTerm: '',\n  setSearchTerm: () => {},\n  perPage: '',\n  setPerPage: () => {},\n  filters: [],\n  setFilters: () => {},\n  sort: '',\n  setSort: () => {},\n  rating: '',\n  setRating: () => {},\n});\n\nconst ProductMetaDataContextProvider = ({ children }) => {\n  const {\n    push,\n    location: { pathname, search },\n  } = useHistory();\n  useLocation(); // don't delete this!\n  const [query, setQuery] = useState(new URLSearchParams(search));\n  const searchTermFromUrl = query.get('search') || '';\n  const ratingFromUrl = query.get('rating') || 3;\n  const pageFromUrl = query.get('page') || 1;\n  const perPageFromUrl = query.get('perPage') || 5;\n  const filtersFromUrl = query.get('filters')?.split(',') || [];\n  const sortFromUrl = query.get('sort') || 'price|DESC';\n\n  const [searchTerm, setSearchTerm] = useState(searchTermFromUrl);\n  const [rating, setRating] = useState(ratingFromUrl);\n  const [page, setPage] = useState(pageFromUrl);\n  const [perPage, setPerPage] = useState(perPageFromUrl);\n  const [filters, setFilters] = useState(filtersFromUrl);\n  const [sort, setSort] = useState(sortFromUrl);\n\n  useEffect(() => {\n    setQuery(new URLSearchParams(search));\n  }, [search]);\n\n  useEffect(() => {\n    if (pathname === '/products' && !query.toString()) {\n      push(`/products?page=1&search=&rating=&perPage=&filters=&sort=`);\n      setSearchTerm('');\n      setPage(1);\n      setFilters([]);\n      setSort('price|DESC');\n    }\n  }, [push, query, pathname]);\n\n  useEffect(() => {\n    if (searchTerm.trim() !== '') {\n      setRating(1);\n      setFilters([]);\n    }\n  }, [searchTerm]);\n\n  useEffect(() => {\n    push(\n      `/products?page=1&search=${searchTerm}&rating=${rating}&perPage=${perPage}&filters=${filters}&sort=${sort}`\n    );\n    setPage(1);\n  }, [push, searchTerm, rating, perPage, filters, sort]);\n\n  useEffect(() => {\n    push(\n      `/products?page=${page}&search=${searchTerm}&rating=${rating}&perPage=${perPage}&filters=${filters}&sort=${sort}`\n    );\n  }, [push, page, searchTerm, rating, perPage, filters, sort]);\n\n  return (\n    <ProductMetaDataContext.Provider\n      value={{\n        page,\n        setPage,\n        searchTerm,\n        setSearchTerm,\n        perPage,\n        setPerPage,\n        filters,\n        setFilters,\n        sort,\n        setSort,\n        rating,\n        setRating,\n      }}\n    >\n      {children}\n    </ProductMetaDataContext.Provider>\n  );\n};\n\nexport default ProductMetaDataContextProvider;\n"]},"metadata":{},"sourceType":"module"}