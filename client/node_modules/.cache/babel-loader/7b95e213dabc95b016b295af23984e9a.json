{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/products/components/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReviewForm from './ReviewForm';\nimport ReviewList from './ReviewList';\nimport PageHeading from '../../shared/ui/PageHeading';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport { getAllProductReviews } from '../../../redux/actionCreators/reviewActionCreators';\nimport { getProductOrderByUser } from '../../../redux/actionCreators/orderActionCreators';\nimport SkeletonReviews from '../../shared/ui/skeletons/SkeletonReviews';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reviews = ({\n  product\n}) => {\n  _s();\n\n  var _loggedInUser$user;\n\n  const dispatch = useDispatch();\n  const {\n    loggedInUser\n  } = useSelector(state => state.userAuth);\n  const {\n    loading,\n    error,\n    reviews\n  } = useSelector(state => state.productReviews || {});\n  const {\n    loading: loading2,\n    error: error2,\n    orderExists\n  } = useSelector(state => state.orderForProductByUser || {});\n\n  const refreshReviews = () => {\n    dispatch(getAllProductReviews(product.id));\n  };\n\n  useEffect(() => {\n    dispatch(getAllProductReviews(product.id));\n  }, [product === null || product === void 0 ? void 0 : product.id, dispatch]);\n  useEffect(() => {\n    if (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token) {\n      dispatch(getProductOrderByUser(product === null || product === void 0 ? void 0 : product.id, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token));\n    }\n  }, [reviews, dispatch, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token, product.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(loading || loading2) && /*#__PURE__*/_jsxDEV(SkeletonReviews, {\n        userreviews: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 35\n      }, this), (error || error2) && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: error || error2,\n        severity: \"error\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), !loading && !loading2 && !error && !error2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [((loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token) && orderExists || (loggedInUser === null || loggedInUser === void 0 ? void 0 : (_loggedInUser$user = loggedInUser.user) === null || _loggedInUser$user === void 0 ? void 0 : _loggedInUser$user.isAdmin)) && /*#__PURE__*/_jsxDEV(ReviewForm, {\n          loggedInUser: loggedInUser,\n          product: product,\n          review: reviews === null || reviews === void 0 ? void 0 : reviews.find(review => (review === null || review === void 0 ? void 0 : review.userId._id) === (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.user.id)),\n          refreshReviews: refreshReviews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PageHeading, {\n          size: \"medium\",\n          text: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), (reviews === null || reviews === void 0 ? void 0 : reviews.length) > 0 ? /*#__PURE__*/_jsxDEV(ReviewList, {\n          reviews: reviews,\n          loggedInUser: loggedInUser,\n          userreview: false,\n          refreshReviews: refreshReviews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No reviews yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Reviews, \"m8wD8PJh131Lpp+TJAQrvLLRomA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/products/components/Reviews.js"],"names":["React","useEffect","useDispatch","useSelector","ReviewForm","ReviewList","PageHeading","AlertMessage","getAllProductReviews","getProductOrderByUser","SkeletonReviews","Reviews","product","dispatch","loggedInUser","state","userAuth","loading","error","reviews","productReviews","loading2","error2","orderExists","orderForProductByUser","refreshReviews","id","token","user","isAdmin","find","review","userId","_id","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ReviewForm from './ReviewForm';\nimport ReviewList from './ReviewList';\nimport PageHeading from '../../shared/ui/PageHeading';\nimport AlertMessage from '../../shared/ui/AlertMessage';\n\nimport { getAllProductReviews } from '../../../redux/actionCreators/reviewActionCreators';\nimport { getProductOrderByUser } from '../../../redux/actionCreators/orderActionCreators';\nimport SkeletonReviews from '../../shared/ui/skeletons/SkeletonReviews';\n\nconst Reviews = ({ product }) => {\n  const dispatch = useDispatch();\n  const { loggedInUser } = useSelector((state) => state.userAuth);\n  const { loading, error, reviews } = useSelector(\n    (state) => state.productReviews || {}\n  );\n  const {\n    loading: loading2,\n    error: error2,\n    orderExists,\n  } = useSelector((state) => state.orderForProductByUser || {});\n\n  const refreshReviews = () => {\n    dispatch(getAllProductReviews(product.id));\n  };\n\n  useEffect(() => {\n    dispatch(getAllProductReviews(product.id));\n  }, [product?.id, dispatch]);\n\n  useEffect(() => {\n    if (loggedInUser?.token) {\n      dispatch(getProductOrderByUser(product?.id, loggedInUser?.token));\n    }\n  }, [reviews, dispatch, loggedInUser?.token, product.id]);\n\n  return (\n    <>\n      <div>\n        {(loading || loading2) && <SkeletonReviews userreviews={false} />}\n        {(error || error2) && (\n          <AlertMessage\n            message={error || error2}\n            severity=\"error\"\n            variant=\"outlined\"\n          />\n        )}\n        {!loading && !loading2 && !error && !error2 ? (\n          <>\n            {((loggedInUser?.token && orderExists) ||\n              loggedInUser?.user?.isAdmin) && (\n              <ReviewForm\n                loggedInUser={loggedInUser}\n                product={product}\n                review={reviews?.find(\n                  (review) => review?.userId._id === loggedInUser?.user.id\n                )}\n                refreshReviews={refreshReviews}\n              />\n            )}\n            <PageHeading size=\"medium\" text=\"Reviews\" />\n            {reviews?.length > 0 ? (\n              <ReviewList\n                reviews={reviews}\n                loggedInUser={loggedInUser}\n                userreview={false}\n                refreshReviews={refreshReviews}\n              />\n            ) : (\n              <div>No reviews yet</div>\n            )}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}