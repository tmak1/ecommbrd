{"ast":null,"code":"import _toConsumableArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useField}from'formik';// import { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from'@material-ui/core/InputLabel';import MuiSelect from'@material-ui/core/Select';import FormHelperText from'@material-ui/core/FormHelperText';// const useStyles = makeStyles((theme) => ({\n//   textField: {\n//     width: '95%',\n//     margin: theme.spacing(2, 'auto'),\n//     fontSize: theme.spacing(2),\n//   },\n// }));\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormikSelect=function FormikSelect(_ref){var fieldName=_ref.fieldName,label=_ref.label,itemsArray=_ref.itemsArray,props=_objectWithoutProperties(_ref,[\"fieldName\",\"label\",\"itemsArray\"]);// const classes = useStyles();\nvar _useField=useField(fieldName),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InputLabel,{children:label}),/*#__PURE__*/_jsx(MuiSelect,{id:field.name,name:field.name,error:meta.touched&&Boolean(meta.error),value:field.value,onChange:field.onChange,onBlur:field.onBlur,native:true,children:itemsArray.map(function(item){return/*#__PURE__*/_jsx(\"option\",{value:item,children:typeof item==='string'?[].concat(_toConsumableArray(item.slice(0,1).toUpperCase()),_toConsumableArray(item.slice(1))):item},item);})}),/*#__PURE__*/_jsx(FormHelperText,{children:meta.touched?meta.error:''})]});};export default FormikSelect;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/shared/formElements/FormikSelect.js"],"names":["React","useField","InputLabel","MuiSelect","FormHelperText","FormikSelect","fieldName","label","itemsArray","props","field","meta","name","touched","Boolean","error","value","onChange","onBlur","map","item","slice","toUpperCase"],"mappings":"ohBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;6IAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgD,IAA7CC,CAAAA,SAA6C,MAA7CA,SAA6C,CAAlCC,KAAkC,MAAlCA,KAAkC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAZC,KAAY,mEACnE;AACA,cAAsBR,QAAQ,CAACK,SAAD,CAA9B,wCAAOI,KAAP,eAAcC,IAAd,eACA,mBACE,wCACE,KAAC,UAAD,WAAaJ,KAAb,EADF,cAEE,KAAC,SAAD,EACE,EAAE,CAAEG,KAAK,CAACE,IADZ,CAEE,IAAI,CAAEF,KAAK,CAACE,IAFd,CAGE,KAAK,CAAED,IAAI,CAACE,OAAL,EAAgBC,OAAO,CAACH,IAAI,CAACI,KAAN,CAHhC,CAIE,KAAK,CAAEL,KAAK,CAACM,KAJf,CAKE,QAAQ,CAAEN,KAAK,CAACO,QALlB,CAME,MAAM,CAAEP,KAAK,CAACQ,MANhB,CAOE,MAAM,KAPR,UASGV,UAAU,CAACW,GAAX,CAAe,SAACC,IAAD,qBACd,eAAmB,KAAK,CAAEA,IAA1B,UACG,MAAOA,CAAAA,IAAP,GAAgB,QAAhB,8BACOA,IAAI,CAACC,KAAL,CAAW,CAAX,CAAc,CAAd,EAAiBC,WAAjB,EADP,qBAC0CF,IAAI,CAACC,KAAL,CAAW,CAAX,CAD1C,GAEGD,IAHN,EAAaA,IAAb,CADc,EAAf,CATH,EAFF,cAmBE,KAAC,cAAD,WAAiBT,IAAI,CAACE,OAAL,CAAeF,IAAI,CAACI,KAApB,CAA4B,EAA7C,EAnBF,GADF,CAuBD,CA1BD,CA4BA,cAAeV,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\n\n// import { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MuiSelect from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\n// const useStyles = makeStyles((theme) => ({\n//   textField: {\n//     width: '95%',\n//     margin: theme.spacing(2, 'auto'),\n//     fontSize: theme.spacing(2),\n//   },\n// }));\n\nconst FormikSelect = ({ fieldName, label, itemsArray, ...props }) => {\n  // const classes = useStyles();\n  const [field, meta] = useField(fieldName);\n  return (\n    <>\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        id={field.name}\n        name={field.name}\n        error={meta.touched && Boolean(meta.error)}\n        value={field.value}\n        onChange={field.onChange}\n        onBlur={field.onBlur}\n        native\n      >\n        {itemsArray.map((item) => (\n          <option key={item} value={item}>\n            {typeof item === 'string'\n              ? [...item.slice(0, 1).toUpperCase(), ...item.slice(1)]\n              : item}\n          </option>\n        ))}\n      </MuiSelect>\n      <FormHelperText>{meta.touched ? meta.error : ''}</FormHelperText>\n    </>\n  );\n};\n\nexport default FormikSelect;\n"]},"metadata":{},"sourceType":"module"}