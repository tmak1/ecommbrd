{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/users/components/UserUpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link as Rlink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport ShowPasswordAdornment from '../../shared/ui/ShowPasswordAdornment';\nimport { logoutUser, updateUser, userChangedName } from '../../../redux/actionCreators/userActionCreators';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '30%',\n    padding: '20px',\n    [theme.breakpoints.down('xs')]: {\n      minWidth: '100%'\n    }\n  },\n  emailsec: {\n    display: 'flex',\n    gap: '30px',\n    marginLeft: '30px',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column'\n    }\n  },\n  link: {\n    '& p:hover': {\n      pointer: 'cursor',\n      color: 'blue'\n    }\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main\n    }\n  }\n}));\n\nconst UserUpdateForm = ({\n  loggedInUser,\n  token,\n  dispatch,\n  updatedUser,\n  passwordNotModified,\n  setOpenToast\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const initialValues = {\n    name: (updatedUser === null || updatedUser === void 0 ? void 0 : updatedUser.name) || (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name),\n    email: (updatedUser === null || updatedUser === void 0 ? void 0 : updatedUser.email) || (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.email),\n    password: '',\n    confirmPassword: ''\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    email: Yup.string().required('Email required').email('Invalid email format'),\n    password: Yup.string().test('len', 'Must be atleast (3) characters', val => !val || val.trim().length >= 3),\n    confirmPassword: Yup.string().test('len', 'Must be atleast (3) characters', val => !val || val.trim().length >= 3).oneOf([Yup.ref('password'), null], 'Passwords do not match')\n  });\n\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const submitHandler = (values, actions) => {\n    const userInfo = {\n      name: values.name,\n      email: values.email,\n      password: values.password\n    };\n    dispatch(updateUser(loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id, token, userInfo));\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (passwordNotModified !== null && passwordNotModified !== undefined) {\n      if (passwordNotModified === false) {\n        dispatch(logoutUser());\n      } else {\n        dispatch(userChangedName(updatedUser === null || updatedUser === void 0 ? void 0 : updatedUser.name));\n        setOpenToast(true);\n      }\n    }\n  }, [passwordNotModified, dispatch, updatedUser, setOpenToast]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 0,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      children: \"Change your details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), loggedInUser && /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: submitHandler,\n      validateOnMount: true,\n      enableReinitialize: true,\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"name\",\n            type: \"text\",\n            label: \"Name\",\n            variant: \"outlined\",\n            values: (updatedUser === null || updatedUser === void 0 ? void 0 : updatedUser.name) || (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            variant: \"outlined\",\n            values: (updatedUser === null || updatedUser === void 0 ? void 0 : updatedUser.email) || (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name),\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.emailsec,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              align: \"left\",\n              gutterBottom: true,\n              paragraph: true,\n              style: {\n                margin: '0',\n                display: 'inline-block'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Email change disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              component: Rlink,\n              to: \"/auth\",\n              align: \"left\",\n              color: \"textSecondary\",\n              className: classes.link,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                align: \"left\",\n                gutterBottom: true,\n                paragraph: true,\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"Register another account instead?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"password\",\n            type: showPassword ? 'text' : 'password',\n            label: \"Password\",\n            variant: \"outlined\",\n            adornment: /*#__PURE__*/_jsxDEV(ShowPasswordAdornment, {\n              showPassword: showPassword,\n              toggleShowPassword: toggleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this),\n            adornmentPosition: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"confirmPassword\",\n            type: showPassword ? 'text' : 'password',\n            label: \"confirm password\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formik.isValid || formik.isSubmitting || !formik.values.password && formik.values.name === formik.initialValues.name,\n          variant: \"contained\",\n          disableElevation: true,\n          className: classes.btn,\n          children: \"CHANGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserUpdateForm, \"2sflK/70or1h9ASML9Q2iupsjME=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserUpdateForm;\nexport default UserUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserUpdateForm\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/users/components/UserUpdateForm.js"],"names":["React","useState","useEffect","Link","Rlink","Formik","Form","Yup","FormikTextField","ShowPasswordAdornment","logoutUser","updateUser","userChangedName","makeStyles","Typography","Paper","Button","useStyles","theme","root","width","padding","breakpoints","down","minWidth","emailsec","display","gap","marginLeft","flexDirection","link","pointer","color","btn","margin","backgroundColor","palette","primary","dark","fontSize","fontWeight","borderRadius","main","UserUpdateForm","loggedInUser","token","dispatch","updatedUser","passwordNotModified","setOpenToast","classes","showPassword","setShowPassword","initialValues","name","email","password","confirmPassword","validationSchema","object","string","required","test","val","trim","length","oneOf","ref","toggleShowPassword","prevState","submitHandler","values","actions","userInfo","id","setSubmitting","undefined","formik","formControl","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as Rlink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport ShowPasswordAdornment from '../../shared/ui/ShowPasswordAdornment';\n\nimport {\n  logoutUser,\n  updateUser,\n  userChangedName,\n} from '../../../redux/actionCreators/userActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '30%',\n    padding: '20px',\n    [theme.breakpoints.down('xs')]: {\n      minWidth: '100%',\n    },\n  },\n  emailsec: {\n    display: 'flex',\n    gap: '30px',\n    marginLeft: '30px',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n    },\n  },\n  link: {\n    '& p:hover': {\n      pointer: 'cursor',\n      color: 'blue',\n    },\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst UserUpdateForm = ({\n  loggedInUser,\n  token,\n  dispatch,\n  updatedUser,\n  passwordNotModified,\n  setOpenToast,\n}) => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const initialValues = {\n    name: updatedUser?.name || loggedInUser?.name,\n    email: updatedUser?.email || loggedInUser?.email,\n    password: '',\n    confirmPassword: '',\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email format'),\n    password: Yup.string().test(\n      'len',\n      'Must be atleast (3) characters',\n      (val) => !val || val.trim().length >= 3\n    ),\n    confirmPassword: Yup.string()\n      .test(\n        'len',\n        'Must be atleast (3) characters',\n        (val) => !val || val.trim().length >= 3\n      )\n      .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  });\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const submitHandler = (values, actions) => {\n    const userInfo = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(updateUser(loggedInUser?.id, token, userInfo));\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (passwordNotModified !== null && passwordNotModified !== undefined) {\n      if (passwordNotModified === false) {\n        dispatch(logoutUser());\n      } else {\n        dispatch(userChangedName(updatedUser?.name));\n        setOpenToast(true);\n      }\n    }\n  }, [passwordNotModified, dispatch, updatedUser, setOpenToast]);\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"textSecondary\"\n        gutterBottom\n      >\n        Change your details\n      </Typography>\n      {loggedInUser && (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={submitHandler}\n          validateOnMount\n          enableReinitialize\n        >\n          {(formik) => (\n            <Form>\n              <div className={classes.formControl}>\n                <FormikTextField\n                  fieldName=\"name\"\n                  type=\"text\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  values={updatedUser?.name || loggedInUser?.name}\n                />\n              </div>\n              <div className={classes.formControl}>\n                <FormikTextField\n                  fieldName=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  values={updatedUser?.email || loggedInUser?.name}\n                  disabled\n                />\n                <div className={classes.emailsec}>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    align=\"left\"\n                    gutterBottom\n                    paragraph\n                    style={{ margin: '0', display: 'inline-block' }}\n                  >\n                    <em>Email change disabled</em>\n                  </Typography>\n                  <Link\n                    component={Rlink}\n                    to=\"/auth\"\n                    align=\"left\"\n                    color=\"textSecondary\"\n                    className={classes.link}\n                  >\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      align=\"left\"\n                      gutterBottom\n                      paragraph\n                    >\n                      <em>Register another account instead?</em>\n                    </Typography>\n                  </Link>\n                </div>\n              </div>\n              <div className={classes.formControl}>\n                <FormikTextField\n                  fieldName=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  adornment={\n                    <ShowPasswordAdornment\n                      showPassword={showPassword}\n                      toggleShowPassword={toggleShowPassword}\n                    />\n                  }\n                  adornmentPosition=\"end\"\n                />\n              </div>\n              <div className={classes.formControl}>\n                <FormikTextField\n                  fieldName=\"confirmPassword\"\n                  type={showPassword ? 'text' : 'password'}\n                  label=\"confirm password\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <Button\n                type=\"submit\"\n                disabled={\n                  !formik.isValid ||\n                  formik.isSubmitting ||\n                  (!formik.values.password &&\n                    formik.values.name === formik.initialValues.name)\n                }\n                variant=\"contained\"\n                disableElevation\n                className={classes.btn}\n              >\n                CHANGE\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Paper>\n  );\n};\n\nexport default UserUpdateForm;\n"]},"metadata":{},"sourceType":"module"}