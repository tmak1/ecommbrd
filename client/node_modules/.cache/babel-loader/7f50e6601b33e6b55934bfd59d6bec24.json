{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/users/components/ListSearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport { listAdminProducts } from '../../../redux/actionCreators/productActionCreators';\nimport { listUsers } from '../../../redux/actionCreators/userActionCreators';\nimport { getOrderListByUser, getOrderListByProduct } from '../../../redux/actionCreators/orderActionCreators';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  formControl: {\n    backgroundColor: '#FFF',\n    '& input': {\n      height: '40px',\n      width: '250px',\n      border: 'none',\n      padding: '0px 6px'\n    },\n    '& .MuiOutlinedInput-root': {\n      borderRadius: '0px'\n    }\n  },\n  btn: {\n    height: '40px',\n    marginLeft: '15px',\n    backgroundColor: 'rgba(0,0,0,1.0)',\n    color: '#fff',\n    fontSize: '10px',\n    fontWeight: 'bolder',\n    borderRadius: '0px',\n    '&:hover': {\n      backgroundColor: 'rgba(0,0,0,0.8)'\n    }\n  }\n}));\n\nconst ListSearchBar = ({\n  item,\n  args\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const initialValues = {\n    searchTerm: ''\n  };\n  let dispatchFunc;\n\n  switch (item) {\n    case 'product':\n      dispatchFunc = listAdminProducts;\n      break;\n\n    case 'user':\n      dispatchFunc = listUsers;\n      break;\n\n    case 'user order':\n      dispatchFunc = getOrderListByUser;\n      break;\n\n    case 'product order':\n      dispatchFunc = getOrderListByProduct;\n      break;\n\n    default:\n      break;\n  }\n\n  const handleSubmit = (values, actions) => {\n    // console.log(dispatchFunc);\n    // console.log(...args, values.searchTerm);\n    dispatch(dispatchFunc(...args, values.searchTerm));\n    actions.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n    children: formik => /*#__PURE__*/_jsxDEV(Form, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(FormikTextField, {\n        className: classes.formControl,\n        fieldName: \"searchTerm\",\n        type: \"text\",\n        variant: \"outlined\",\n        placeholder: `Search by ${item} id`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"start\",\n        type: \"submit\",\n        disabled: formik.isSubmitting,\n        className: classes.btn,\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListSearchBar, \"aFWslISJzTtHlU1qXyXYeeBhNak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = ListSearchBar;\nexport default ListSearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListSearchBar\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/users/components/ListSearchBar.js"],"names":["React","useDispatch","Formik","Form","FormikTextField","listAdminProducts","listUsers","getOrderListByUser","getOrderListByProduct","makeStyles","IconButton","SearchIcon","useStyles","theme","root","display","alignItems","formControl","backgroundColor","height","width","border","padding","borderRadius","btn","marginLeft","color","fontSize","fontWeight","ListSearchBar","item","args","classes","dispatch","initialValues","searchTerm","dispatchFunc","handleSubmit","values","actions","setSubmitting","formik","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\n\nimport { listAdminProducts } from '../../../redux/actionCreators/productActionCreators';\nimport { listUsers } from '../../../redux/actionCreators/userActionCreators';\nimport {\n  getOrderListByUser,\n  getOrderListByProduct,\n} from '../../../redux/actionCreators/orderActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  formControl: {\n    backgroundColor: '#FFF',\n    '& input': {\n      height: '40px',\n      width: '250px',\n      border: 'none',\n      padding: '0px 6px',\n    },\n    '& .MuiOutlinedInput-root': {\n      borderRadius: '0px',\n    },\n  },\n  btn: {\n    height: '40px',\n    marginLeft: '15px',\n    backgroundColor: 'rgba(0,0,0,1.0)',\n    color: '#fff',\n    fontSize: '10px',\n    fontWeight: 'bolder',\n    borderRadius: '0px',\n    '&:hover': {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n    },\n  },\n}));\n\nconst ListSearchBar = ({ item, args }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const initialValues = {\n    searchTerm: '',\n  };\n  let dispatchFunc;\n  switch (item) {\n    case 'product':\n      dispatchFunc = listAdminProducts;\n      break;\n    case 'user':\n      dispatchFunc = listUsers;\n      break;\n    case 'user order':\n      dispatchFunc = getOrderListByUser;\n      break;\n    case 'product order':\n      dispatchFunc = getOrderListByProduct;\n      break;\n    default:\n      break;\n  }\n  const handleSubmit = (values, actions) => {\n    // console.log(dispatchFunc);\n    // console.log(...args, values.searchTerm);\n    dispatch(dispatchFunc(...args, values.searchTerm));\n    actions.setSubmitting(false);\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      enableReinitialize\n    >\n      {(formik) => (\n        <Form className={classes.root}>\n          <FormikTextField\n            className={classes.formControl}\n            fieldName=\"searchTerm\"\n            type=\"text\"\n            variant=\"outlined\"\n            placeholder={`Search by ${item} id`}\n          />\n          <IconButton\n            edge=\"start\"\n            type=\"submit\"\n            disabled={formik.isSubmitting}\n            className={classes.btn}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ListSearchBar;\n"]},"metadata":{},"sourceType":"module"}