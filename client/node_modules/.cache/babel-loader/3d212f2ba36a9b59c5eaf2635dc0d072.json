{"ast":null,"code":"import * as req from '../actions/shippingActions';\n\nconst shippingReducer = (state = {}, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case req.SHIPPING_ADDRESSES_REQUEST:\n      return {\n        loading: true\n      };\n\n    case req.SHIPPING_ADDRESSES_SUCCESS:\n      return {\n        loading: false,\n        shippingAddresses: payload\n      };\n\n    case req.SHIPPING_ADDRESSES_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.SAVE_SHIPPING_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case req.SAVE_SHIPPING_SUCCESS:\n      return { ...state,\n        loading: false,\n        shippingAddresses: [...state.shippingAddresses, payload]\n      };\n\n    case req.SAVE_SHIPPING_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.EDIT_SHIPPING_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case req.EDIT_SHIPPING_SUCCESS:\n      return { ...state,\n        loading: false,\n        shippingAddresses: [...state.shippingAddresses.filter(address => address.id !== payload.id), payload]\n      };\n\n    case req.EDIT_SHIPPING_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.REMOVE_SHIPPING_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case req.REMOVE_SHIPPING_SUCCESS:\n      return { ...state,\n        loading: false,\n        shippingAddresses: state.shippingAddresses.filter(address => address.id !== payload.id)\n      };\n\n    case req.REMOVE_SHIPPING_FAILURE:\n      return {\n        loading: false,\n        error: payload\n      };\n\n    case req.REMOVE_ALL_SHIPPING:\n      return {\n        shippingAddresses: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shippingReducer;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/redux/reducers/shippingReducer.js"],"names":["req","shippingReducer","state","type","payload","SHIPPING_ADDRESSES_REQUEST","loading","SHIPPING_ADDRESSES_SUCCESS","shippingAddresses","SHIPPING_ADDRESSES_FAILURE","error","SAVE_SHIPPING_REQUEST","SAVE_SHIPPING_SUCCESS","SAVE_SHIPPING_FAILURE","EDIT_SHIPPING_REQUEST","EDIT_SHIPPING_SUCCESS","filter","address","id","EDIT_SHIPPING_FAILURE","REMOVE_SHIPPING_REQUEST","REMOVE_SHIPPING_SUCCESS","REMOVE_SHIPPING_FAILURE","REMOVE_ALL_SHIPPING"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,4BAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAmC;AACzD,UAAQD,IAAR;AACE,SAAKH,GAAG,CAACK,0BAAT;AACE,aAAO;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKN,GAAG,CAACO,0BAAT;AACE,aAAO;AAAED,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,iBAAiB,EAAEJ;AAArC,OAAP;;AACF,SAAKJ,GAAG,CAACS,0BAAT;AACE,aAAO;AAAEH,QAAAA,OAAO,EAAE,KAAX;AAAkBI,QAAAA,KAAK,EAAEN;AAAzB,OAAP;;AAEF,SAAKJ,GAAG,CAACW,qBAAT;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYI,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKN,GAAG,CAACY,qBAAT;AACE,aAAO,EACL,GAAGV,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,iBAAiB,EAAE,CAAC,GAAGN,KAAK,CAACM,iBAAV,EAA6BJ,OAA7B;AAHd,OAAP;;AAKF,SAAKJ,GAAG,CAACa,qBAAT;AACE,aAAO;AACLP,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEN;AAFF,OAAP;;AAKF,SAAKJ,GAAG,CAACc,qBAAT;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYI,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKN,GAAG,CAACe,qBAAT;AACE,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,iBAAiB,EAAE,CACjB,GAAGN,KAAK,CAACM,iBAAN,CAAwBQ,MAAxB,CACAC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAed,OAAO,CAACc,EADnC,CADc,EAIjBd,OAJiB;AAHd,OAAP;;AAUF,SAAKJ,GAAG,CAACmB,qBAAT;AACE,aAAO;AACLb,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEN;AAFF,OAAP;;AAKF,SAAKJ,GAAG,CAACoB,uBAAT;AACE,aAAO,EAAE,GAAGlB,KAAL;AAAYI,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKN,GAAG,CAACqB,uBAAT;AACE,aAAO,EACL,GAAGnB,KADE;AAELI,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,iBAAiB,EAAEN,KAAK,CAACM,iBAAN,CAAwBQ,MAAxB,CAChBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAed,OAAO,CAACc,EADnB;AAHd,OAAP;;AAOF,SAAKlB,GAAG,CAACsB,uBAAT;AACE,aAAO;AACLhB,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,KAAK,EAAEN;AAFF,OAAP;;AAIF,SAAKJ,GAAG,CAACuB,mBAAT;AACE,aAAO;AAAEf,QAAAA,iBAAiB,EAAE;AAArB,OAAP;;AACF;AACE,aAAON,KAAP;AA3DJ;AA6DD,CA9DD;;AAgEA,eAAeD,eAAf","sourcesContent":["import * as req from '../actions/shippingActions';\n\nconst shippingReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case req.SHIPPING_ADDRESSES_REQUEST:\n      return { loading: true };\n    case req.SHIPPING_ADDRESSES_SUCCESS:\n      return { loading: false, shippingAddresses: payload };\n    case req.SHIPPING_ADDRESSES_FAILURE:\n      return { loading: false, error: payload };\n\n    case req.SAVE_SHIPPING_REQUEST:\n      return { ...state, loading: true };\n    case req.SAVE_SHIPPING_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        shippingAddresses: [...state.shippingAddresses, payload],\n      };\n    case req.SAVE_SHIPPING_FAILURE:\n      return {\n        loading: false,\n        error: payload,\n      };\n\n    case req.EDIT_SHIPPING_REQUEST:\n      return { ...state, loading: true };\n    case req.EDIT_SHIPPING_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        shippingAddresses: [\n          ...state.shippingAddresses.filter(\n            (address) => address.id !== payload.id\n          ),\n          payload,\n        ],\n      };\n    case req.EDIT_SHIPPING_FAILURE:\n      return {\n        loading: false,\n        error: payload,\n      };\n\n    case req.REMOVE_SHIPPING_REQUEST:\n      return { ...state, loading: true };\n    case req.REMOVE_SHIPPING_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        shippingAddresses: state.shippingAddresses.filter(\n          (address) => address.id !== payload.id\n        ),\n      };\n    case req.REMOVE_SHIPPING_FAILURE:\n      return {\n        loading: false,\n        error: payload,\n      };\n    case req.REMOVE_ALL_SHIPPING:\n      return { shippingAddresses: [] };\n    default:\n      return state;\n  }\n};\n\nexport default shippingReducer;\n"]},"metadata":{},"sourceType":"module"}