{"ast":null,"code":"import _objectSpread from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{useField}from'formik';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{textField:{width:'95%',margin:theme.spacing(2,'auto'),fontSize:theme.spacing(2)}};});var FormikTextField=function FormikTextField(_ref){var fieldName=_ref.fieldName,adornment=_ref.adornment,_ref$adornmentPositio=_ref.adornmentPosition,adornmentPosition=_ref$adornmentPositio===void 0?'end':_ref$adornmentPositio,maxLength=_ref.maxLength,_ref$multiline=_ref.multiline,multiline=_ref$multiline===void 0?false:_ref$multiline,_ref$rows=_ref.rows,rows=_ref$rows===void 0?0:_ref$rows,props=_objectWithoutProperties(_ref,[\"fieldName\",\"adornment\",\"adornmentPosition\",\"maxLength\",\"multiline\",\"rows\"]);var classes=useStyles();var _useField=useField(fieldName),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];return/*#__PURE__*/_jsx(TextField,_objectSpread({id:field.name,name:field.name,helperText:meta.touched?meta.error:'',error:meta.touched&&Boolean(meta.error),value:field.value,onInput:function onInput(e){var input=Number(e.target.value);if(input&&input>0&&maxLength){e.target.value=Math.max(0,parseInt(e.target.value)).toString().slice(0,maxLength);}},InputProps:_defineProperty({},\"\".concat(adornmentPosition,\"Adornment\"),adornment),onChange:field.onChange,onBlur:field.onBlur,className:classes.textField,multiline:multiline,inputProps:{maxLength:maxLength},rows:rows},props));};export default FormikTextField;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/shared/formElements/FormikTextField.js"],"names":["React","useField","makeStyles","TextField","useStyles","theme","textField","width","margin","spacing","fontSize","FormikTextField","fieldName","adornment","adornmentPosition","maxLength","multiline","rows","props","classes","field","meta","name","touched","error","Boolean","value","e","input","Number","target","Math","max","parseInt","toString","slice","onChange","onBlur"],"mappings":"qrBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAACG,KAAD,QAAY,CACvCC,SAAS,CAAE,CACTC,KAAK,CAAE,KADE,CAETC,MAAM,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAAiB,MAAjB,CAFC,CAGTC,QAAQ,CAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CAHD,CAD4B,CAAZ,EAAD,CAA5B,CAQA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAQlB,IAPJC,CAAAA,SAOI,MAPJA,SAOI,CANJC,SAMI,MANJA,SAMI,4BALJC,iBAKI,CALJA,iBAKI,gCALgB,KAKhB,uBAJJC,SAII,MAJJA,SAII,qBAHJC,SAGI,CAHJA,SAGI,yBAHQ,KAGR,+BAFJC,IAEI,CAFJA,IAEI,oBAFG,CAEH,WADDC,KACC,6GACJ,GAAMC,CAAAA,OAAO,CAAGf,SAAS,EAAzB,CACA,cAAsBH,QAAQ,CAACW,SAAD,CAA9B,wCAAOQ,KAAP,eAAcC,IAAd,eACA,mBACE,KAAC,SAAD,gBACE,EAAE,CAAED,KAAK,CAACE,IADZ,CAEE,IAAI,CAAEF,KAAK,CAACE,IAFd,CAGE,UAAU,CAAED,IAAI,CAACE,OAAL,CAAeF,IAAI,CAACG,KAApB,CAA4B,EAH1C,CAIE,KAAK,CAAEH,IAAI,CAACE,OAAL,EAAgBE,OAAO,CAACJ,IAAI,CAACG,KAAN,CAJhC,CAKE,KAAK,CAAEJ,KAAK,CAACM,KALf,CAME,OAAO,CAAE,iBAACC,CAAD,CAAO,CACd,GAAIC,CAAAA,KAAK,CAAGC,MAAM,CAACF,CAAC,CAACG,MAAF,CAASJ,KAAV,CAAlB,CACA,GAAIE,KAAK,EAAIA,KAAK,CAAG,CAAjB,EAAsBb,SAA1B,CAAqC,CACnCY,CAAC,CAACG,MAAF,CAASJ,KAAT,CAAiBK,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYC,QAAQ,CAACN,CAAC,CAACG,MAAF,CAASJ,KAAV,CAApB,EACdQ,QADc,GAEdC,KAFc,CAER,CAFQ,CAELpB,SAFK,CAAjB,CAGD,CACF,CAbH,CAcE,UAAU,8BACJD,iBADI,cAC2BD,SAD3B,CAdZ,CAiBE,QAAQ,CAAEO,KAAK,CAACgB,QAjBlB,CAkBE,MAAM,CAAEhB,KAAK,CAACiB,MAlBhB,CAmBE,SAAS,CAAElB,OAAO,CAACb,SAnBrB,CAoBE,SAAS,CAAEU,SApBb,CAqBE,UAAU,CAAE,CAAED,SAAS,CAATA,SAAF,CArBd,CAsBE,IAAI,CAAEE,IAtBR,EAuBMC,KAvBN,EADF,CA2BD,CAtCD,CAwCA,cAAeP,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: '95%',\n    margin: theme.spacing(2, 'auto'),\n    fontSize: theme.spacing(2),\n  },\n}));\n\nconst FormikTextField = ({\n  fieldName,\n  adornment,\n  adornmentPosition = 'end',\n  maxLength,\n  multiline = false,\n  rows = 0,\n  ...props\n}) => {\n  const classes = useStyles();\n  const [field, meta] = useField(fieldName);\n  return (\n    <TextField\n      id={field.name}\n      name={field.name}\n      helperText={meta.touched ? meta.error : ''}\n      error={meta.touched && Boolean(meta.error)}\n      value={field.value}\n      onInput={(e) => {\n        let input = Number(e.target.value);\n        if (input && input > 0 && maxLength) {\n          e.target.value = Math.max(0, parseInt(e.target.value))\n            .toString()\n            .slice(0, maxLength);\n        }\n      }}\n      InputProps={{\n        [`${adornmentPosition}Adornment`]: adornment,\n      }}\n      onChange={field.onChange}\n      onBlur={field.onBlur}\n      className={classes.textField}\n      multiline={multiline}\n      inputProps={{ maxLength }}\n      rows={rows}\n      {...props}\n    />\n  );\n};\n\nexport default FormikTextField;\n"]},"metadata":{},"sourceType":"module"}