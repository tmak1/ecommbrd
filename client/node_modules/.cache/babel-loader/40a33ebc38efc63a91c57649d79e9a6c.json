{"ast":null,"code":"import React from'react';import{Formik,Form}from'formik';import*as Yup from'yup';import FormikTextField from'../../shared/formElements/FormikTextField';import{makeStyles}from'@material-ui/core/styles';import Paper from'@material-ui/core/Paper';import Button from'@material-ui/core/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{padding:'20px',margin:'0 auto',textAlign:'center'},btn:{width:'40%',margin:'30px auto 10px auto',padding:'12px',backgroundColor:theme.palette.primary.dark,fontSize:'14px',fontWeight:'700',borderRadius:'0',color:'#fff','&:hover':{backgroundColor:theme.palette.primary.main}}};});var UserUpdateModalForm=function UserUpdateModalForm(_ref){var userToUpdate=_ref.userToUpdate,handleUpdate=_ref.handleUpdate;var classes=useStyles();var initialValues={name:userToUpdate===null||userToUpdate===void 0?void 0:userToUpdate.name,email:userToUpdate===null||userToUpdate===void 0?void 0:userToUpdate.email};var validationSchema=Yup.object({name:Yup.string().required('Name required'),email:Yup.string().required('Email required').email('Invalid email format')});var submitHandler=function submitHandler(values,actions){var userInfo={name:values.name,email:values.email};handleUpdate(userInfo);actions.setSubmitting(false);};return/*#__PURE__*/_jsx(Paper,{className:classes.root,elevation:0,children:/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:submitHandler,validateOnMount:true,enableReinitialize:true,children:function children(formik){return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.formControl,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"name\",type:\"text\",label:\"Name\",variant:\"outlined\",values:userToUpdate.name})}),/*#__PURE__*/_jsx(\"div\",{className:classes.formControl,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"email\",type:\"email\",label:\"Email\",variant:\"outlined\",values:userToUpdate===null||userToUpdate===void 0?void 0:userToUpdate.email})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:!formik.isValid||formik.isSubmitting||formik.values.name===formik.initialValues.name&&formik.values.email===formik.initialValues.email,variant:\"contained\",disableElevation:true,className:classes.btn,children:\"CHANGE\"})]});}})});};export default UserUpdateModalForm;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/users/components/UserUpdateModalForm.js"],"names":["React","Formik","Form","Yup","FormikTextField","makeStyles","Paper","Button","useStyles","theme","root","padding","margin","textAlign","btn","width","backgroundColor","palette","primary","dark","fontSize","fontWeight","borderRadius","color","main","UserUpdateModalForm","userToUpdate","handleUpdate","classes","initialValues","name","email","validationSchema","object","string","required","submitHandler","values","actions","userInfo","setSubmitting","formik","formControl","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '20px',\n    margin: '0 auto',\n    textAlign: 'center',\n  },\n  btn: {\n    width: '40%',\n    margin: '30px auto 10px auto',\n    padding: '12px',\n    backgroundColor: theme.palette.primary.dark,\n    fontSize: '14px',\n    fontWeight: '700',\n    borderRadius: '0',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst UserUpdateModalForm = ({ userToUpdate, handleUpdate }) => {\n  const classes = useStyles();\n  const initialValues = {\n    name: userToUpdate?.name,\n    email: userToUpdate?.email,\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name required'),\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email format'),\n  });\n\n  const submitHandler = (values, actions) => {\n    const userInfo = {\n      name: values.name,\n      email: values.email,\n    };\n    handleUpdate(userInfo);\n    actions.setSubmitting(false);\n  };\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitHandler}\n        validateOnMount\n        enableReinitialize\n      >\n        {(formik) => (\n          <Form>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                variant=\"outlined\"\n                values={userToUpdate.name}\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                values={userToUpdate?.email}\n              />\n            </div>\n            <Button\n              type=\"submit\"\n              disabled={\n                !formik.isValid ||\n                formik.isSubmitting ||\n                (formik.values.name === formik.initialValues.name &&\n                  formik.values.email === formik.initialValues.email)\n              }\n              variant=\"contained\"\n              disableElevation\n              className={classes.btn}\n            >\n              CHANGE\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport default UserUpdateModalForm;\n"]},"metadata":{},"sourceType":"module"}