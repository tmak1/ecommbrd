{"ast":null,"code":"import _toConsumableArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useEffect,useState,useCallback}from'react';import{useDispatch,useSelector}from'react-redux';import PaymentForm from'../components/PaymentForm';import LoadingLinear from'../../shared/ui/LoadingLinear';import AlertMessage from'../../shared/ui/AlertMessage';import Toast from'../../shared/ui/Toast';import CheckoutAccordian from'../../shared/ui/CheckoutAccordian';import{capitalize}from'../../../helpers';import{getPaymentMethods,removePaymentMethod}from'../../../redux/actionCreators/paymentActionCreators';import{makeStyles}from'@material-ui/core/styles';import Typography from'@material-ui/core/Typography';import FormControl from'@material-ui/core/FormControl';import FormLabel from'@material-ui/core/FormLabel';import IconButton from'@material-ui/core/IconButton';import Tooltip from'@material-ui/core/Tooltip';import Zoom from'@material-ui/core/Zoom';import RefreshIcon from'@material-ui/icons/RefreshSharp';import AddNewIcon from'@material-ui/icons/Add';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:_defineProperty({width:'50%',margin:theme.spacing(2,'auto'),marginBottom:theme.spacing(6),padding:0},theme.breakpoints.down('xs'),{width:'100%'}),formLabel:_defineProperty({width:'100%',marginBottom:theme.spacing(2)},theme.breakpoints.down('xs'),{margin:theme.spacing(2,'auto')}),addNewBtn:{display:'block','&:hover':{borderRadius:'3px'}}};});var dummyItemId='newAddToPaymentMethodAccordian';var Payment=function Payment(_ref){var validateStep=_ref.validateStep;var classes=useStyles();var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),disableAddNew=_useState2[0],setDisableAddNew=_useState2[1];var _useState3=useState({openToast:false,operation:null}),_useState4=_slicedToArray(_useState3,2),toastObj=_useState4[0],setToastObj=_useState4[1];var _useSelector=useSelector(function(state){return state.userAuth;}),_useSelector$loggedIn=_useSelector.loggedInUser,user=_useSelector$loggedIn.user,token=_useSelector$loggedIn.token;var _useSelector2=useSelector(function(state){return state.payment;}),loading=_useSelector2.loading,error=_useSelector2.error,paymentMethods=_useSelector2.paymentMethods;var _useSelector3=useSelector(function(state){return state.checkout;}),paymentError=_useSelector3.paymentError;var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),loadedPaymentMethods=_useState6[0],setLoadedPaymentMethods=_useState6[1];var discardNewPaymentMethod=function discardNewPaymentMethod(paymentId){setLoadedPaymentMethods(loadedPaymentMethods.filter(function(paymentMethod){return paymentMethod.id!==paymentId;}));setDisableAddNew(false);};var handleOpenToast=function handleOpenToast(open){setToastObj(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{openToast:open});});};var onSuccess=useCallback(function(operation){if(operation==='removed'){validateStep({});}setToastObj({openToast:true,operation:operation});},[validateStep]);var handleRemoveMethod=function handleRemoveMethod(paymentId){dispatch(removePaymentMethod(user.id,token,paymentId,onSuccess));};useEffect(function(){validateStep({});},[validateStep]);useEffect(function(){if(token&&(user===null||user===void 0?void 0:user.id)){dispatch(getPaymentMethods(user.id,token,onSuccess));}},[user,token,onSuccess,dispatch]);useEffect(function(){setLoadedPaymentMethods(paymentMethods);setDisableAddNew(false);},[paymentMethods]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Toast,{openToast:toastObj.openToast,setOpenToast:handleOpenToast,severity:\"success\",message:\"Payment Method \".concat(toastObj.operation)}),/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",className:classes.root,children:[/*#__PURE__*/_jsxs(FormLabel,{component:\"legend\",className:classes.formLabel,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"span\",children:\"Choose the payment method\"}),/*#__PURE__*/_jsx(Tooltip,{TransitionComponent:Zoom,title:\"Reload\",children:/*#__PURE__*/_jsx(IconButton,{disabled:!token,color:\"primary\",onClick:function onClick(){setDisableAddNew(false);dispatch(getPaymentMethods(user.id,token));},children:/*#__PURE__*/_jsx(RefreshIcon,{})})}),/*#__PURE__*/_jsxs(IconButton,{edge:\"end\",color:\"primary\",className:classes.addNewBtn,disabled:!token||disableAddNew,disableRipple:true,onClick:function onClick(){if(!loadedPaymentMethods.find(function(paymentMethod){return paymentMethod.id===dummyItemId;})){setLoadedPaymentMethods([{id:dummyItemId,nameOnCard:'',cardNumber:'XXXX XXXX XXXX XXXX',expiryMonth:1,expiryYear:21,cvv:''}].concat(_toConsumableArray(loadedPaymentMethods)));setDisableAddNew(true);}},children:[/*#__PURE__*/_jsx(AddNewIcon,{style:{marginRight:'10px'}}),/*#__PURE__*/_jsx(Typography,{variant:\"button\",component:\"span\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Add a new Payment Method\"})})]})]}),loading&&/*#__PURE__*/_jsx(LoadingLinear,{}),error&&/*#__PURE__*/_jsx(AlertMessage,{message:error,severity:\"error\"}),(loadedPaymentMethods===null||loadedPaymentMethods===void 0?void 0:loadedPaymentMethods.length)>0?loadedPaymentMethods.map(function(paymentMethod){paymentMethod=capitalize(paymentMethod);var cardType=['MasterCard','VISA'][Math.floor(Math.random()*2)];return/*#__PURE__*/_jsx(CheckoutAccordian,{item:paymentMethod,error:paymentError!==undefined&&paymentError!==null?paymentError:'',label:[cardType,' xxxx xxxx xxxx ',paymentMethod.cardNumber.toString().slice(-4)].join(' '),discardNew:discardNewPaymentMethod,handleRemoveItem:handleRemoveMethod,dummyItemId:dummyItemId,children:/*#__PURE__*/_jsx(PaymentForm,{paymentMethod:paymentMethod,user:user,token:token,onSuccess:onSuccess,paymentError:paymentError,validateStep:validateStep,setDisableAddNew:setDisableAddNew,dummyItemId:dummyItemId})},paymentMethod.id);}):loadedPaymentMethods&&/*#__PURE__*/_jsx(AlertMessage,{message:\"No Payment Methodes saved\",severity:\"info\"})]})]});};export default Payment;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/checkout/pages/Payment.js"],"names":["React","useEffect","useState","useCallback","useDispatch","useSelector","PaymentForm","LoadingLinear","AlertMessage","Toast","CheckoutAccordian","capitalize","getPaymentMethods","removePaymentMethod","makeStyles","Typography","FormControl","FormLabel","IconButton","Tooltip","Zoom","RefreshIcon","AddNewIcon","useStyles","theme","root","width","margin","spacing","marginBottom","padding","breakpoints","down","formLabel","addNewBtn","display","borderRadius","dummyItemId","Payment","validateStep","classes","dispatch","disableAddNew","setDisableAddNew","openToast","operation","toastObj","setToastObj","state","userAuth","loggedInUser","user","token","payment","loading","error","paymentMethods","checkout","paymentError","loadedPaymentMethods","setLoadedPaymentMethods","discardNewPaymentMethod","paymentId","filter","paymentMethod","id","handleOpenToast","open","prevState","onSuccess","handleRemoveMethod","find","nameOnCard","cardNumber","expiryMonth","expiryYear","cvv","marginRight","length","map","cardType","Math","floor","random","undefined","toString","slice","join"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PaymentForm from '../components/PaymentForm';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport Toast from '../../shared/ui/Toast';\nimport CheckoutAccordian from '../../shared/ui/CheckoutAccordian';\nimport { capitalize } from '../../../helpers';\n\nimport {\n  getPaymentMethods,\n  removePaymentMethod,\n} from '../../../redux/actionCreators/paymentActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport AddNewIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '50%',\n    margin: theme.spacing(2, 'auto'),\n    marginBottom: theme.spacing(6),\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  formLabel: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(2, 'auto'),\n    },\n  },\n  addNewBtn: {\n    display: 'block',\n    '&:hover': {\n      borderRadius: '3px',\n    },\n  },\n}));\n\nconst dummyItemId = 'newAddToPaymentMethodAccordian';\n\nconst Payment = ({ validateStep }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [disableAddNew, setDisableAddNew] = useState(false);\n\n  const [toastObj, setToastObj] = useState({\n    openToast: false,\n    operation: null,\n  });\n\n  const {\n    loggedInUser: { user, token },\n  } = useSelector((state) => state.userAuth);\n  const { loading, error, paymentMethods } = useSelector(\n    (state) => state.payment\n  );\n  const { paymentError } = useSelector((state) => state.checkout);\n  const [loadedPaymentMethods, setLoadedPaymentMethods] = useState([]);\n  const discardNewPaymentMethod = (paymentId) => {\n    setLoadedPaymentMethods(\n      loadedPaymentMethods.filter(\n        (paymentMethod) => paymentMethod.id !== paymentId\n      )\n    );\n    setDisableAddNew(false);\n  };\n  const handleOpenToast = (open) => {\n    setToastObj((prevState) => ({\n      ...prevState,\n      openToast: open,\n    }));\n  };\n  const onSuccess = useCallback(\n    (operation) => {\n      if (operation === 'removed') {\n        validateStep({});\n      }\n      setToastObj({ openToast: true, operation });\n    },\n    [validateStep]\n  );\n  const handleRemoveMethod = (paymentId) => {\n    dispatch(removePaymentMethod(user.id, token, paymentId, onSuccess));\n  };\n  useEffect(() => {\n    validateStep({});\n  }, [validateStep]);\n  useEffect(() => {\n    if (token && user?.id) {\n      dispatch(getPaymentMethods(user.id, token, onSuccess));\n    }\n  }, [user, token, onSuccess, dispatch]);\n  useEffect(() => {\n    setLoadedPaymentMethods(paymentMethods);\n    setDisableAddNew(false);\n  }, [paymentMethods]);\n\n  return (\n    <>\n      <Toast\n        openToast={toastObj.openToast}\n        setOpenToast={handleOpenToast}\n        severity=\"success\"\n        message={`Payment Method ${toastObj.operation}`}\n      />\n      <FormControl component=\"fieldset\" className={classes.root}>\n        <FormLabel component=\"legend\" className={classes.formLabel}>\n          <Typography variant=\"h6\" component=\"span\">\n            Choose the payment method\n          </Typography>\n          <Tooltip TransitionComponent={Zoom} title=\"Reload\">\n            <IconButton\n              disabled={!token}\n              color=\"primary\"\n              onClick={() => {\n                setDisableAddNew(false);\n                dispatch(getPaymentMethods(user.id, token));\n              }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <IconButton\n            edge=\"end\"\n            color=\"primary\"\n            className={classes.addNewBtn}\n            disabled={!token || disableAddNew}\n            disableRipple\n            onClick={() => {\n              if (\n                !loadedPaymentMethods.find(\n                  (paymentMethod) => paymentMethod.id === dummyItemId\n                )\n              ) {\n                setLoadedPaymentMethods([\n                  {\n                    id: dummyItemId,\n                    nameOnCard: '',\n                    cardNumber: 'XXXX XXXX XXXX XXXX',\n                    expiryMonth: 1,\n                    expiryYear: 21,\n                    cvv: '',\n                  },\n                  ...loadedPaymentMethods,\n                ]);\n                setDisableAddNew(true);\n              }\n            }}\n          >\n            <AddNewIcon style={{ marginRight: '10px' }} />\n            <Typography variant=\"button\" component=\"span\">\n              <strong>Add a new Payment Method</strong>\n            </Typography>\n          </IconButton>\n        </FormLabel>\n        {loading && <LoadingLinear />}\n        {error && <AlertMessage message={error} severity=\"error\" />}\n\n        {loadedPaymentMethods?.length > 0\n          ? loadedPaymentMethods.map((paymentMethod) => {\n              paymentMethod = capitalize(paymentMethod);\n              let cardType = ['MasterCard', 'VISA'][\n                Math.floor(Math.random() * 2)\n              ];\n              return (\n                <CheckoutAccordian\n                  key={paymentMethod.id}\n                  item={paymentMethod}\n                  error={\n                    paymentError !== undefined && paymentError !== null\n                      ? paymentError\n                      : ''\n                  }\n                  label={[\n                    cardType,\n                    ' xxxx xxxx xxxx ',\n                    paymentMethod.cardNumber.toString().slice(-4),\n                  ].join(' ')}\n                  discardNew={discardNewPaymentMethod}\n                  handleRemoveItem={handleRemoveMethod}\n                  dummyItemId={dummyItemId}\n                >\n                  <PaymentForm\n                    paymentMethod={paymentMethod}\n                    user={user}\n                    token={token}\n                    onSuccess={onSuccess}\n                    paymentError={paymentError}\n                    validateStep={validateStep}\n                    setDisableAddNew={setDisableAddNew}\n                    dummyItemId={dummyItemId}\n                  />\n                </CheckoutAccordian>\n              );\n            })\n          : loadedPaymentMethods && (\n              <AlertMessage\n                message=\"No Payment Methodes saved\"\n                severity=\"info\"\n              />\n            )}\n      </FormControl>\n    </>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}