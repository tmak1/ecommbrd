{"ast":null,"code":"import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{Formik,Form}from'formik';import*as Yup from'yup';import FormikTextField from'../../shared/formElements/FormikTextField';import BigButton from'../../shared/ui/BigButton';import AlertMessage from'../../shared/ui/AlertMessage';import{saveShippingAddress,updateShippingAddress}from'../../../redux/actionCreators/shippingActionCreators';import{makeStyles}from'@material-ui/core/styles';import FormControl from'@material-ui/core/FormControl';import FormikSelect from'../../shared/formElements/FormikSelect';import IconButton from'@material-ui/core/IconButton';import Tooltip from'@material-ui/core/Tooltip';import Zoom from'@material-ui/core/Zoom';import RefreshIcon from'@material-ui/icons/RefreshSharp';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:'95%',margin:'0 auto',display:'flex',flexDirection:'column',alignItems:'center',padding:theme.spacing(2,5),backgroundColor:'rgba(245,245,245,0.3)',borderRadius:theme.spacing(1),'&>*':{width:'99%',display:'block'}},sections:{display:'flex',justifyContent:'flex-start',alignItems:'center','&>*':{width:'99%',display:'block'}},iconButtonDiv:{display:'flex',justifyContent:'space-between'}};});var cityArray=['melbourne','sydney','adelaide','perth','darwin','canberra','alice springs'];var ShippingForm=function ShippingForm(_ref){var address=_ref.address,user=_ref.user,token=_ref.token,onSuccess=_ref.onSuccess,shippingError=_ref.shippingError,setDisableAddNew=_ref.setDisableAddNew,dummyItemId=_ref.dummyItemId;var classes=useStyles();var dispatch=useDispatch();var initialValues={street:address.street||'',suburb:address.suburb||'',postcode:address.postcode||'',city:address.city||'',country:address.country||''};var _useState=useState(address.city),_useState2=_slicedToArray(_useState,2),selectedCity=_useState2[0],setSelectedCity=_useState2[1];var validationSchema=Yup.object({street:Yup.string().required('Street address required'),suburb:Yup.string(),postcode:Yup.number('Must be a number').required('Postcode required').positive('Must be positive').integer('No decimal points').test('len','Must be exactly 4 characters',function(val){return val&&val.toString().length===4;}),city:Yup.string().required('City required'),country:Yup.string().required('Country required')});var submitHandler=function submitHandler(values,actions){if(address.id===dummyItemId){delete values.id;dispatch(saveShippingAddress(user.id,token,values,onSuccess));}else{dispatch(updateShippingAddress(user.id,token,address.id,values,onSuccess));}actions.setSubmitting(false);setDisableAddNew(false);};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(\"div\",{children:shippingError&&/*#__PURE__*/_jsx(AlertMessage,{message:shippingError,severity:\"error\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:submitHandler,validateOnMount:true,enableReinitialize:true,children:function children(formik){return/*#__PURE__*/_jsxs(Form,{className:classes.root,children:[address.id===dummyItemId&&/*#__PURE__*/_jsxs(\"div\",{className:classes.iconButtonDiv,children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(Tooltip,{TransitionComponent:Zoom,title:\"Reset form\",children:/*#__PURE__*/_jsx(IconButton,{disabled:!token,color:\"primary\",onClick:function onClick(){return formik.resetForm();},children:/*#__PURE__*/_jsx(RefreshIcon,{})})})]}),/*#__PURE__*/_jsxs(FormControl,{style:{marginBottom:'25px'},children:[/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",fullWidth:true,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"street\",type:\"text\",id:\"street\",name:\"street\",label:\"Street\",variant:\"standard\"})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.sections,children:[/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"suburb\",type:\"text\",id:\"suburb\",name:\"suburb\",label:\"Suburb\",variant:\"standard\"})}),/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"postcode\",type:\"number\",maxLength:\"4\",id:\"postcode\",name:\"postcode\",label:\"Postcode\",variant:\"standard\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.sections,children:[/*#__PURE__*/_jsx(FormControl,{size:\"small\",variant:\"standard\",children:/*#__PURE__*/_jsx(FormikSelect,{as:\"select\",fieldName:\"city\",id:\"city\",name:\"city\",label:\"City\",value:selectedCity,itemsArray:cityArray,onChange:function onChange(event){return setSelectedCity(event.target.value);}})}),/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"country\",type:\"text\",id:\"country\",name:\"country\",label:\"Country\",variant:\"standard\"})})]})]}),/*#__PURE__*/_jsxs(BigButton,{type:\"submit\",disabled:!formik.isValid||formik.isSubmitting||JSON.stringify(initialValues)===JSON.stringify(formik.values),children:[address.id===dummyItemId?'SAVE':'EDIT',\" ADDRESS\"]})]});}})})]});};export default ShippingForm;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/checkout/components/ShippingForm.js"],"names":["React","useState","useDispatch","Formik","Form","Yup","FormikTextField","BigButton","AlertMessage","saveShippingAddress","updateShippingAddress","makeStyles","FormControl","FormikSelect","IconButton","Tooltip","Zoom","RefreshIcon","useStyles","theme","root","width","margin","display","flexDirection","alignItems","padding","spacing","backgroundColor","borderRadius","sections","justifyContent","iconButtonDiv","cityArray","ShippingForm","address","user","token","onSuccess","shippingError","setDisableAddNew","dummyItemId","classes","dispatch","initialValues","street","suburb","postcode","city","country","selectedCity","setSelectedCity","validationSchema","object","string","required","number","positive","integer","test","val","toString","length","submitHandler","values","actions","id","setSubmitting","formik","resetForm","marginBottom","event","target","value","isValid","isSubmitting","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport AlertMessage from '../../shared/ui/AlertMessage';\n\nimport {\n  saveShippingAddress,\n  updateShippingAddress,\n} from '../../../redux/actionCreators/shippingActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormikSelect from '../../shared/formElements/FormikSelect';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '95%',\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2, 5),\n    backgroundColor: 'rgba(245,245,245,0.3)',\n    borderRadius: theme.spacing(1),\n    '&>*': {\n      width: '99%',\n      display: 'block',\n    },\n  },\n  sections: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '&>*': {\n      width: '99%',\n      display: 'block',\n    },\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));\nconst cityArray = [\n  'melbourne',\n  'sydney',\n  'adelaide',\n  'perth',\n  'darwin',\n  'canberra',\n  'alice springs',\n];\nconst ShippingForm = ({\n  address,\n  user,\n  token,\n  onSuccess,\n  shippingError,\n  setDisableAddNew,\n  dummyItemId,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    street: address.street || '',\n    suburb: address.suburb || '',\n    postcode: address.postcode || '',\n    city: address.city || '',\n    country: address.country || '',\n  };\n  const [selectedCity, setSelectedCity] = useState(address.city);\n  const validationSchema = Yup.object({\n    street: Yup.string().required('Street address required'),\n    suburb: Yup.string(),\n    postcode: Yup.number('Must be a number')\n      .required('Postcode required')\n      .positive('Must be positive')\n      .integer('No decimal points')\n      .test(\n        'len',\n        'Must be exactly 4 characters',\n        (val) => val && val.toString().length === 4\n      ),\n    city: Yup.string().required('City required'),\n    country: Yup.string().required('Country required'),\n  });\n\n  const submitHandler = (values, actions) => {\n    if (address.id === dummyItemId) {\n      delete values.id;\n      dispatch(saveShippingAddress(user.id, token, values, onSuccess));\n    } else {\n      dispatch(\n        updateShippingAddress(user.id, token, address.id, values, onSuccess)\n      );\n    }\n    actions.setSubmitting(false);\n    setDisableAddNew(false);\n  };\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        {shippingError && (\n          <AlertMessage message={shippingError} severity=\"error\" />\n        )}\n      </div>\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={submitHandler}\n          validateOnMount\n          enableReinitialize\n        >\n          {(formik) => {\n            return (\n              <Form className={classes.root}>\n                {address.id === dummyItemId && (\n                  <div className={classes.iconButtonDiv}>\n                    <div></div>\n                    <Tooltip TransitionComponent={Zoom} title=\"Reset form\">\n                      <IconButton\n                        disabled={!token}\n                        color=\"primary\"\n                        onClick={() => formik.resetForm()}\n                      >\n                        <RefreshIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                )}\n                <FormControl style={{ marginBottom: '25px' }}>\n                  <FormControl size=\"small\" margin=\"none\" fullWidth>\n                    <FormikTextField\n                      fieldName=\"street\"\n                      type=\"text\"\n                      id=\"street\"\n                      name=\"street\"\n                      label=\"Street\"\n                      variant=\"standard\"\n                    />\n                  </FormControl>\n                  <div className={classes.sections}>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"suburb\"\n                        type=\"text\"\n                        id=\"suburb\"\n                        name=\"suburb\"\n                        label=\"Suburb\"\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"postcode\"\n                        type=\"number\"\n                        maxLength=\"4\"\n                        id=\"postcode\"\n                        name=\"postcode\"\n                        label=\"Postcode\"\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                  </div>\n                  <div className={classes.sections}>\n                    <FormControl size=\"small\" variant=\"standard\">\n                      <FormikSelect\n                        as=\"select\"\n                        fieldName=\"city\"\n                        id=\"city\"\n                        name=\"city\"\n                        label=\"City\"\n                        value={selectedCity}\n                        itemsArray={cityArray}\n                        onChange={(event) =>\n                          setSelectedCity(event.target.value)\n                        }\n                      />\n                    </FormControl>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"country\"\n                        type=\"text\"\n                        id=\"country\"\n                        name=\"country\"\n                        label=\"Country\"\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                  </div>\n                </FormControl>\n                <BigButton\n                  type=\"submit\"\n                  disabled={\n                    !formik.isValid ||\n                    formik.isSubmitting ||\n                    JSON.stringify(initialValues) ===\n                      JSON.stringify(formik.values)\n                  }\n                >\n                  {address.id === dummyItemId ? 'SAVE' : 'EDIT'} ADDRESS\n                </BigButton>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default ShippingForm;\n"]},"metadata":{},"sourceType":"module"}