{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/products/components/ProductOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ListSearchBar from '../../users/components/ListSearchBar';\nimport TablePaginationComp from '../../shared/ui/TablePaginationComp';\nimport { dateFormatter } from '../../../helpers';\nimport { getOrderListByProduct, updateOrderIsDelivered } from '../../../redux/actionCreators/orderActionCreators';\nimport PageHeading from '../../shared/ui/PageHeading';\nimport SwitchComp from '../../shared/ui/SwitchComp';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport SkeletonHistory from '../../shared/ui/skeletons/SkeletonHistory';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  topBtns: {\n    display: 'flex',\n    width: '100%',\n    marginBottom: '10px',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n}));\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.action.white,\n    color: theme.palette.common.black,\n    border: '1px solid rgba(0,0,0,0.08)'\n  },\n  body: {\n    fontSize: theme.spacing(2),\n    border: '1px solid rgba(0,0,0,0.08)'\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nconst ProductOrders = () => {\n  _s();\n\n  var _orderInfo$orders;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const productId = useParams().pid;\n  const history = useHistory();\n  const {\n    loading,\n    error,\n    orderInfo\n  } = useSelector(state => state.orderListByProduct);\n  const {\n    loading: loading2,\n    error: error2,\n    loggedInUser\n  } = useSelector(state => state.userAuth);\n\n  const changeIsDelivered = (orderId, delivered) => {\n    if (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token) {\n      const updateInfo = {\n        isDelivered: delivered,\n        deliveredAt: delivered ? new Date().toISOString() : null\n      };\n      dispatch(updateOrderIsDelivered(orderId, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token, updateInfo));\n    }\n  };\n\n  const handlePageChange = (page, perPage) => {\n    dispatch(getOrderListByProduct(productId, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token, '', page, perPage));\n  };\n\n  const handlePerPageChange = perPage => {\n    dispatch(getOrderListByProduct(productId, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token, '', '', perPage));\n  };\n\n  useEffect(() => {\n    if (loggedInUser) {\n      dispatch(getOrderListByProduct(productId, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token));\n    }\n  }, [productId, loggedInUser, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      size: \"medium\",\n      text: \"ALL PRODUCT ORDERS\",\n      paragraph: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topBtns,\n      children: [/*#__PURE__*/_jsxDEV(ListSearchBar, {\n        item: \"product order\",\n        args: [productId, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        TransitionComponent: Zoom,\n        title: \"Refresh\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.iconBtn,\n          color: \"primary\",\n          onClick: () => dispatch(getOrderListByProduct(productId, loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.token)),\n          style: {\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), (loading || loading2) && /*#__PURE__*/_jsxDEV(SkeletonHistory, {\n      headings: ['ORDER ID', 'TOTAL', 'PAID', 'DELIVERED', '']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), (error || error2) && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: error || error2,\n      severity: \"error\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), !loading && !loading2 && ((orderInfo === null || orderInfo === void 0 ? void 0 : orderInfo.orders) === null || (orderInfo === null || orderInfo === void 0 ? void 0 : orderInfo.orders) === undefined ? null : (orderInfo === null || orderInfo === void 0 ? void 0 : orderInfo.orders.length) <= 0) ? /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: \"NO ORDER HISTORY\",\n      severity: \"info\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : !loading && !loading2 && /*#__PURE__*/_jsxDEV(TableContainer, {\n      style: {\n        marginTop: '70px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        style: {\n          border: '1px solid rgba(0,0,0,0.08)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"ORDER ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: orderInfo === null || orderInfo === void 0 ? void 0 : (_orderInfo$orders = orderInfo.orders) === null || _orderInfo$orders === void 0 ? void 0 : _orderInfo$orders.map(({\n            id,\n            subTotal,\n            paidAt,\n            isDelivered,\n            deliveredAt\n          }) => {\n            paidAt = dateFormatter(paidAt);\n            deliveredAt = isDelivered ? dateFormatter(deliveredAt) : null;\n            return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"$\", subTotal.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: paidAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(SwitchComp, {\n                  label: ['Delivered', 'Not delivered'],\n                  labelColor: ['green', 'red'],\n                  value: isDelivered,\n                  info: id,\n                  handleChange: changeIsDelivered\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  size: \"medium\",\n                  disableElevation: true,\n                  onClick: () => history.push(`/orders/${id}`),\n                  children: \"DETAILS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 25\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), orderInfo && /*#__PURE__*/_jsxDEV(TablePaginationComp, {\n          colSpan: 5,\n          itemInfo: orderInfo,\n          handlePageChange: handlePageChange,\n          handlePerPageChange: handlePerPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductOrders, \"ae8p9oyU1t95MeUTDxN8LKXB0p4=\", false, function () {\n  return [useStyles, useDispatch, useParams, useHistory, useSelector, useSelector];\n});\n\n_c = ProductOrders;\nexport default ProductOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductOrders\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/products/components/ProductOrders.js"],"names":["React","useEffect","useHistory","useParams","useDispatch","useSelector","ListSearchBar","TablePaginationComp","dateFormatter","getOrderListByProduct","updateOrderIsDelivered","PageHeading","SwitchComp","AlertMessage","SkeletonHistory","makeStyles","withStyles","Button","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","IconButton","Tooltip","Zoom","RefreshIcon","useStyles","theme","topBtns","display","width","marginBottom","justifyContent","alignItems","StyledTableCell","head","backgroundColor","palette","action","white","color","common","black","border","body","fontSize","spacing","StyledTableRow","root","hover","ProductOrders","classes","dispatch","productId","pid","history","loading","error","orderInfo","state","orderListByProduct","loading2","error2","loggedInUser","userAuth","changeIsDelivered","orderId","delivered","token","updateInfo","isDelivered","deliveredAt","Date","toISOString","handlePageChange","page","perPage","handlePerPageChange","iconBtn","marginTop","orders","undefined","length","textAlign","map","id","subTotal","paidAt","toFixed","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ListSearchBar from '../../users/components/ListSearchBar';\nimport TablePaginationComp from '../../shared/ui/TablePaginationComp';\n\nimport { dateFormatter } from '../../../helpers';\n\nimport {\n  getOrderListByProduct,\n  updateOrderIsDelivered,\n} from '../../../redux/actionCreators/orderActionCreators';\n\nimport PageHeading from '../../shared/ui/PageHeading';\nimport SwitchComp from '../../shared/ui/SwitchComp';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport SkeletonHistory from '../../shared/ui/skeletons/SkeletonHistory';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\n\nconst useStyles = makeStyles((theme) => ({\n  topBtns: {\n    display: 'flex',\n    width: '100%',\n    marginBottom: '10px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.action.white,\n    color: theme.palette.common.black,\n    border: '1px solid rgba(0,0,0,0.08)',\n  },\n  body: {\n    fontSize: theme.spacing(2),\n    border: '1px solid rgba(0,0,0,0.08)',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst ProductOrders = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const productId = useParams().pid;\n  const history = useHistory();\n  const { loading, error, orderInfo } = useSelector(\n    (state) => state.orderListByProduct\n  );\n  const {\n    loading: loading2,\n    error: error2,\n    loggedInUser,\n  } = useSelector((state) => state.userAuth);\n\n  const changeIsDelivered = (orderId, delivered) => {\n    if (loggedInUser?.token) {\n      const updateInfo = {\n        isDelivered: delivered,\n        deliveredAt: delivered ? new Date().toISOString() : null,\n      };\n      dispatch(\n        updateOrderIsDelivered(orderId, loggedInUser?.token, updateInfo)\n      );\n    }\n  };\n  const handlePageChange = (page, perPage) => {\n    dispatch(\n      getOrderListByProduct(productId, loggedInUser?.token, '', page, perPage)\n    );\n  };\n  const handlePerPageChange = (perPage) => {\n    dispatch(\n      getOrderListByProduct(productId, loggedInUser?.token, '', '', perPage)\n    );\n  };\n  useEffect(() => {\n    if (loggedInUser) {\n      dispatch(getOrderListByProduct(productId, loggedInUser?.token));\n    }\n  }, [productId, loggedInUser, dispatch]);\n\n  return (\n    <>\n      <PageHeading size=\"medium\" text=\"ALL PRODUCT ORDERS\" paragraph />\n      <div className={classes.topBtns}>\n        <ListSearchBar\n          item=\"product order\"\n          args={[productId, loggedInUser?.token]}\n        />\n        <Tooltip TransitionComponent={Zoom} title=\"Refresh\">\n          <IconButton\n            className={classes.iconBtn}\n            color=\"primary\"\n            onClick={() =>\n              dispatch(getOrderListByProduct(productId, loggedInUser?.token))\n            }\n            style={{ marginTop: '20px' }}\n          >\n            <RefreshIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      {(loading || loading2) && (\n        <SkeletonHistory\n          headings={['ORDER ID', 'TOTAL', 'PAID', 'DELIVERED', '']}\n        />\n      )}\n      {(error || error2) && (\n        <AlertMessage\n          message={error || error2}\n          severity=\"error\"\n          variant=\"outlined\"\n        />\n      )}\n      {!loading &&\n      !loading2 &&\n      (orderInfo?.orders === null || orderInfo?.orders === undefined\n        ? null\n        : orderInfo?.orders.length <= 0) ? (\n        <AlertMessage\n          message=\"NO ORDER HISTORY\"\n          severity=\"info\"\n          variant=\"outlined\"\n        />\n      ) : (\n        !loading &&\n        !loading2 && (\n          <TableContainer style={{ marginTop: '70px' }}>\n            <Table style={{ border: '1px solid rgba(0,0,0,0.08)' }}>\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>ORDER ID</StyledTableCell>\n                  <StyledTableCell>Total</StyledTableCell>\n                  <StyledTableCell>Paid</StyledTableCell>\n                  <StyledTableCell style={{ textAlign: 'center' }}>\n                    Delivered\n                  </StyledTableCell>\n                  <StyledTableCell></StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orderInfo?.orders?.map(\n                  ({ id, subTotal, paidAt, isDelivered, deliveredAt }) => {\n                    paidAt = dateFormatter(paidAt);\n                    deliveredAt = isDelivered\n                      ? dateFormatter(deliveredAt)\n                      : null;\n                    return (\n                      <StyledTableRow key={id}>\n                        <StyledTableCell>{id}</StyledTableCell>\n                        <StyledTableCell>\n                          <strong>${subTotal.toFixed(2)}</strong>\n                        </StyledTableCell>\n                        <StyledTableCell>{paidAt}</StyledTableCell>\n                        <StyledTableCell style={{ textAlign: 'center' }}>\n                          <SwitchComp\n                            label={['Delivered', 'Not delivered']}\n                            labelColor={['green', 'red']}\n                            value={isDelivered}\n                            info={id}\n                            handleChange={changeIsDelivered}\n                          />\n                        </StyledTableCell>\n                        <StyledTableCell style={{ textAlign: 'center' }}>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"medium\"\n                            disableElevation\n                            onClick={() => history.push(`/orders/${id}`)}\n                          >\n                            DETAILS\n                          </Button>\n                        </StyledTableCell>\n                      </StyledTableRow>\n                    );\n                  }\n                )}\n              </TableBody>\n              {orderInfo && (\n                <TablePaginationComp\n                  colSpan={5}\n                  itemInfo={orderInfo}\n                  handlePageChange={handlePageChange}\n                  handlePerPageChange={handlePerPageChange}\n                />\n              )}\n            </Table>\n          </TableContainer>\n        )\n      )}\n    </>\n  );\n};\n\nexport default ProductOrders;\n"]},"metadata":{},"sourceType":"module"}