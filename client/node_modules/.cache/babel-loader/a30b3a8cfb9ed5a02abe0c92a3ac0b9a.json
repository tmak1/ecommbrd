{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/shared/ui/DecisionDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/CloseSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  content: {\n    padding: theme.spacing(2)\n  },\n  actions: {\n    margin: 0,\n    padding: theme.spacing(1)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n}));\nconst Transition = /*#__PURE__*/forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nconst DecisionDialog = ({\n  fullscreen = false,\n  open,\n  setDialogOpen,\n  handleAction,\n  title,\n  content,\n  children,\n  actionBtnText\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: fullscreen,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    scroll: \"paper\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      disableTypography: true,\n      className: classes.title,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"h6\",\n          gutterBottom: true,\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), actionBtnText && /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        variant: \"text\",\n        color: \"secondary\",\n        size: \"large\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAction,\n        variant: \"text\",\n        color: \"secondary\",\n        size: \"large\",\n        children: actionBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DecisionDialog, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = DecisionDialog;\nexport default DecisionDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"DecisionDialog\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/components/shared/ui/DecisionDialog.js"],"names":["React","forwardRef","makeStyles","Button","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","Slide","Typography","IconButton","CloseIcon","useStyles","theme","title","margin","padding","spacing","content","actions","closeButton","position","right","top","color","palette","grey","Transition","props","ref","DecisionDialog","fullscreen","open","setDialogOpen","handleAction","children","actionBtnText","classes","handleClose"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/CloseSharp';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  content: {\n    padding: theme.spacing(2),\n  },\n  actions: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DecisionDialog = ({\n  fullscreen = false,\n  open,\n  setDialogOpen,\n  handleAction,\n  title,\n  content,\n  children,\n  actionBtnText,\n}) => {\n  const classes = useStyles();\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen={fullscreen}\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n      keepMounted\n      scroll=\"paper\"\n    >\n      <DialogTitle disableTypography className={classes.title}>\n        <Typography variant=\"h6\">{title}</Typography>\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent dividers className={classes.content}>\n        <DialogContentText>\n          <Typography component=\"span\" variant=\"h6\" gutterBottom>\n            {content}\n          </Typography>\n        </DialogContentText>\n        {children}\n      </DialogContent>\n      {actionBtnText && (\n        <DialogActions className={classes.actions}>\n          <Button\n            onClick={handleClose}\n            variant=\"text\"\n            color=\"secondary\"\n            size=\"large\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleAction}\n            variant=\"text\"\n            color=\"secondary\"\n            size=\"large\"\n          >\n            {actionBtnText}\n          </Button>\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n};\n\nexport default DecisionDialog;\n"]},"metadata":{},"sourceType":"module"}