{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/checkout/pages/Shipping.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ShippingForm from '../components/ShippingForm';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport Toast from '../../shared/ui/Toast';\nimport CheckoutAccordian from '../../shared/ui/CheckoutAccordian';\nimport { capitalize } from '../../../helpers';\nimport { getShippingAddresses, removeShippingAddress } from '../../../redux/actionCreators/shippingActionCreators';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/Typography';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport AddNewIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '50%',\n    margin: theme.spacing(2, 'auto'),\n    marginBottom: theme.spacing(6),\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  formLabel: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(2, 'auto')\n    }\n  },\n  addNewBtn: {\n    display: 'block',\n    '&:hover': {\n      borderRadius: '3px'\n    }\n  }\n}));\nconst dummyItemId = 'newAddToAddressAccordian';\n\nconst Shipping = ({\n  validateStep\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [disableAddNew, setDisableAddNew] = useState(false);\n  const [toastObj, setToastObj] = useState({\n    openToast: false,\n    operation: null\n  });\n  const dispatch = useDispatch();\n  const {\n    loggedInUser: {\n      user,\n      token\n    }\n  } = useSelector(state => state.userAuth);\n  const {\n    loading,\n    error,\n    shippingAddresses\n  } = useSelector(state => state.shipping);\n  const {\n    shippingError,\n    selectedshipping\n  } = useSelector(state => state.checkout);\n  const [loadedShippingAddresses, setLoadedShippingAddresses] = useState([]);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n\n  const discardNewAddress = shippingId => {\n    setLoadedShippingAddresses(loadedShippingAddresses.filter(address => address.id !== shippingId));\n    setDisableAddNew(false);\n  };\n\n  const handleOpenToast = open => {\n    setToastObj(prevState => ({ ...prevState,\n      openToast: open\n    }));\n  };\n\n  const onSuccess = operation => {\n    if (operation === 'removed') {\n      setSelectedAddress(null);\n    }\n\n    setToastObj({\n      openToast: true,\n      operation\n    });\n  };\n\n  const handleRemoveAddress = shippingId => {\n    dispatch(removeShippingAddress(user.id, token, shippingId, onSuccess));\n  };\n\n  useEffect(() => {\n    if (selectedshipping) {\n      setSelectedAddress(JSON.stringify(selectedshipping));\n    }\n  }, [selectedshipping]);\n  useEffect(() => {\n    if (token && (user === null || user === void 0 ? void 0 : user.id)) {\n      dispatch(getShippingAddresses(user.id, token, onSuccess));\n    }\n  }, [user, token, dispatch]);\n  useEffect(() => {\n    setLoadedShippingAddresses(shippingAddresses);\n    setDisableAddNew(false);\n  }, [shippingAddresses]);\n  useEffect(() => {\n    if (selectedAddress && JSON.parse(selectedAddress)) {\n      validateStep(JSON.parse(selectedAddress));\n    } else {\n      validateStep(selectedAddress);\n    }\n  }, [selectedAddress, validateStep, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      openToast: toastObj.openToast,\n      setOpenToast: handleOpenToast,\n      severity: \"success\",\n      message: `Address ${toastObj.operation}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        className: classes.formLabel,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"span\",\n          children: \"Choose the shipping address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          TransitionComponent: Zoom,\n          title: \"Reload\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            disabled: !token,\n            color: \"primary\",\n            onClick: () => {\n              setDisableAddNew(false);\n              dispatch(getShippingAddresses(user.id, token));\n            },\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          color: \"primary\",\n          className: classes.addNewBtn,\n          disabled: !token || disableAddNew,\n          disableRipple: true,\n          onClick: () => {\n            if (!loadedShippingAddresses.find(address => address.id === dummyItemId)) {\n              setLoadedShippingAddresses([{\n                id: dummyItemId,\n                street: '',\n                suburb: '',\n                postcode: '',\n                city: '',\n                country: ''\n              }, ...loadedShippingAddresses]);\n              setDisableAddNew(true);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(AddNewIcon, {\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"button\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Add a new address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingLinear, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: error,\n        severity: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        name: \"shipping\",\n        value: selectedAddress,\n        className: classes.others,\n        onChange: event => setSelectedAddress(event.target.value),\n        children: (loadedShippingAddresses === null || loadedShippingAddresses === void 0 ? void 0 : loadedShippingAddresses.length) > 0 ? loadedShippingAddresses.map(address => {\n          var _address;\n\n          address = capitalize(address);\n          return /*#__PURE__*/_jsxDEV(CheckoutAccordian, {\n            item: address,\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              checked: ((_address = address) === null || _address === void 0 ? void 0 : _address.id) === (selectedshipping === null || selectedshipping === void 0 ? void 0 : selectedshipping.id),\n              className: classes.radio,\n              disabled: address.id === dummyItemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 23\n            }, this),\n            error: shippingError !== undefined && shippingError !== null ? shippingError : '',\n            label: [address.street, address.suburb, address.postcode, address.city, address.country].reduce((acc, curr) => curr ? acc + ', ' + curr : acc + ' '),\n            discardNew: discardNewAddress,\n            handleRemoveItem: handleRemoveAddress,\n            dummyItemId: dummyItemId,\n            children: /*#__PURE__*/_jsxDEV(ShippingForm, {\n              address: address,\n              user: user,\n              token: token,\n              onSuccess: onSuccess,\n              shippingError: shippingError,\n              setDisableAddNew: setDisableAddNew,\n              dummyItemId: dummyItemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this)\n          }, address.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this);\n        }) : loadedShippingAddresses && /*#__PURE__*/_jsxDEV(AlertMessage, {\n          message: \"No shipping addresses saved\",\n          severity: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Shipping, \"RRk35y25sYKYV6ObRz1FnQeZDxs=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Shipping;\nexport default Shipping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shipping\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/projects/ecommbrd/client/src/components/checkout/pages/Shipping.js"],"names":["React","useEffect","useState","useDispatch","useSelector","ShippingForm","LoadingLinear","AlertMessage","Toast","CheckoutAccordian","capitalize","getShippingAddresses","removeShippingAddress","makeStyles","Radio","Typography","RadioGroup","FormControl","FormLabel","IconButton","Tooltip","Zoom","RefreshIcon","AddNewIcon","useStyles","theme","root","width","margin","spacing","marginBottom","padding","breakpoints","down","formLabel","addNewBtn","display","borderRadius","dummyItemId","Shipping","validateStep","classes","disableAddNew","setDisableAddNew","toastObj","setToastObj","openToast","operation","dispatch","loggedInUser","user","token","state","userAuth","loading","error","shippingAddresses","shipping","shippingError","selectedshipping","checkout","loadedShippingAddresses","setLoadedShippingAddresses","selectedAddress","setSelectedAddress","discardNewAddress","shippingId","filter","address","id","handleOpenToast","open","prevState","onSuccess","handleRemoveAddress","JSON","stringify","parse","find","street","suburb","postcode","city","country","marginRight","others","event","target","value","length","map","radio","undefined","reduce","acc","curr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ShippingForm from '../components/ShippingForm';\nimport LoadingLinear from '../../shared/ui/LoadingLinear';\nimport AlertMessage from '../../shared/ui/AlertMessage';\nimport Toast from '../../shared/ui/Toast';\nimport CheckoutAccordian from '../../shared/ui/CheckoutAccordian';\nimport { capitalize } from '../../../helpers';\n\nimport {\n  getShippingAddresses,\n  removeShippingAddress,\n} from '../../../redux/actionCreators/shippingActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/Typography';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/RefreshSharp';\nimport AddNewIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '50%',\n    margin: theme.spacing(2, 'auto'),\n    marginBottom: theme.spacing(6),\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  formLabel: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(2, 'auto'),\n    },\n  },\n  addNewBtn: {\n    display: 'block',\n    '&:hover': {\n      borderRadius: '3px',\n    },\n  },\n}));\n\nconst dummyItemId = 'newAddToAddressAccordian';\n\nconst Shipping = ({ validateStep }) => {\n  const classes = useStyles();\n  const [disableAddNew, setDisableAddNew] = useState(false);\n  const [toastObj, setToastObj] = useState({\n    openToast: false,\n    operation: null,\n  });\n\n  const dispatch = useDispatch();\n  const {\n    loggedInUser: { user, token },\n  } = useSelector((state) => state.userAuth);\n  const { loading, error, shippingAddresses } = useSelector(\n    (state) => state.shipping\n  );\n  const { shippingError, selectedshipping } = useSelector(\n    (state) => state.checkout\n  );\n  const [loadedShippingAddresses, setLoadedShippingAddresses] = useState([]);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const discardNewAddress = (shippingId) => {\n    setLoadedShippingAddresses(\n      loadedShippingAddresses.filter((address) => address.id !== shippingId)\n    );\n    setDisableAddNew(false);\n  };\n  const handleOpenToast = (open) => {\n    setToastObj((prevState) => ({\n      ...prevState,\n      openToast: open,\n    }));\n  };\n  const onSuccess = (operation) => {\n    if (operation === 'removed') {\n      setSelectedAddress(null);\n    }\n    setToastObj({ openToast: true, operation });\n  };\n  const handleRemoveAddress = (shippingId) => {\n    dispatch(removeShippingAddress(user.id, token, shippingId, onSuccess));\n  };\n\n  useEffect(() => {\n    if (selectedshipping) {\n      setSelectedAddress(JSON.stringify(selectedshipping));\n    }\n  }, [selectedshipping]);\n\n  useEffect(() => {\n    if (token && user?.id) {\n      dispatch(getShippingAddresses(user.id, token, onSuccess));\n    }\n  }, [user, token, dispatch]);\n\n  useEffect(() => {\n    setLoadedShippingAddresses(shippingAddresses);\n    setDisableAddNew(false);\n  }, [shippingAddresses]);\n\n  useEffect(() => {\n    if (selectedAddress && JSON.parse(selectedAddress)) {\n      validateStep(JSON.parse(selectedAddress));\n    } else {\n      validateStep(selectedAddress);\n    }\n  }, [selectedAddress, validateStep, dispatch]);\n\n  return (\n    <>\n      <Toast\n        openToast={toastObj.openToast}\n        setOpenToast={handleOpenToast}\n        severity=\"success\"\n        message={`Address ${toastObj.operation}`}\n      />\n      <FormControl component=\"fieldset\" className={classes.root}>\n        <FormLabel component=\"legend\" className={classes.formLabel}>\n          <Typography variant=\"h6\" component=\"span\">\n            Choose the shipping address\n          </Typography>\n          <Tooltip TransitionComponent={Zoom} title=\"Reload\">\n            <IconButton\n              disabled={!token}\n              color=\"primary\"\n              onClick={() => {\n                setDisableAddNew(false);\n                dispatch(getShippingAddresses(user.id, token));\n              }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <IconButton\n            edge=\"end\"\n            color=\"primary\"\n            className={classes.addNewBtn}\n            disabled={!token || disableAddNew}\n            disableRipple\n            onClick={() => {\n              if (\n                !loadedShippingAddresses.find(\n                  (address) => address.id === dummyItemId\n                )\n              ) {\n                setLoadedShippingAddresses([\n                  {\n                    id: dummyItemId,\n                    street: '',\n                    suburb: '',\n                    postcode: '',\n                    city: '',\n                    country: '',\n                  },\n                  ...loadedShippingAddresses,\n                ]);\n                setDisableAddNew(true);\n              }\n            }}\n          >\n            <AddNewIcon style={{ marginRight: '10px' }} />\n            <Typography variant=\"button\" component=\"span\">\n              <strong>Add a new address</strong>\n            </Typography>\n          </IconButton>\n        </FormLabel>\n        {loading && <LoadingLinear />}\n        {error && <AlertMessage message={error} severity=\"error\" />}\n        <RadioGroup\n          name=\"shipping\"\n          value={selectedAddress}\n          className={classes.others}\n          onChange={(event) => setSelectedAddress(event.target.value)}\n        >\n          {loadedShippingAddresses?.length > 0\n            ? loadedShippingAddresses.map((address) => {\n                address = capitalize(address);\n                return (\n                  <CheckoutAccordian\n                    key={address.id}\n                    item={address}\n                    control={\n                      <Radio\n                        checked={address?.id === selectedshipping?.id}\n                        className={classes.radio}\n                        disabled={address.id === dummyItemId}\n                      />\n                    }\n                    error={\n                      shippingError !== undefined && shippingError !== null\n                        ? shippingError\n                        : ''\n                    }\n                    label={[\n                      address.street,\n                      address.suburb,\n                      address.postcode,\n                      address.city,\n                      address.country,\n                    ].reduce((acc, curr) =>\n                      curr ? acc + ', ' + curr : acc + ' '\n                    )}\n                    discardNew={discardNewAddress}\n                    handleRemoveItem={handleRemoveAddress}\n                    dummyItemId={dummyItemId}\n                  >\n                    <ShippingForm\n                      address={address}\n                      user={user}\n                      token={token}\n                      onSuccess={onSuccess}\n                      shippingError={shippingError}\n                      setDisableAddNew={setDisableAddNew}\n                      dummyItemId={dummyItemId}\n                    />\n                  </CheckoutAccordian>\n                );\n              })\n            : loadedShippingAddresses && (\n                <AlertMessage\n                  message=\"No shipping addresses saved\"\n                  severity=\"info\"\n                />\n              )}\n        </RadioGroup>\n      </FormControl>\n    </>\n  );\n};\n\nexport default Shipping;\n"]},"metadata":{},"sourceType":"module"}