{"ast":null,"code":"import _toConsumableArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{Formik,Form}from'formik';import*as Yup from'yup';import FormikTextField from'../../shared/formElements/FormikTextField';import BigButton from'../../shared/ui/BigButton';import AlertMessage from'../../shared/ui/AlertMessage';import{savePaymentMethod}from'../../../redux/actionCreators/paymentActionCreators';import{makeStyles}from'@material-ui/core/styles';import FormControl from'@material-ui/core/FormControl';import FormikSelect from'../../shared/formElements/FormikSelect';import IconButton from'@material-ui/core/IconButton';import Tooltip from'@material-ui/core/Tooltip';import Zoom from'@material-ui/core/Zoom';import RefreshIcon from'@material-ui/icons/Refresh';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:'95%',margin:'0 auto',display:'flex',flexDirection:'column',alignItems:'center',padding:theme.spacing(2,5),backgroundColor:'rgba(245,245,245,0.3)',borderRadius:theme.spacing(1),'&>*':{width:'99%',display:'block'}},sections:{display:'flex',justifyContent:'flex-start',alignItems:'center','&>*':{width:'99%',display:'block'}},iconButtonDiv:{display:'flex',justifyContent:'space-between'},cvv:{backgroundColor:'white',fontWeight:'900'}};});var PaymentForm=function PaymentForm(_ref){var paymentMethod=_ref.paymentMethod,user=_ref.user,token=_ref.token,onSuccess=_ref.onSuccess,paymentError=_ref.paymentError,validateStep=_ref.validateStep,setDisableAddNew=_ref.setDisableAddNew,dummyItemId=_ref.dummyItemId;var classes=useStyles();var dispatch=useDispatch();var initialValues={id:paymentMethod.id,nameOnCard:paymentMethod.nameOnCard||'',cardNumber:paymentMethod.cardNumber||'',expiryMonth:paymentMethod.expiryMonth||'',expiryYear:paymentMethod.expiryYear||'',cvv:' '};var _useState=useState(paymentMethod.expiryMonth),_useState2=_slicedToArray(_useState,2),selectedExpiryMonth=_useState2[0],setSelectedExpiryMonth=_useState2[1];var _useState3=useState(paymentMethod.expiryYear),_useState4=_slicedToArray(_useState3,2),selectedExpiryYear=_useState4[0],setSelectedExpiryYear=_useState4[1];var validationSchema=Yup.object({nameOnCard:Yup.string(),cardNumber:Yup.number('Must be a number').required('Card number required').positive('Must be positive').integer('No decimal points').test('len','Must be exactly 16 digits',function(val){return val&&val.toString().length===16;}),expiryMonth:Yup.number('Must be a number').required('Expiry month required').positive('Must be positive').integer('No decimal points').oneOf(_toConsumableArray(Array(12).keys()).map(function(num){return num+1;})),expiryYear:Yup.number('Must be a number').required('Expiry year required').positive('Must be positive').integer('No decimal points').oneOf(_toConsumableArray(Array(7).keys()).map(function(num){return num+new Date().getFullYear()-2000;})),cvv:Yup.number('Must be a number').required('Required').positive('Must be positive').integer('No decimal points').test('len','Invalid format',function(val){return val&&val.toString().length===3;})});var submitHandler=function submitHandler(values,actions){if(paymentMethod.id===dummyItemId){delete values.id;delete values.cvv;dispatch(savePaymentMethod(user.id,token,values,onSuccess));}else{//console.log('here ', values);\nvalidateStep(values);}actions.setSubmitting(false);setDisableAddNew(false);};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(\"div\",{children:paymentError&&/*#__PURE__*/_jsx(AlertMessage,{message:paymentError,severity:\"error\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:submitHandler,validateOnMount:true,enableReinitialize:true,children:function children(formik){return/*#__PURE__*/_jsxs(Form,{className:classes.root,children:[paymentMethod.id===dummyItemId&&/*#__PURE__*/_jsxs(\"div\",{className:classes.iconButtonDiv,children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(Tooltip,{TransitionComponent:Zoom,title:\"Reset form\",children:/*#__PURE__*/_jsx(IconButton,{disabled:!token,color:\"primary\",onClick:function onClick(){return formik.resetForm();},children:/*#__PURE__*/_jsx(RefreshIcon,{})})})]}),/*#__PURE__*/_jsxs(FormControl,{style:{marginBottom:'25px'},children:[/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",fullWidth:true,children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"nameOnCard\",type:\"text\",id:\"nameOnCard\",name:\"nameOnCard\",label:\"Name on Card\",disabled:paymentMethod.id!==dummyItemId,variant:\"standard\"})}),/*#__PURE__*/_jsx(\"div\",{className:classes.sections,children:/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"cardNumber\",type:\"number\",maxLength:\"16\",id:\"cardNumber\",name:\"cardNumber\",label:\"Card Number\",disabled:paymentMethod.id!==dummyItemId,variant:\"standard\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.sections,children:[/*#__PURE__*/_jsx(FormControl,{size:\"small\",variant:\"standard\",children:/*#__PURE__*/_jsx(FormikSelect,{as:\"select\",fieldName:\"expiryMonth\",id:\"expiryMonth\",name:\"expiryMonth\",disabled:paymentMethod.id!==dummyItemId,label:\"Month\",value:selectedExpiryMonth,itemsArray:_toConsumableArray(Array(12).keys()).map(function(num){return num+1;}),onChange:function onChange(event){return setSelectedExpiryMonth(event.target.value);}})}),/*#__PURE__*/_jsx(FormControl,{size:\"small\",variant:\"standard\",children:/*#__PURE__*/_jsx(FormikSelect,{as:\"select\",fieldName:\"expiryYear\",id:\"expiryYear\",name:\"expiryYear\",disabled:paymentMethod.id!==dummyItemId,label:\"Year\",value:selectedExpiryYear,itemsArray:_toConsumableArray(Array(7).keys()).map(function(num){return num+new Date().getFullYear()-2000;}),onChange:function onChange(event){return setSelectedExpiryYear(event.target.value);}})}),/*#__PURE__*/_jsx(FormControl,{size:\"small\",margin:\"none\",children:/*#__PURE__*/_jsx(FormikTextField,{fieldName:\"cvv\",type:\"number\",maxLength:\"3\",id:\"cvv\",name:\"cvv\",label:\"CVV\",color:\"primary\",variant:\"standard\",className:classes.cvv,required:true})})]})]}),/*#__PURE__*/_jsxs(BigButton,{type:\"submit\",disabled:!formik.isValid||formik.isSubmitting||JSON.stringify(initialValues)===JSON.stringify(formik.values),children:[paymentMethod.id===dummyItemId?'SAVE':'USE',\" PAYMENT METHOD\"]})]});}})})]});};export default PaymentForm;","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/checkout/components/PaymentForm.js"],"names":["React","useState","useDispatch","Formik","Form","Yup","FormikTextField","BigButton","AlertMessage","savePaymentMethod","makeStyles","FormControl","FormikSelect","IconButton","Tooltip","Zoom","RefreshIcon","useStyles","theme","root","width","margin","display","flexDirection","alignItems","padding","spacing","backgroundColor","borderRadius","sections","justifyContent","iconButtonDiv","cvv","fontWeight","PaymentForm","paymentMethod","user","token","onSuccess","paymentError","validateStep","setDisableAddNew","dummyItemId","classes","dispatch","initialValues","id","nameOnCard","cardNumber","expiryMonth","expiryYear","selectedExpiryMonth","setSelectedExpiryMonth","selectedExpiryYear","setSelectedExpiryYear","validationSchema","object","string","number","required","positive","integer","test","val","toString","length","oneOf","Array","keys","map","num","Date","getFullYear","submitHandler","values","actions","setSubmitting","formik","resetForm","marginBottom","event","target","value","isValid","isSubmitting","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport AlertMessage from '../../shared/ui/AlertMessage';\n\nimport { savePaymentMethod } from '../../../redux/actionCreators/paymentActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormikSelect from '../../shared/formElements/FormikSelect';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '95%',\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2, 5),\n    backgroundColor: 'rgba(245,245,245,0.3)',\n    borderRadius: theme.spacing(1),\n    '&>*': {\n      width: '99%',\n      display: 'block',\n    },\n  },\n  sections: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '&>*': {\n      width: '99%',\n      display: 'block',\n    },\n  },\n  iconButtonDiv: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cvv: {\n    backgroundColor: 'white',\n    fontWeight: '900',\n  },\n}));\n\nconst PaymentForm = ({\n  paymentMethod,\n  user,\n  token,\n  onSuccess,\n  paymentError,\n  validateStep,\n  setDisableAddNew,\n  dummyItemId,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const initialValues = {\n    id: paymentMethod.id,\n    nameOnCard: paymentMethod.nameOnCard || '',\n    cardNumber: paymentMethod.cardNumber || '',\n    expiryMonth: paymentMethod.expiryMonth || '',\n    expiryYear: paymentMethod.expiryYear || '',\n    cvv: ' ',\n  };\n  const [selectedExpiryMonth, setSelectedExpiryMonth] = useState(\n    paymentMethod.expiryMonth\n  );\n  const [selectedExpiryYear, setSelectedExpiryYear] = useState(\n    paymentMethod.expiryYear\n  );\n  const validationSchema = Yup.object({\n    nameOnCard: Yup.string(),\n    cardNumber: Yup.number('Must be a number')\n      .required('Card number required')\n      .positive('Must be positive')\n      .integer('No decimal points')\n      .test(\n        'len',\n        'Must be exactly 16 digits',\n        (val) => val && val.toString().length === 16\n      ),\n    expiryMonth: Yup.number('Must be a number')\n      .required('Expiry month required')\n      .positive('Must be positive')\n      .integer('No decimal points')\n      .oneOf([...Array(12).keys()].map((num) => num + 1)),\n    expiryYear: Yup.number('Must be a number')\n      .required('Expiry year required')\n      .positive('Must be positive')\n      .integer('No decimal points')\n      .oneOf(\n        [...Array(7).keys()].map((num) => {\n          return num + new Date().getFullYear() - 2000;\n        })\n      ),\n    cvv: Yup.number('Must be a number')\n      .required('Required')\n      .positive('Must be positive')\n      .integer('No decimal points')\n      .test(\n        'len',\n        'Invalid format',\n        (val) => val && val.toString().length === 3\n      ),\n  });\n\n  const submitHandler = (values, actions) => {\n    if (paymentMethod.id === dummyItemId) {\n      delete values.id;\n      delete values.cvv;\n      dispatch(savePaymentMethod(user.id, token, values, onSuccess));\n    } else {\n      //console.log('here ', values);\n      validateStep(values);\n    }\n    actions.setSubmitting(false);\n    setDisableAddNew(false);\n  };\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        {paymentError && (\n          <AlertMessage message={paymentError} severity=\"error\" />\n        )}\n      </div>\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={submitHandler}\n          validateOnMount\n          enableReinitialize\n        >\n          {(formik) => {\n            return (\n              <Form className={classes.root}>\n                {paymentMethod.id === dummyItemId && (\n                  <div className={classes.iconButtonDiv}>\n                    <div></div>\n                    <Tooltip TransitionComponent={Zoom} title=\"Reset form\">\n                      <IconButton\n                        disabled={!token}\n                        color=\"primary\"\n                        onClick={() => formik.resetForm()}\n                      >\n                        <RefreshIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                )}\n                <FormControl style={{ marginBottom: '25px' }}>\n                  <FormControl size=\"small\" margin=\"none\" fullWidth>\n                    <FormikTextField\n                      fieldName=\"nameOnCard\"\n                      type=\"text\"\n                      id=\"nameOnCard\"\n                      name=\"nameOnCard\"\n                      label=\"Name on Card\"\n                      disabled={paymentMethod.id !== dummyItemId}\n                      variant=\"standard\"\n                    />\n                  </FormControl>\n                  <div className={classes.sections}>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"cardNumber\"\n                        type=\"number\"\n                        maxLength=\"16\"\n                        id=\"cardNumber\"\n                        name=\"cardNumber\"\n                        label=\"Card Number\"\n                        disabled={paymentMethod.id !== dummyItemId}\n                        variant=\"standard\"\n                      />\n                    </FormControl>\n                  </div>\n                  <div className={classes.sections}>\n                    <FormControl size=\"small\" variant=\"standard\">\n                      <FormikSelect\n                        as=\"select\"\n                        fieldName=\"expiryMonth\"\n                        id=\"expiryMonth\"\n                        name=\"expiryMonth\"\n                        disabled={paymentMethod.id !== dummyItemId}\n                        label=\"Month\"\n                        value={selectedExpiryMonth}\n                        itemsArray={[...Array(12).keys()].map((num) => num + 1)}\n                        onChange={(event) =>\n                          setSelectedExpiryMonth(event.target.value)\n                        }\n                      />\n                    </FormControl>\n                    <FormControl size=\"small\" variant=\"standard\">\n                      <FormikSelect\n                        as=\"select\"\n                        fieldName=\"expiryYear\"\n                        id=\"expiryYear\"\n                        name=\"expiryYear\"\n                        disabled={paymentMethod.id !== dummyItemId}\n                        label=\"Year\"\n                        value={selectedExpiryYear}\n                        itemsArray={[...Array(7).keys()].map((num) => {\n                          return num + new Date().getFullYear() - 2000;\n                        })}\n                        onChange={(event) =>\n                          setSelectedExpiryYear(event.target.value)\n                        }\n                      />\n                    </FormControl>\n                    <FormControl size=\"small\" margin=\"none\">\n                      <FormikTextField\n                        fieldName=\"cvv\"\n                        type=\"number\"\n                        maxLength=\"3\"\n                        id=\"cvv\"\n                        name=\"cvv\"\n                        label=\"CVV\"\n                        color=\"primary\"\n                        variant=\"standard\"\n                        className={classes.cvv}\n                        required\n                      />\n                    </FormControl>\n                  </div>\n                </FormControl>\n\n                <BigButton\n                  type=\"submit\"\n                  disabled={\n                    !formik.isValid ||\n                    formik.isSubmitting ||\n                    JSON.stringify(initialValues) ===\n                      JSON.stringify(formik.values)\n                  }\n                >\n                  {paymentMethod.id === dummyItemId ? 'SAVE' : 'USE'} PAYMENT\n                  METHOD\n                </BigButton>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}