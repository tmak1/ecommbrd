{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/shared/ui/SwitchComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { red } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColoredSwitch = withStyles({\n  switchBase: {\n    color: red[400],\n    '&$checked': {\n      color: green[500]\n    },\n    '&:not($checked) + $track': {\n      backgroundColor: red[300]\n    },\n    '&$checked + $track': {\n      backgroundColor: green[400]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\n\nconst SwitchComp = ({\n  value,\n  label,\n  labelColor,\n  handleChange,\n  info\n}) => {\n  _s();\n\n  const [checked, setChecked] = React.useState(false);\n\n  const changeHandler = () => {\n    setChecked(prevChecked => !prevChecked);\n    handleChange(info, !checked);\n  };\n\n  useEffect(() => {\n    setChecked(value);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    component: \"fieldset\",\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(ColoredSwitch, {\n          checked: checked,\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this),\n        label: checked ? label[0] : label[1],\n        labelPlacement: \"top\",\n        style: {\n          color: checked ? labelColor[0] : labelColor[1]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwitchComp, \"UNAhWLyYaSzbtDfz4zr51r/nvPk=\");\n\n_c = SwitchComp;\nexport default SwitchComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchComp\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/shared/ui/SwitchComp.js"],"names":["React","useEffect","withStyles","green","red","Switch","FormGroup","FormControlLabel","FormControl","ColoredSwitch","switchBase","color","backgroundColor","checked","track","SwitchComp","value","label","labelColor","handleChange","info","setChecked","useState","changeHandler","prevChecked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,aAAa,GAAGP,UAAU,CAAC;AAC/BQ,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEP,GAAG,CAAC,GAAD,CADA;AAEV,iBAAa;AACXO,MAAAA,KAAK,EAAER,KAAK,CAAC,GAAD;AADD,KAFH;AAKV,gCAA4B;AAC1BS,MAAAA,eAAe,EAAER,GAAG,CAAC,GAAD;AADM,KALlB;AAQV,0BAAsB;AACpBQ,MAAAA,eAAe,EAAET,KAAK,CAAC,GAAD;AADF;AARZ,GADmB;AAa/BU,EAAAA,OAAO,EAAE,EAbsB;AAc/BC,EAAAA,KAAK,EAAE;AAdwB,CAAD,CAAV,CAenBT,MAfmB,CAAtB;;AAiBA,MAAMU,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,YAA5B;AAA0CC,EAAAA;AAA1C,CAAD,KAAsD;AAAA;;AACvE,QAAM,CAACP,OAAD,EAAUQ,UAAV,IAAwBrB,KAAK,CAACsB,QAAN,CAAe,KAAf,CAA9B;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BF,IAAAA,UAAU,CAAEG,WAAD,IAAiB,CAACA,WAAnB,CAAV;AACAL,IAAAA,YAAY,CAACC,IAAD,EAAO,CAACP,OAAR,CAAZ;AACD,GAHD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,UAAU,CAACL,KAAD,CAAV;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,OAAO,eAAE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEH,OAAxB;AAAiC,UAAA,QAAQ,EAAEU;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADX;AAEE,QAAA,KAAK,EAAEV,OAAO,GAAGI,KAAK,CAAC,CAAD,CAAR,GAAcA,KAAK,CAAC,CAAD,CAFnC;AAGE,QAAA,cAAc,EAAC,KAHjB;AAIE,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAAEE,OAAO,GAAGK,UAAU,CAAC,CAAD,CAAb,GAAmBA,UAAU,CAAC,CAAD;AAA7C;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtBD;;GAAMH,U;;KAAAA,U;AAwBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { red } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst ColoredSwitch = withStyles({\n  switchBase: {\n    color: red[400],\n    '&$checked': {\n      color: green[500],\n    },\n    '&:not($checked) + $track': {\n      backgroundColor: red[300],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[400],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst SwitchComp = ({ value, label, labelColor, handleChange, info }) => {\n  const [checked, setChecked] = React.useState(false);\n  const changeHandler = () => {\n    setChecked((prevChecked) => !prevChecked);\n    handleChange(info, !checked);\n  };\n  useEffect(() => {\n    setChecked(value);\n  }, [value]);\n  return (\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        <FormControlLabel\n          control={<ColoredSwitch checked={checked} onChange={changeHandler} />}\n          label={checked ? label[0] : label[1]}\n          labelPlacement=\"top\"\n          style={{ color: checked ? labelColor[0] : labelColor[1] }}\n        />\n      </FormGroup>\n      <br />\n    </FormControl>\n  );\n};\n\nexport default SwitchComp;\n"]},"metadata":{},"sourceType":"module"}