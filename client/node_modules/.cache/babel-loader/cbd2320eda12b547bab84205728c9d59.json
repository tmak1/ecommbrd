{"ast":null,"code":"var _jsxFileName = \"/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/users/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link as Rlink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PageHeading from '../../shared/ui/PageHeading';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport ShowPasswordAdornment from '../../shared/ui/ShowPasswordAdornment';\nimport { authenticateUser } from '../../../redux/actionCreators/userActionCreators';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    padding: theme.spacing(3)\n  },\n  passwordreset: {\n    margin: '10px 0 20px 10px'\n  }\n}));\n\nconst LoginForm = ({\n  loggedIn\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().required('Email required').email('Invalid email format'),\n    password: Yup.string().required('Password required').test('len', 'Must be atleast (3) characters', val => (val === null || val === void 0 ? void 0 : val.length) >= 3)\n  });\n\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const submitHandler = (values, actions) => {\n    dispatch(authenticateUser(values, 'login')); //console.log(values);\n\n    actions.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loggedIn ? /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageHeading, {\n      text: !loggedIn ? 'SIGNIN' : 'You are logged in!',\n      size: loggedIn && 'small',\n      gutterBottom: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: submitHandler,\n      validateOnMount: true,\n      enableReinitialize: true,\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"email\",\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            label: \"Enter your email\",\n            variant: \"outlined\",\n            disabled: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormikTextField, {\n            fieldName: \"password\",\n            type: showPassword ? 'text' : 'password',\n            id: \"password\",\n            name: \"password\",\n            label: \"Enter your password\",\n            variant: \"outlined\",\n            disabled: loggedIn,\n            adornment: /*#__PURE__*/_jsxDEV(ShowPasswordAdornment, {\n              showPassword: showPassword,\n              toggleShowPassword: toggleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this),\n            adornmentPosition: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            component: Rlink,\n            to: \"/pages/1\",\n            align: \"left\",\n            color: \"textSecondary\",\n            disabled: loggedIn,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              align: \"left\",\n              gutterBottom: true,\n              paragraph: true,\n              className: classes.passwordreset,\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BigButton, {\n          type: \"submit\",\n          disabled: !formik.isValid || formik.isSubmitting || loggedIn,\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"qsUy3lspHxvTPrxW9RpndZyIq0A=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/client/src/components/users/components/LoginForm.js"],"names":["React","useState","Link","Rlink","useDispatch","Formik","Form","Yup","PageHeading","FormikTextField","BigButton","ShowPasswordAdornment","authenticateUser","makeStyles","Typography","Paper","LockIcon","LockOpenIcon","useStyles","theme","root","width","padding","spacing","passwordreset","margin","LoginForm","loggedIn","classes","dispatch","showPassword","setShowPassword","initialValues","email","password","validationSchema","object","string","required","test","val","length","toggleShowPassword","prevState","submitHandler","values","actions","setSubmitting","formik","formControl","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as Rlink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport PageHeading from '../../shared/ui/PageHeading';\nimport FormikTextField from '../../shared/formElements/FormikTextField';\nimport BigButton from '../../shared/ui/BigButton';\nimport ShowPasswordAdornment from '../../shared/ui/ShowPasswordAdornment';\n\nimport { authenticateUser } from '../../../redux/actionCreators/userActionCreators';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: theme.spacing(3),\n  },\n  passwordreset: {\n    margin: '10px 0 20px 10px',\n  },\n}));\n\nconst LoginForm = ({ loggedIn }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email format'),\n    password: Yup.string()\n      .required('Password required')\n      .test('len', 'Must be atleast (3) characters', (val) => val?.length >= 3),\n  });\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const submitHandler = (values, actions) => {\n    dispatch(authenticateUser(values, 'login'));\n    //console.log(values);\n    actions.setSubmitting(false);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div>{!loggedIn ? <LockOpenIcon /> : <LockIcon />}</div>\n      <PageHeading\n        text={!loggedIn ? 'SIGNIN' : 'You are logged in!'}\n        size={loggedIn && 'small'}\n        gutterBottom\n      />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitHandler}\n        validateOnMount\n        enableReinitialize\n      >\n        {(formik) => (\n          <Form>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"email\"\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                label=\"Enter your email\"\n                variant=\"outlined\"\n                disabled={loggedIn}\n              />\n            </div>\n            <div className={classes.formControl}>\n              <FormikTextField\n                fieldName=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                name=\"password\"\n                label=\"Enter your password\"\n                variant=\"outlined\"\n                disabled={loggedIn}\n                adornment={\n                  <ShowPasswordAdornment\n                    showPassword={showPassword}\n                    toggleShowPassword={toggleShowPassword}\n                  />\n                }\n                adornmentPosition=\"end\"\n              />\n              <Link\n                component={Rlink}\n                to=\"/pages/1\"\n                align=\"left\"\n                color=\"textSecondary\"\n                disabled={loggedIn}\n              >\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  align=\"left\"\n                  gutterBottom\n                  paragraph\n                  className={classes.passwordreset}\n                >\n                  Forgot Password?\n                </Typography>\n              </Link>\n            </div>\n            <BigButton\n              type=\"submit\"\n              disabled={!formik.isValid || formik.isSubmitting || loggedIn}\n            >\n              LOGIN\n            </BigButton>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}