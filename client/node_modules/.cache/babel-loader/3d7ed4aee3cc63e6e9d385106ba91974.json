{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { productListReducer, productTopListReducer, productDetailsReducer, adminProductListReducer, productCreateReducer, productDeleteReducer, productUpdateByAdminReducer } from './productReducers';\nimport cartReducer from './cartReducers';\nimport { authReducer, userListReducer, userUpdateReducer, userDeleteReducer, userUpdateByAdminReducer } from './userReducers';\nimport { placeOrderReducer, orderDetailsReducer, orderListReducer, orderListByUserReducer, orderListByProductReducer, orderForProductByUserReducer, orderUpdateIsDeliveredReducer } from './orderReducers';\nimport { getAllProductReviewsReducer, getAllUserReviewsReducer, createReviewReducer, deleteReviewReducer } from './reviewReducers';\nimport shippingReducer from './shippingReducer';\nimport paymentReducer from './paymentReducer';\nimport checkoutReducer from './checkoutReducer';\n\nconst getItemsFromStorage = (propertyType, itemType) => {\n  let items = propertyType === 'array' ? [] : null;\n  let shoppingapp = localStorage.getItem('shoppingapp');\n\n  if (shoppingapp) {\n    shoppingapp = JSON.parse(shoppingapp);\n    items = shoppingapp[itemType] || items;\n  }\n\n  return items;\n}; // redux actually calls an indiividual reducer before the initialState in the store()\n// function is applied. So state in a reducer needs to have a default value\n// to fallback on while initialState (here below) is being applied to the reducer from store()\n\n\nexport const initialState = {\n  cart: {\n    cartItems: getItemsFromStorage('array', 'cartItems')\n  },\n  userAuth: {\n    loggedInUser: getItemsFromStorage('object', 'loggedInUser')\n  },\n  shipping: {\n    shippingAddresses: getItemsFromStorage('array', 'shippingAddresses')\n  },\n  payment: {\n    paymentMethods: getItemsFromStorage('array', 'paymentMethods')\n  },\n  checkout: {\n    selectedshipping: getItemsFromStorage('object', 'selectedshipping'),\n    selectedpayment: getItemsFromStorage('object', 'selectedpayment')\n  }\n};\nexport const rootReducer = combineReducers({\n  productsList: productListReducer,\n  productsListTop: productTopListReducer,\n  productDetails: productDetailsReducer,\n  adminProductList: adminProductListReducer,\n  productCreate: productCreateReducer,\n  productDelete: productDeleteReducer,\n  productUpdateByAdmin: productUpdateByAdminReducer,\n  cart: cartReducer,\n  userAuth: authReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  userDeleted: userDeleteReducer,\n  userUpdateByAdmin: userUpdateByAdminReducer,\n  shipping: shippingReducer,\n  payment: paymentReducer,\n  checkout: checkoutReducer,\n  orderCreated: placeOrderReducer,\n  orderDetails: orderDetailsReducer,\n  orderList: orderListReducer,\n  orderListByUser: orderListByUserReducer,\n  orderListByProduct: orderListByProductReducer,\n  orderForProductByUser: orderForProductByUserReducer,\n  orderUpdateIsDelivered: orderUpdateIsDeliveredReducer,\n  productReviews: getAllProductReviewsReducer,\n  userReviews: getAllUserReviewsReducer,\n  createReview: createReviewReducer,\n  deleteReview: deleteReviewReducer\n});","map":{"version":3,"sources":["/Users/tmak/Desktop/tei/udemy/brdtrv/ecomm/server/client/src/redux/reducers/rootReducer.js"],"names":["combineReducers","productListReducer","productTopListReducer","productDetailsReducer","adminProductListReducer","productCreateReducer","productDeleteReducer","productUpdateByAdminReducer","cartReducer","authReducer","userListReducer","userUpdateReducer","userDeleteReducer","userUpdateByAdminReducer","placeOrderReducer","orderDetailsReducer","orderListReducer","orderListByUserReducer","orderListByProductReducer","orderForProductByUserReducer","orderUpdateIsDeliveredReducer","getAllProductReviewsReducer","getAllUserReviewsReducer","createReviewReducer","deleteReviewReducer","shippingReducer","paymentReducer","checkoutReducer","getItemsFromStorage","propertyType","itemType","items","shoppingapp","localStorage","getItem","JSON","parse","initialState","cart","cartItems","userAuth","loggedInUser","shipping","shippingAddresses","payment","paymentMethods","checkout","selectedshipping","selectedpayment","rootReducer","productsList","productsListTop","productDetails","adminProductList","productCreate","productDelete","productUpdateByAdmin","userUpdate","userList","userDeleted","userUpdateByAdmin","orderCreated","orderDetails","orderList","orderListByUser","orderListByProduct","orderForProductByUser","orderUpdateIsDelivered","productReviews","userReviews","createReview","deleteReview"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport {\n  productListReducer,\n  productTopListReducer,\n  productDetailsReducer,\n  adminProductListReducer,\n  productCreateReducer,\n  productDeleteReducer,\n  productUpdateByAdminReducer,\n} from './productReducers';\nimport cartReducer from './cartReducers';\nimport {\n  authReducer,\n  userListReducer,\n  userUpdateReducer,\n  userDeleteReducer,\n  userUpdateByAdminReducer,\n} from './userReducers';\nimport {\n  placeOrderReducer,\n  orderDetailsReducer,\n  orderListReducer,\n  orderListByUserReducer,\n  orderListByProductReducer,\n  orderForProductByUserReducer,\n  orderUpdateIsDeliveredReducer,\n} from './orderReducers';\nimport {\n  getAllProductReviewsReducer,\n  getAllUserReviewsReducer,\n  createReviewReducer,\n  deleteReviewReducer,\n} from './reviewReducers';\nimport shippingReducer from './shippingReducer';\nimport paymentReducer from './paymentReducer';\nimport checkoutReducer from './checkoutReducer';\n\nconst getItemsFromStorage = (propertyType, itemType) => {\n  let items = propertyType === 'array' ? [] : null;\n  let shoppingapp = localStorage.getItem('shoppingapp');\n  if (shoppingapp) {\n    shoppingapp = JSON.parse(shoppingapp);\n    items = shoppingapp[itemType] || items;\n  }\n  return items;\n};\n\n// redux actually calls an indiividual reducer before the initialState in the store()\n// function is applied. So state in a reducer needs to have a default value\n// to fallback on while initialState (here below) is being applied to the reducer from store()\n\nexport const initialState = {\n  cart: { cartItems: getItemsFromStorage('array', 'cartItems') },\n  userAuth: {\n    loggedInUser: getItemsFromStorage('object', 'loggedInUser'),\n  },\n  shipping: {\n    shippingAddresses: getItemsFromStorage('array', 'shippingAddresses'),\n  },\n  payment: {\n    paymentMethods: getItemsFromStorage('array', 'paymentMethods'),\n  },\n  checkout: {\n    selectedshipping: getItemsFromStorage('object', 'selectedshipping'),\n    selectedpayment: getItemsFromStorage('object', 'selectedpayment'),\n  },\n};\n\nexport const rootReducer = combineReducers({\n  productsList: productListReducer,\n  productsListTop: productTopListReducer,\n  productDetails: productDetailsReducer,\n  adminProductList: adminProductListReducer,\n  productCreate: productCreateReducer,\n  productDelete: productDeleteReducer,\n  productUpdateByAdmin: productUpdateByAdminReducer,\n  cart: cartReducer,\n  userAuth: authReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  userDeleted: userDeleteReducer,\n  userUpdateByAdmin: userUpdateByAdminReducer,\n  shipping: shippingReducer,\n  payment: paymentReducer,\n  checkout: checkoutReducer,\n  orderCreated: placeOrderReducer,\n  orderDetails: orderDetailsReducer,\n  orderList: orderListReducer,\n  orderListByUser: orderListByUserReducer,\n  orderListByProduct: orderListByProductReducer,\n  orderForProductByUser: orderForProductByUserReducer,\n  orderUpdateIsDelivered: orderUpdateIsDeliveredReducer,\n  productReviews: getAllProductReviewsReducer,\n  userReviews: getAllUserReviewsReducer,\n  createReview: createReviewReducer,\n  deleteReview: deleteReviewReducer,\n});\n"]},"metadata":{},"sourceType":"module"}